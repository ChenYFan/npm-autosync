{"version":3,"file":"Artalk.mjs","sources":["../src/api/v2.ts","../../../node_modules/.pnpm/abortcontroller-polyfill@1.7.5/node_modules/abortcontroller-polyfill/dist/polyfill-patch-fetch.js","../src/api/fetch.ts","../src/api/index.ts","../../../node_modules/.pnpm/marked@11.2.0/node_modules/marked/lib/marked.esm.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/she.js","../../../node_modules/.pnpm/assignment@2.0.0/node_modules/assignment/assignment.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/lowercase.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/toMap.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/attributes.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/elements.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/parser.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/sanitizer.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/defaults.js","../../../node_modules/.pnpm/insane@2.6.2/node_modules/insane/insane.js","../src/lib/sanitizer.ts","../../../node_modules/.pnpm/hanabi@0.4.0/node_modules/hanabi/dist/hanabi.js","../src/lib/highlight.ts","../src/lib/marked-renderer.ts","../src/lib/marked.ts","../src/lib/merge-deep.ts","../src/data.ts","../src/i18n/en.ts","../src/i18n/zh-CN.ts","../src/i18n/external.ts","../src/lib/utils.ts","../src/i18n/index.ts","../src/lib/event-manager.ts","../src/defaults.ts","../src/config.ts","../src/lib/watch-conf.ts","../src/context.ts","../src/components/dialog.ts","../src/lib/ui.ts","../src/components/checker/captcha-renders.ts","../src/components/checker/captcha.ts","../src/components/checker/admin.ts","../src/components/checker/index.ts","../src/lib/component.ts","../src/editor/editor.html?raw","../src/editor/ui.ts","../src/plugins/editor/_plug.ts","../src/plugins/editor/mover.ts","../src/editor/state.ts","../src/editor/editor.ts","../src/layer/sidebar-layer.html?raw","../src/layer/sidebar-layer.ts","../src/list/list.html?raw","../src/list/nest.ts","../src/list/layout/nest.ts","../src/list/layout/flat.ts","../src/list/layout/index.ts","../src/lib/detect.ts","../src/comment/height-limit.ts","../src/comment/comment.html?raw","../src/comment/renders/avatar.ts","../src/comment/renders/header.ts","../src/comment/renders/content.ts","../src/comment/renders/reply-at.ts","../src/comment/renders/reply-to.ts","../src/comment/renders/pending.ts","../src/components/action-btn.ts","../src/comment/renders/actions.ts","../src/comment/renders/index.ts","../src/comment/render.ts","../src/comment/actions.ts","../src/comment/comment-node.ts","../src/list/comment.ts","../src/components/read-more-btn.ts","../src/list/paginator/read-more.ts","../src/components/pagination.ts","../src/list/paginator/up-down.ts","../src/list/page.ts","../src/list/list.ts","../src/layer/scrollbar-helper.ts","../src/layer/layer.ts","../src/layer/wrap.ts","../src/layer/layer-manager.ts","../src/lib/user.ts","../src/service.ts","../src/components/error-dialog.ts","../src/plugins/conf-remoter.ts","../src/plugins/markdown.ts","../src/plugins/editor/local-storage.ts","../src/plugins/editor/textarea.ts","../src/plugins/editor/submit-btn.ts","../src/plugins/editor/submit-add.ts","../src/plugins/editor/submit.ts","../src/plugins/editor/state-reply.ts","../src/plugins/editor/state-edit.ts","../src/plugins/editor/closable.ts","../src/plugins/editor/header-event.ts","../src/plugins/editor/header-user.ts","../src/plugins/editor/header-link.ts","../src/plugins/editor/emoticons.ts","../src/plugins/editor/upload.ts","../src/plugins/editor/preview.ts","../src/plugins/editor/index.ts","../src/plugins/editor/_kit.ts","../src/plugins/editor-kit.ts","../src/plugins/list/with-editor.ts","../src/plugins/list/unread.ts","../src/plugins/list/count.ts","../src/plugins/list/sidebar-btn.ts","../src/plugins/list/unread-badge.ts","../src/plugins/list/goto-dispatcher.ts","../src/plugins/list/goto-focus.ts","../src/plugins/list/copyright.ts","../src/plugins/list/no-comment.ts","../src/plugins/list/dropdown.ts","../src/plugins/list/time-ticking.ts","../src/plugins/list/error-dialog.ts","../src/plugins/list/loading.ts","../src/plugins/list/fetch.ts","../src/plugins/list/reach-bottom.ts","../src/plugins/list/goto-first.ts","../src/plugins/list/index.ts","../src/plugins/notifies.ts","../src/plugins/stat.ts","../src/plugins/version-check.ts","../src/plugins/admin-only-elem.ts","../src/plugins/dark-mode.ts","../src/plugins/index.ts","../src/artalk.ts","../src/main.ts"],"sourcesContent":["/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n\nexport interface CommonApiVersionData {\n  app: string\n  commit_hash: string\n  version: string\n}\n\nexport interface CommonConfData {\n  frontend_conf: CommonMap\n  version: CommonApiVersionData\n}\n\nexport interface CommonJSONResult {\n  /** Data */\n  data: any\n  /** Message */\n  msg: string\n}\n\nexport type CommonMap = Record<string, any>\n\nexport interface EntityCookedComment {\n  badge_color: string\n  badge_name: string\n  content: string\n  content_marked: string\n  date: string\n  email_encrypted: string\n  id: number\n  ip_region: string\n  is_allow_reply: boolean\n  is_collapsed: boolean\n  is_pending: boolean\n  is_pinned: boolean\n  link: string\n  nick: string\n  page_key: string\n  page_url: string\n  rid: number\n  site_name: string\n  ua: string\n  user_id: number\n  visible: boolean\n  vote_down: number\n  vote_up: number\n}\n\nexport interface EntityCookedNotify {\n  comment_id: number\n  id: number\n  is_emailed: boolean\n  is_read: boolean\n  read_link: string\n  user_id: number\n}\n\nexport interface EntityCookedPage {\n  admin_only: boolean\n  id: number\n  key: string\n  pv: number\n  site_name: string\n  title: string\n  url: string\n  vote_down: number\n  vote_up: number\n}\n\nexport interface EntityCookedSite {\n  first_url: string\n  id: number\n  name: string\n  urls: string[]\n  urls_raw: string\n}\n\nexport interface EntityCookedUser {\n  badge_color: string\n  badge_name: string\n  email: string\n  id: number\n  is_admin: boolean\n  link: string\n  name: string\n  receive_email: boolean\n}\n\nexport interface EntityCookedUserForAdmin {\n  badge_color: string\n  badge_name: string\n  comment_count: number\n  email: string\n  id: number\n  is_admin: boolean\n  is_in_conf: boolean\n  last_ip: string\n  last_ua: string\n  link: string\n  name: string\n  receive_email: boolean\n}\n\nexport type HandlerMap = Record<string, any>\n\nexport interface HandlerParamsCaptchaVerify {\n  /** The captcha value to check */\n  value: string\n}\n\nexport interface HandlerParamsCommentCreate {\n  /** The comment content */\n  content: string\n  /** The comment email */\n  email: string\n  /** The comment link */\n  link?: string\n  /** The comment name */\n  name: string\n  /** The comment page_key */\n  page_key: string\n  /** The comment page_title */\n  page_title?: string\n  /** The comment rid */\n  rid?: number\n  /** The site name of your content scope */\n  site_name: string\n  /** The comment ua */\n  ua?: string\n}\n\nexport interface HandlerParamsCommentUpdate {\n  /** The comment content */\n  content: string\n  /** The comment email */\n  email?: string\n  /** The comment ip */\n  ip?: string\n  /** The comment is_collapsed */\n  is_collapsed: boolean\n  /** The comment is_pending */\n  is_pending: boolean\n  /** The comment is_pinned */\n  is_pinned: boolean\n  /** The comment link */\n  link?: string\n  /** The comment nick */\n  nick?: string\n  /** The comment page_key */\n  page_key: string\n  /** The comment rid */\n  rid: number\n  /** The site name of your content scope */\n  site_name: string\n  /** The comment ua */\n  ua: string\n}\n\nexport interface HandlerParamsEmailSend {\n  /** The body of email */\n  body: string\n  /** The subject of email */\n  subject: string\n  /** The email address of the receiver */\n  to_addr: string\n}\n\nexport interface HandlerParamsNotifyReadAll {\n  /** The user email */\n  email: string\n  /** The username */\n  name: string\n}\n\nexport interface HandlerParamsPageFetchAll {\n  /** If not empty, only fetch pages of this site */\n  site_name?: string\n}\n\nexport interface HandlerParamsPagePV {\n  /** The page key */\n  page_key: string\n  /** The page title */\n  page_title?: string\n  /** The site name of your content scope */\n  site_name?: string\n}\n\nexport interface HandlerParamsPageUpdate {\n  /** Updated page admin_only option */\n  admin_only: boolean\n  /** Updated page key */\n  key: string\n  /** The site name of your content scope */\n  site_name: string\n  /** Updated page title */\n  title: string\n}\n\nexport interface HandlerParamsSettingApply {\n  /** The content of the config file in YAML format */\n  yaml: string\n}\n\nexport interface HandlerParamsSiteCreate {\n  /** The site name */\n  name: string\n  /** The site urls */\n  urls: string[]\n}\n\nexport interface HandlerParamsSiteUpdate {\n  /** Updated site name */\n  name: string\n  /** Updated site urls */\n  urls: string[]\n}\n\nexport interface HandlerParamsTransferImport {\n  /** Automatically answer yes for all questions. */\n  assumeyes?: boolean\n  /** The JSON data */\n  json_data?: string\n  /** The JSON file path */\n  json_file?: string\n  /** The target site name */\n  target_site_name?: string\n  /** The target site url */\n  target_site_url?: string\n  /** Enable URL resolver */\n  url_resolver?: boolean\n}\n\nexport interface HandlerParamsUserCreate {\n  /** The user badge color (hex format) */\n  badge_color?: string\n  /** The user badge name */\n  badge_name?: string\n  /** The user email */\n  email: string\n  /** The user is an admin */\n  is_admin: boolean\n  /** The user link */\n  link?: string\n  /** The user name */\n  name: string\n  /** The user password */\n  password?: string\n  /** The user receive email */\n  receive_email: boolean\n}\n\nexport interface HandlerParamsUserLogin {\n  /** The user email */\n  email: string\n  /** The username */\n  name?: string\n  /** The user password */\n  password: string\n}\n\nexport interface HandlerParamsUserUpdate {\n  /** The user badge color (hex format) */\n  badge_color?: string\n  /** The user badge name */\n  badge_name?: string\n  /** The user email */\n  email: string\n  /** The user is an admin */\n  is_admin: boolean\n  /** The user link */\n  link?: string\n  /** The user name */\n  name: string\n  /** The user password */\n  password?: string\n  /** The user receive email */\n  receive_email: boolean\n}\n\nexport interface HandlerParamsVote {\n  /** The user email */\n  email?: string\n  /** The username */\n  name?: string\n}\n\nexport interface HandlerResponseAdminUserList {\n  count: number\n  users: EntityCookedUserForAdmin[]\n}\n\nexport interface HandlerResponseCaptchaGet {\n  img_data: string\n}\n\nexport interface HandlerResponseCaptchaStatus {\n  is_pass: boolean\n}\n\nexport interface HandlerResponseCommentCreate {\n  badge_color: string\n  badge_name: string\n  content: string\n  content_marked: string\n  date: string\n  email_encrypted: string\n  id: number\n  ip_region: string\n  is_allow_reply: boolean\n  is_collapsed: boolean\n  is_pending: boolean\n  is_pinned: boolean\n  link: string\n  nick: string\n  page_key: string\n  page_url: string\n  rid: number\n  site_name: string\n  ua: string\n  user_id: number\n  visible: boolean\n  vote_down: number\n  vote_up: number\n}\n\nexport interface HandlerResponseCommentGet {\n  /** The comment detail */\n  comment: EntityCookedComment\n  /** The reply comment if exists (like reply) */\n  reply_comment: EntityCookedComment\n}\n\nexport interface HandlerResponseCommentList {\n  comments: EntityCookedComment[]\n  count: number\n  page: EntityCookedPage\n  roots_count: number\n}\n\nexport interface HandlerResponseCommentUpdate {\n  badge_color: string\n  badge_name: string\n  content: string\n  content_marked: string\n  date: string\n  email_encrypted: string\n  id: number\n  ip_region: string\n  is_allow_reply: boolean\n  is_collapsed: boolean\n  is_pending: boolean\n  is_pinned: boolean\n  link: string\n  nick: string\n  page_key: string\n  page_url: string\n  rid: number\n  site_name: string\n  ua: string\n  user_id: number\n  visible: boolean\n  vote_down: number\n  vote_up: number\n}\n\nexport interface HandlerResponseNotifyList {\n  count: number\n  notifies: EntityCookedNotify[]\n}\n\nexport interface HandlerResponsePageFetch {\n  admin_only: boolean\n  id: number\n  key: string\n  pv: number\n  site_name: string\n  title: string\n  url: string\n  vote_down: number\n  vote_up: number\n}\n\nexport interface HandlerResponsePageFetchStatus {\n  /** The number of pages that have been fetched */\n  done: number\n  /** If the task is in progress */\n  is_progress: boolean\n  /** The message of the task status */\n  msg: string\n  /** The total number of pages */\n  total: number\n}\n\nexport interface HandlerResponsePageList {\n  count: number\n  pages: EntityCookedPage[]\n}\n\nexport interface HandlerResponsePagePV {\n  pv: number\n}\n\nexport interface HandlerResponsePageUpdate {\n  admin_only: boolean\n  id: number\n  key: string\n  pv: number\n  site_name: string\n  title: string\n  url: string\n  vote_down: number\n  vote_up: number\n}\n\nexport interface HandlerResponseSettingGet {\n  yaml: string\n}\n\nexport interface HandlerResponseSettingTemplate {\n  yaml: string\n}\n\nexport interface HandlerResponseSiteCreate {\n  first_url: string\n  id: number\n  name: string\n  urls: string[]\n  urls_raw: string\n}\n\nexport interface HandlerResponseSiteList {\n  count: number\n  sites: EntityCookedSite[]\n}\n\nexport interface HandlerResponseSiteUpdate {\n  first_url: string\n  id: number\n  name: string\n  urls: string[]\n  urls_raw: string\n}\n\nexport interface HandlerResponseTransferExport {\n  /** The exported data which is a JSON string */\n  artrans: string\n}\n\nexport interface HandlerResponseTransferUpload {\n  /** The uploaded file name which can be used to import */\n  filename: string\n}\n\nexport interface HandlerResponseUpload {\n  file_name: string\n  file_type: string\n  public_url: string\n}\n\nexport interface HandlerResponseUserCreate {\n  badge_color: string\n  badge_name: string\n  comment_count: number\n  email: string\n  id: number\n  is_admin: boolean\n  is_in_conf: boolean\n  last_ip: string\n  last_ua: string\n  link: string\n  name: string\n  receive_email: boolean\n}\n\nexport interface HandlerResponseUserInfo {\n  is_login: boolean\n  notifies: EntityCookedNotify[]\n  notifies_count: number\n  user: EntityCookedUser\n}\n\nexport interface HandlerResponseUserLogin {\n  token: string\n  user: EntityCookedUser\n}\n\nexport interface HandlerResponseUserStatus {\n  is_admin: boolean\n  is_login: boolean\n}\n\nexport interface HandlerResponseUserUpdate {\n  badge_color: string\n  badge_name: string\n  comment_count: number\n  email: string\n  id: number\n  is_admin: boolean\n  is_in_conf: boolean\n  last_ip: string\n  last_ua: string\n  link: string\n  name: string\n  receive_email: boolean\n}\n\nexport interface HandlerResponseVote {\n  down: number\n  up: number\n}\n\nexport type QueryParamsType = Record<string | number, any>\nexport type ResponseFormat = keyof Omit<Body, 'body' | 'bodyUsed'>\n\nexport interface FullRequestParams extends Omit<RequestInit, 'body'> {\n  /** set parameter to `true` for call `securityWorker` for this request */\n  secure?: boolean\n  /** request path */\n  path: string\n  /** content type of request body */\n  type?: ContentType\n  /** query params */\n  query?: QueryParamsType\n  /** format of response (i.e. response.json() -> format: \"json\") */\n  format?: ResponseFormat\n  /** request body */\n  body?: unknown\n  /** base url */\n  baseUrl?: string\n  /** request cancellation token */\n  cancelToken?: CancelToken\n}\n\nexport type RequestParams = Omit<FullRequestParams, 'body' | 'method' | 'query' | 'path'>\n\nexport interface ApiConfig<SecurityDataType = unknown> {\n  baseUrl?: string\n  baseApiParams?: Omit<RequestParams, 'baseUrl' | 'cancelToken' | 'signal'>\n  securityWorker?: (securityData: SecurityDataType | null) => Promise<RequestParams | void> | RequestParams | void\n  customFetch?: typeof fetch\n}\n\nexport interface HttpResponse<D extends unknown, E extends unknown = unknown> extends Response {\n  data: D\n  error: E\n}\n\ntype CancelToken = Symbol | string | number\n\nexport enum ContentType {\n  Json = 'application/json',\n  FormData = 'multipart/form-data',\n  UrlEncoded = 'application/x-www-form-urlencoded',\n  Text = 'text/plain',\n}\n\nexport class HttpClient<SecurityDataType = unknown> {\n  public baseUrl: string = '/api/v2'\n  private securityData: SecurityDataType | null = null\n  private securityWorker?: ApiConfig<SecurityDataType>['securityWorker']\n  private abortControllers = new Map<CancelToken, AbortController>()\n  private customFetch = (...fetchParams: Parameters<typeof fetch>) => fetch(...fetchParams)\n\n  private baseApiParams: RequestParams = {\n    credentials: 'same-origin',\n    headers: {},\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n  }\n\n  constructor(apiConfig: ApiConfig<SecurityDataType> = {}) {\n    Object.assign(this, apiConfig)\n  }\n\n  public setSecurityData = (data: SecurityDataType | null) => {\n    this.securityData = data\n  }\n\n  protected encodeQueryParam(key: string, value: any) {\n    const encodedKey = encodeURIComponent(key)\n    return `${encodedKey}=${encodeURIComponent(typeof value === 'number' ? value : `${value}`)}`\n  }\n\n  protected addQueryParam(query: QueryParamsType, key: string) {\n    return this.encodeQueryParam(key, query[key])\n  }\n\n  protected addArrayQueryParam(query: QueryParamsType, key: string) {\n    const value = query[key]\n    return value.map((v: any) => this.encodeQueryParam(key, v)).join('&')\n  }\n\n  protected toQueryString(rawQuery?: QueryParamsType): string {\n    const query = rawQuery || {}\n    const keys = Object.keys(query).filter((key) => 'undefined' !== typeof query[key])\n    return keys\n      .map((key) => (Array.isArray(query[key]) ? this.addArrayQueryParam(query, key) : this.addQueryParam(query, key)))\n      .join('&')\n  }\n\n  protected addQueryParams(rawQuery?: QueryParamsType): string {\n    const queryString = this.toQueryString(rawQuery)\n    return queryString ? `?${queryString}` : ''\n  }\n\n  private contentFormatters: Record<ContentType, (input: any) => any> = {\n    [ContentType.Json]: (input: any) =>\n      input !== null && (typeof input === 'object' || typeof input === 'string') ? JSON.stringify(input) : input,\n    [ContentType.Text]: (input: any) => (input !== null && typeof input !== 'string' ? JSON.stringify(input) : input),\n    [ContentType.FormData]: (input: any) =>\n      Object.keys(input || {}).reduce((formData, key) => {\n        const property = input[key]\n        formData.append(\n          key,\n          property instanceof Blob\n            ? property\n            : typeof property === 'object' && property !== null\n            ? JSON.stringify(property)\n            : `${property}`,\n        )\n        return formData\n      }, new FormData()),\n    [ContentType.UrlEncoded]: (input: any) => this.toQueryString(input),\n  }\n\n  protected mergeRequestParams(params1: RequestParams, params2?: RequestParams): RequestParams {\n    return {\n      ...this.baseApiParams,\n      ...params1,\n      ...(params2 || {}),\n      headers: {\n        ...(this.baseApiParams.headers || {}),\n        ...(params1.headers || {}),\n        ...((params2 && params2.headers) || {}),\n      },\n    }\n  }\n\n  protected createAbortSignal = (cancelToken: CancelToken): AbortSignal | undefined => {\n    if (this.abortControllers.has(cancelToken)) {\n      const abortController = this.abortControllers.get(cancelToken)\n      if (abortController) {\n        return abortController.signal\n      }\n      return void 0\n    }\n\n    const abortController = new AbortController()\n    this.abortControllers.set(cancelToken, abortController)\n    return abortController.signal\n  }\n\n  public abortRequest = (cancelToken: CancelToken) => {\n    const abortController = this.abortControllers.get(cancelToken)\n\n    if (abortController) {\n      abortController.abort()\n      this.abortControllers.delete(cancelToken)\n    }\n  }\n\n  public request = async <T = any, E = any>({\n    body,\n    secure,\n    path,\n    type,\n    query,\n    format,\n    baseUrl,\n    cancelToken,\n    ...params\n  }: FullRequestParams): Promise<HttpResponse<T, E>> => {\n    const secureParams =\n      ((typeof secure === 'boolean' ? secure : this.baseApiParams.secure) &&\n        this.securityWorker &&\n        (await this.securityWorker(this.securityData))) ||\n      {}\n    const requestParams = this.mergeRequestParams(params, secureParams)\n    const queryString = query && this.toQueryString(query)\n    const payloadFormatter = this.contentFormatters[type || ContentType.Json]\n    const responseFormat = format || requestParams.format\n\n    return this.customFetch(`${baseUrl || this.baseUrl || ''}${path}${queryString ? `?${queryString}` : ''}`, {\n      ...requestParams,\n      headers: {\n        ...(requestParams.headers || {}),\n        ...(type && type !== ContentType.FormData ? { 'Content-Type': type } : {}),\n      },\n      signal: (cancelToken ? this.createAbortSignal(cancelToken) : requestParams.signal) || null,\n      body: typeof body === 'undefined' || body === null ? null : payloadFormatter(body),\n    }).then(async (response) => {\n      const r = response as HttpResponse<T, E>\n      r.data = null as unknown as T\n      r.error = null as unknown as E\n\n      const data = !responseFormat\n        ? r\n        : await response[responseFormat]()\n            .then((data) => {\n              if (r.ok) {\n                r.data = data\n              } else {\n                r.error = data\n              }\n              return r\n            })\n            .catch((e) => {\n              r.error = e\n              return r\n            })\n\n      if (cancelToken) {\n        this.abortControllers.delete(cancelToken)\n      }\n\n      if (!response.ok) throw data\n      return data\n    })\n  }\n}\n\n/**\n * @title Artalk API\n * @version 2.0\n * @license MIT (https://github.com/ArtalkJS/Artalk/blob/master/LICENSE)\n * @baseUrl /api/v2\n * @contact API Support <artalkjs@gmail.com> (https://artalk.js.org)\n *\n * Artalk is a modern comment system based on Golang.\n */\nexport class Api<SecurityDataType extends unknown> extends HttpClient<SecurityDataType> {\n  cache = {\n    /**\n * @description Flush all cache on the server\n *\n * @tags Cache\n * @name FlushCache\n * @summary Flush Cache\n * @request POST:/cache/flush\n * @secure\n * @response `200` `(HandlerMap & {\n    msg?: string,\n\n})` OK\n * @response `400` `(HandlerMap & {\n    msg?: string,\n\n})` Bad Request\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n */\n    flushCache: (params: RequestParams = {}) =>\n      this.request<\n        HandlerMap & {\n          msg?: string\n        },\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/cache/flush`,\n        method: 'POST',\n        secure: true,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n * @description Cache warming helps you to pre-load the cache to improve the performance of the first request\n *\n * @tags Cache\n * @name WarmUpCache\n * @summary Warm-Up Cache\n * @request POST:/cache/warm_up\n * @secure\n * @response `200` `(HandlerMap & {\n    msg?: string,\n\n})` OK\n * @response `400` `(HandlerMap & {\n    msg?: string,\n\n})` Bad Request\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n */\n    warmUpCache: (params: RequestParams = {}) =>\n      this.request<\n        HandlerMap & {\n          msg?: string\n        },\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/cache/warm_up`,\n        method: 'POST',\n        secure: true,\n        format: 'json',\n        ...params,\n      }),\n  }\n  captcha = {\n    /**\n * @description Get a base64 encoded captcha image or a HTML page to verify for user\n *\n * @tags Captcha\n * @name GetCaptcha\n * @summary Get Captcha\n * @request GET:/captcha\n * @response `200` `HandlerResponseCaptchaGet` OK\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    getCaptcha: (params: RequestParams = {}) =>\n      this.request<\n        HandlerResponseCaptchaGet,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/captcha`,\n        method: 'GET',\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n     * @description Get the status of the user's captcha verification\n     *\n     * @tags Captcha\n     * @name GetCaptchaStatus\n     * @summary Get Captcha Status\n     * @request GET:/captcha/status\n     * @response `200` `HandlerResponseCaptchaStatus` OK\n     */\n    getCaptchaStatus: (params: RequestParams = {}) =>\n      this.request<HandlerResponseCaptchaStatus, any>({\n        path: `/captcha/status`,\n        method: 'GET',\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n * @description Verify user enters correct captcha code\n *\n * @tags Captcha\n * @name VerifyCaptcha\n * @summary Verify Captcha\n * @request POST:/captcha/verify\n * @response `200` `HandlerMap` OK\n * @response `403` `(HandlerMap & {\n    img_data?: string,\n\n})` Forbidden\n */\n    verifyCaptcha: (data: HandlerParamsCaptchaVerify, params: RequestParams = {}) =>\n      this.request<\n        HandlerMap,\n        HandlerMap & {\n          img_data?: string\n        }\n      >({\n        path: `/captcha/verify`,\n        method: 'POST',\n        body: data,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n  }\n  comments = {\n    /**\n * @description Get a list of comments by some conditions\n *\n * @tags Comment\n * @name GetComments\n * @summary Get Comment List\n * @request GET:/comments\n * @secure\n * @response `200` `HandlerResponseCommentList` OK\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    getComments: (\n      query: {\n        /** The user email */\n        email?: string\n        /** Enable flat_mode */\n        flat_mode?: boolean\n        /** The limit for pagination */\n        limit?: number\n        /** The username */\n        name?: string\n        /** The offset for pagination */\n        offset?: number\n        /** The comment page_key */\n        page_key: string\n        /** The scope of comments */\n        scope?: 'page' | 'user' | 'site'\n        /** Search keywords */\n        search?: string\n        /** The site name of your content scope */\n        site_name?: string\n        /** Sort by condition */\n        sort_by?: 'date_asc' | 'date_desc' | 'vote'\n        /** Message center show type */\n        type?: 'all' | 'mentions' | 'mine' | 'pending'\n        /** Only show comments by admin */\n        view_only_admin?: boolean\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<\n        HandlerResponseCommentList,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/comments`,\n        method: 'GET',\n        query: query,\n        secure: true,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n * @description Create a new comment\n *\n * @tags Comment\n * @name CreateComment\n * @summary Create Comment\n * @request POST:/comments\n * @secure\n * @response `200` `HandlerResponseCommentCreate` OK\n * @response `400` `(HandlerMap & {\n    msg?: string,\n\n})` Bad Request\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    createComment: (comment: HandlerParamsCommentCreate, params: RequestParams = {}) =>\n      this.request<\n        HandlerResponseCommentCreate,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/comments`,\n        method: 'POST',\n        body: comment,\n        secure: true,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n * @description Get the detail of a comment by comment id\n *\n * @tags Comment\n * @name GetComment\n * @summary Get a comment\n * @request GET:/comments/{id}\n * @response `200` `HandlerResponseCommentGet` OK\n * @response `404` `(HandlerMap & {\n    msg?: string,\n\n})` Not Found\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    getComment: (id: number, params: RequestParams = {}) =>\n      this.request<\n        HandlerResponseCommentGet,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/comments/${id}`,\n        method: 'GET',\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n * @description Update a specific comment\n *\n * @tags Comment\n * @name UpdateComment\n * @summary Update Comment\n * @request PUT:/comments/{id}\n * @secure\n * @response `200` `HandlerResponseCommentUpdate` OK\n * @response `400` `(HandlerMap & {\n    msg?: string,\n\n})` Bad Request\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n * @response `404` `(HandlerMap & {\n    msg?: string,\n\n})` Not Found\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    updateComment: (id: number, comment: HandlerParamsCommentUpdate, params: RequestParams = {}) =>\n      this.request<\n        HandlerResponseCommentUpdate,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/comments/${id}`,\n        method: 'PUT',\n        body: comment,\n        secure: true,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n * @description Delete a specific comment\n *\n * @tags Comment\n * @name DeleteComment\n * @summary Delete Comment\n * @request DELETE:/comments/{id}\n * @secure\n * @response `200` `HandlerMap` OK\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n * @response `404` `(HandlerMap & {\n    msg?: string,\n\n})` Not Found\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    deleteComment: (id: number, params: RequestParams = {}) =>\n      this.request<\n        HandlerMap,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/comments/${id}`,\n        method: 'DELETE',\n        secure: true,\n        format: 'json',\n        ...params,\n      }),\n  }\n  conf = {\n    /**\n     * @description Get System Configs for UI\n     *\n     * @tags System\n     * @name Conf\n     * @summary Get System Configs\n     * @request GET:/conf\n     * @response `200` `CommonConfData` OK\n     */\n    conf: (params: RequestParams = {}) =>\n      this.request<CommonConfData, any>({\n        path: `/conf`,\n        method: 'GET',\n        format: 'json',\n        ...params,\n      }),\n  }\n  notifies = {\n    /**\n * @description Get a list of notifies for user\n *\n * @tags Notify\n * @name GetNotifies\n * @summary Get Notifies\n * @request GET:/notifies\n * @response `200` `HandlerResponseNotifyList` OK\n * @response `400` `(HandlerMap & {\n    msg?: string,\n\n})` Bad Request\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    getNotifies: (\n      query: {\n        /** The user email */\n        email: string\n        /** The user name */\n        name: string\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<\n        HandlerResponseNotifyList,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/notifies`,\n        method: 'GET',\n        query: query,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n * @description Mark all notifies as read for user\n *\n * @tags Notify\n * @name MarkAllNotifyRead\n * @summary Mark All Notifies as Read\n * @request POST:/notifies/read\n * @response `200` `HandlerMap` OK\n * @response `400` `(HandlerMap & {\n    msg?: string,\n\n})` Bad Request\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    markAllNotifyRead: (options: HandlerParamsNotifyReadAll, params: RequestParams = {}) =>\n      this.request<\n        HandlerMap,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/notifies/read`,\n        method: 'POST',\n        body: options,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n * @description Mark specific notification as read for user\n *\n * @tags Notify\n * @name MarkNotifyRead\n * @summary Mark Notify as Read\n * @request POST:/notifies/{comment_id}/{notify_key}\n * @response `200` `HandlerMap` OK\n * @response `400` `(HandlerMap & {\n    msg?: string,\n\n})` Bad Request\n * @response `404` `(HandlerMap & {\n    msg?: string,\n\n})` Not Found\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    markNotifyRead: (commentId: number, notifyKey: string, params: RequestParams = {}) =>\n      this.request<\n        HandlerMap,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/notifies/${commentId}/${notifyKey}`,\n        method: 'POST',\n        format: 'json',\n        ...params,\n      }),\n  }\n  pages = {\n    /**\n * @description Get a list of pages by some conditions\n *\n * @tags Page\n * @name GetPages\n * @summary Get Page List\n * @request GET:/pages\n * @secure\n * @response `200` `HandlerResponsePageList` OK\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n */\n    getPages: (\n      query?: {\n        /** The limit for pagination */\n        limit?: number\n        /** The offset for pagination */\n        offset?: number\n        /** The site name of your content scope */\n        site_name?: string\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<\n        HandlerResponsePageList,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/pages`,\n        method: 'GET',\n        query: query,\n        secure: true,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n * @description Fetch the data of all pages\n *\n * @tags Page\n * @name FetchAllPages\n * @summary Fetch All Pages Data\n * @request POST:/pages/fetch\n * @secure\n * @response `200` `HandlerMap` OK\n * @response `400` `(HandlerMap & {\n    msg?: string,\n\n})` Bad Request\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    fetchAllPages: (options: HandlerParamsPageFetchAll, params: RequestParams = {}) =>\n      this.request<\n        HandlerMap,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/pages/fetch`,\n        method: 'POST',\n        body: options,\n        secure: true,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n     * @description Get the status of the task of fetching all pages\n     *\n     * @tags Page\n     * @name GetPageFetchStatus\n     * @summary Get Pages Fetch Status\n     * @request GET:/pages/fetch/status\n     * @secure\n     * @response `200` `HandlerResponsePageFetchStatus` OK\n     */\n    getPageFetchStatus: (params: RequestParams = {}) =>\n      this.request<HandlerResponsePageFetchStatus, any>({\n        path: `/pages/fetch/status`,\n        method: 'GET',\n        secure: true,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n     * @description Increase and get the number of page views\n     *\n     * @tags Page\n     * @name LogPv\n     * @summary Increase Page Views (PV)\n     * @request POST:/pages/pv\n     * @response `200` `HandlerResponsePagePV` OK\n     */\n    logPv: (page: HandlerParamsPagePV, params: RequestParams = {}) =>\n      this.request<HandlerResponsePagePV, any>({\n        path: `/pages/pv`,\n        method: 'POST',\n        body: page,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n * @description Update a specific page\n *\n * @tags Page\n * @name UpdatePage\n * @summary Update Page\n * @request PUT:/pages/{id}\n * @secure\n * @response `200` `HandlerResponsePageUpdate` OK\n * @response `400` `(HandlerMap & {\n    msg?: string,\n\n})` Bad Request\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n * @response `404` `(HandlerMap & {\n    msg?: string,\n\n})` Not Found\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    updatePage: (id: number, page: HandlerParamsPageUpdate, params: RequestParams = {}) =>\n      this.request<\n        HandlerResponsePageUpdate,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/pages/${id}`,\n        method: 'PUT',\n        body: page,\n        secure: true,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n * @description Delete a specific page\n *\n * @tags Page\n * @name DeletePage\n * @summary Delete Page\n * @request DELETE:/pages/{id}\n * @secure\n * @response `200` `HandlerMap` OK\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n * @response `404` `(HandlerMap & {\n    msg?: string,\n\n})` Not Found\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    deletePage: (id: number, params: RequestParams = {}) =>\n      this.request<\n        HandlerMap,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/pages/${id}`,\n        method: 'DELETE',\n        secure: true,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n * @description Fetch the data of a specific page\n *\n * @tags Page\n * @name FetchPage\n * @summary Fetch Page Data\n * @request POST:/pages/{id}/fetch\n * @secure\n * @response `200` `HandlerResponsePageFetch` OK\n * @response `404` `(HandlerMap & {\n    msg?: string,\n\n})` Not Found\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    fetchPage: (id: number, params: RequestParams = {}) =>\n      this.request<\n        HandlerResponsePageFetch,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/pages/${id}/fetch`,\n        method: 'POST',\n        secure: true,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n  }\n  sendEmail = {\n    /**\n * @description Send an email to test the email sender\n *\n * @tags System\n * @name SendEmail\n * @summary Send Email\n * @request POST:/send_email\n * @secure\n * @response `200` `HandlerMap` OK\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n * @response `500` `HandlerMap` Internal Server Error\n */\n    sendEmail: (email: HandlerParamsEmailSend, params: RequestParams = {}) =>\n      this.request<\n        HandlerMap,\n        | (HandlerMap & {\n            msg?: string\n          })\n        | HandlerMap\n      >({\n        path: `/send_email`,\n        method: 'POST',\n        body: email,\n        secure: true,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n  }\n  settings = {\n    /**\n * @description Get settings from app config file\n *\n * @tags System\n * @name GetSettings\n * @summary Get Settings\n * @request GET:/settings\n * @secure\n * @response `200` `HandlerResponseSettingGet` OK\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    getSettings: (params: RequestParams = {}) =>\n      this.request<\n        HandlerResponseSettingGet,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/settings`,\n        method: 'GET',\n        secure: true,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n * @description Apply settings and restart the server\n *\n * @tags System\n * @name ApplySettings\n * @summary Save and apply Settings\n * @request PUT:/settings\n * @secure\n * @response `200` `HandlerMap` OK\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    applySettings: (settings: HandlerParamsSettingApply, params: RequestParams = {}) =>\n      this.request<\n        HandlerMap,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/settings`,\n        method: 'PUT',\n        body: settings,\n        secure: true,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n     * @description Get config templates in different languages for rendering the settings page in the frontend\n     *\n     * @tags System\n     * @name GetSettingsTemplate\n     * @summary Get Settings Template\n     * @request GET:/settings/template/{locale}\n     * @secure\n     * @response `200` `HandlerResponseSettingTemplate` OK\n     */\n    getSettingsTemplate: (locale: string, params: RequestParams = {}) =>\n      this.request<HandlerResponseSettingTemplate, any>({\n        path: `/settings/template/${locale}`,\n        method: 'GET',\n        secure: true,\n        format: 'json',\n        ...params,\n      }),\n  }\n  sites = {\n    /**\n     * @description Get a list of sites by some conditions\n     *\n     * @tags Site\n     * @name GetSites\n     * @summary Get Site List\n     * @request GET:/sites\n     * @secure\n     * @response `200` `HandlerResponseSiteList` OK\n     */\n    getSites: (params: RequestParams = {}) =>\n      this.request<HandlerResponseSiteList, any>({\n        path: `/sites`,\n        method: 'GET',\n        secure: true,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n * @description Create a new site\n *\n * @tags Site\n * @name CreateSite\n * @summary Create Site\n * @request POST:/sites\n * @secure\n * @response `200` `HandlerResponseSiteCreate` OK\n * @response `400` `(HandlerMap & {\n    msg?: string,\n\n})` Bad Request\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    createSite: (site: HandlerParamsSiteCreate, params: RequestParams = {}) =>\n      this.request<\n        HandlerResponseSiteCreate,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/sites`,\n        method: 'POST',\n        body: site,\n        secure: true,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n     * @description Update a specific site\n     *\n     * @tags Site\n     * @name UpdateSite\n     * @summary Update Site\n     * @request PUT:/sites/{id}\n     * @secure\n     * @response `200` `HandlerResponseSiteUpdate` OK\n     */\n    updateSite: (id: number, site: HandlerParamsSiteUpdate, params: RequestParams = {}) =>\n      this.request<HandlerResponseSiteUpdate, any>({\n        path: `/sites/${id}`,\n        method: 'PUT',\n        body: site,\n        secure: true,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n * @description Delete a specific site\n *\n * @tags Site\n * @name DeleteSite\n * @summary Site Delete\n * @request DELETE:/sites/{id}\n * @secure\n * @response `200` `HandlerMap` OK\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n * @response `404` `(HandlerMap & {\n    msg?: string,\n\n})` Not Found\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    deleteSite: (id: number, params: RequestParams = {}) =>\n      this.request<\n        HandlerMap,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/sites/${id}`,\n        method: 'DELETE',\n        secure: true,\n        format: 'json',\n        ...params,\n      }),\n  }\n  stats = {\n    /**\n * @description Get the statistics of various data analysis\n *\n * @tags Statistic\n * @name GetStats\n * @summary Statistic\n * @request GET:/stats/{type}\n * @response `200` `CommonJSONResult` OK\n * @response `400` `(HandlerMap & {\n    msg?: string,\n\n})` Bad Request\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n * @response `404` `(HandlerMap & {\n    msg?: string,\n\n})` Not Found\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    getStats: (\n      type:\n        | 'latest_comments'\n        | 'latest_pages'\n        | 'pv_most_pages'\n        | 'comment_most_pages'\n        | 'page_pv'\n        | 'site_pv'\n        | 'page_comment'\n        | 'site_comment'\n        | 'rand_comments'\n        | 'rand_pages',\n      query?: {\n        /** The limit for pagination */\n        limit?: number\n        /** multiple page keys separated by commas */\n        page_keys?: string\n        /** The site name of your content scope */\n        site_name?: string\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<\n        CommonJSONResult,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/stats/${type}`,\n        method: 'GET',\n        query: query,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n  }\n  transfer = {\n    /**\n * @description Export data from Artalk\n *\n * @tags Transfer\n * @name ExportArtrans\n * @summary Export Artrans\n * @request GET:/transfer/export\n * @secure\n * @response `200` `HandlerResponseTransferExport` OK\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    exportArtrans: (params: RequestParams = {}) =>\n      this.request<\n        HandlerResponseTransferExport,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/transfer/export`,\n        method: 'GET',\n        secure: true,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n     * @description Import data to Artalk\n     *\n     * @tags Transfer\n     * @name ImportArtrans\n     * @summary Import Artrans\n     * @request POST:/transfer/import\n     * @secure\n     * @response `200` `string` OK\n     */\n    importArtrans: (data: HandlerParamsTransferImport, params: RequestParams = {}) =>\n      this.request<string, any>({\n        path: `/transfer/import`,\n        method: 'POST',\n        body: data,\n        secure: true,\n        type: ContentType.Json,\n        ...params,\n      }),\n\n    /**\n * @description Upload a file to prepare to import\n *\n * @tags Transfer\n * @name UploadArtrans\n * @summary Upload Artrans\n * @request POST:/transfer/upload\n * @secure\n * @response `200` `(HandlerResponseTransferUpload & {\n    filename?: string,\n\n})` OK\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    uploadArtrans: (\n      data: {\n        /**\n         * Upload file in preparation for import task\n         * @format binary\n         */\n        file: File\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<\n        HandlerResponseTransferUpload & {\n          filename?: string\n        },\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/transfer/upload`,\n        method: 'POST',\n        body: data,\n        secure: true,\n        type: ContentType.FormData,\n        format: 'json',\n        ...params,\n      }),\n  }\n  upload = {\n    /**\n * @description Upload file from this endpoint\n *\n * @tags Upload\n * @name Upload\n * @summary Upload\n * @request POST:/upload\n * @secure\n * @response `200` `HandlerResponseUpload` OK\n * @response `400` `(HandlerMap & {\n    msg?: string,\n\n})` Bad Request\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    upload: (\n      data: {\n        /**\n         * Upload file\n         * @format binary\n         */\n        file: File\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<\n        HandlerResponseUpload,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/upload`,\n        method: 'POST',\n        body: data,\n        secure: true,\n        type: ContentType.FormData,\n        format: 'json',\n        ...params,\n      }),\n  }\n  user = {\n    /**\n * @description Get user info to prepare for login or check current user status\n *\n * @tags Account\n * @name GetUser\n * @summary Get User Info\n * @request GET:/user\n * @secure\n * @response `200` `HandlerResponseUserInfo` OK\n * @response `400` `(HandlerMap & {\n    msg?: string,\n\n})` Bad Request\n */\n    getUser: (\n      query?: {\n        /** The user email */\n        email?: string\n        /** The username */\n        name?: string\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<\n        HandlerResponseUserInfo,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/user`,\n        method: 'GET',\n        query: query,\n        secure: true,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n * @description Login user by name or email\n *\n * @tags Account\n * @name Login\n * @summary Get Access Token\n * @request POST:/user/access_token\n * @response `200` `HandlerResponseUserLogin` OK\n * @response `400` `(HandlerMap & {\n    \" data\"?: {\n    need_name_select?: (string)[],\n\n},\n    msg?: string,\n\n})` Multiple users with the same email address are matched\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    login: (user: HandlerParamsUserLogin, params: RequestParams = {}) =>\n      this.request<\n        HandlerResponseUserLogin,\n        | (HandlerMap & {\n            ' data'?: {\n              need_name_select?: string[]\n            }\n            msg?: string\n          })\n        | (HandlerMap & {\n            msg?: string\n          })\n      >({\n        path: `/user/access_token`,\n        method: 'POST',\n        body: user,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n     * @description Get user login status by header Authorization\n     *\n     * @tags Account\n     * @name GetUserStatus\n     * @summary Get Login Status\n     * @request GET:/user/status\n     * @secure\n     * @response `200` `HandlerResponseUserStatus` OK\n     */\n    getUserStatus: (\n      query?: {\n        /** The user email */\n        email?: string\n        /** The username */\n        name?: string\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<HandlerResponseUserStatus, any>({\n        path: `/user/status`,\n        method: 'GET',\n        query: query,\n        secure: true,\n        format: 'json',\n        ...params,\n      }),\n  }\n  users = {\n    /**\n * @description Create a new user\n *\n * @tags User\n * @name CreateUser\n * @summary Create User\n * @request POST:/users\n * @secure\n * @response `200` `HandlerResponseUserCreate` OK\n * @response `400` `(HandlerMap & {\n    msg?: string,\n\n})` Bad Request\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    createUser: (user: HandlerParamsUserCreate, params: RequestParams = {}) =>\n      this.request<\n        HandlerResponseUserCreate,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/users`,\n        method: 'POST',\n        body: user,\n        secure: true,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n * @description Update a specific user\n *\n * @tags User\n * @name UpdateUser\n * @summary Update User\n * @request PUT:/users/{id}\n * @secure\n * @response `200` `HandlerResponseUserUpdate` OK\n * @response `400` `(HandlerMap & {\n    msg?: string,\n\n})` Bad Request\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n * @response `404` `(HandlerMap & {\n    msg?: string,\n\n})` Not Found\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    updateUser: (id: number, user: HandlerParamsUserUpdate, params: RequestParams = {}) =>\n      this.request<\n        HandlerResponseUserUpdate,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/users/${id}`,\n        method: 'PUT',\n        body: user,\n        secure: true,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n * @description Delete a specific user\n *\n * @tags User\n * @name DeleteUser\n * @summary Delete User\n * @request DELETE:/users/{id}\n * @secure\n * @response `200` `HandlerMap` OK\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n * @response `404` `(HandlerMap & {\n    msg?: string,\n\n})` Not Found\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    deleteUser: (id: number, params: RequestParams = {}) =>\n      this.request<\n        HandlerMap,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/users/${id}`,\n        method: 'DELETE',\n        secure: true,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n * @description Get a list of users by some conditions\n *\n * @tags User\n * @name GetUsers\n * @summary Get User List\n * @request GET:/users/{type}\n * @secure\n * @response `200` `HandlerResponseAdminUserList` OK\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n */\n    getUsers: (\n      type?: 'all' | 'admin' | 'in_conf',\n      query?: {\n        /** The limit for pagination */\n        limit?: number\n        /** The offset for pagination */\n        offset?: number\n      },\n      params: RequestParams = {},\n    ) =>\n      this.request<\n        HandlerResponseAdminUserList,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/users/${type}`,\n        method: 'GET',\n        query: query,\n        secure: true,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n  }\n  version = {\n    /**\n     * @description Get the version of Artalk\n     *\n     * @tags System\n     * @name GetVersion\n     * @summary Get Version Info\n     * @request GET:/version\n     * @response `200` `CommonApiVersionData` OK\n     */\n    getVersion: (params: RequestParams = {}) =>\n      this.request<CommonApiVersionData, any>({\n        path: `/version`,\n        method: 'GET',\n        format: 'json',\n        ...params,\n      }),\n  }\n  votes = {\n    /**\n * @description Sync the number of votes in the `comments` or `pages` data tables to keep them the same as the `votes` table\n *\n * @tags Vote\n * @name SyncVotes\n * @summary Sync Vote Data\n * @request POST:/votes/sync\n * @secure\n * @response `200` `HandlerMap` OK\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n */\n    syncVotes: (params: RequestParams = {}) =>\n      this.request<\n        HandlerMap,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/votes/sync`,\n        method: 'POST',\n        secure: true,\n        format: 'json',\n        ...params,\n      }),\n\n    /**\n * @description Vote for a specific comment or page\n *\n * @tags Vote\n * @name Vote\n * @summary Vote\n * @request POST:/votes/{type}/{target_id}\n * @response `200` `HandlerResponseVote` OK\n * @response `403` `(HandlerMap & {\n    msg?: string,\n\n})` Forbidden\n * @response `404` `(HandlerMap & {\n    msg?: string,\n\n})` Not Found\n * @response `500` `(HandlerMap & {\n    msg?: string,\n\n})` Internal Server Error\n */\n    vote: (\n      type: 'comment_up' | 'comment_down' | 'page_up' | 'page_down',\n      targetId: number,\n      vote: HandlerParamsVote,\n      params: RequestParams = {},\n    ) =>\n      this.request<\n        HandlerResponseVote,\n        HandlerMap & {\n          msg?: string\n        }\n      >({\n        path: `/votes/${type}/${targetId}`,\n        method: 'POST',\n        body: vote,\n        type: ContentType.Json,\n        format: 'json',\n        ...params,\n      }),\n  }\n}\n","(function (factory) {\n  typeof define === 'function' && define.amd ? define(factory) :\n  factory();\n})((function () { 'use strict';\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    Object.defineProperty(subClass, \"prototype\", {\n      writable: false\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n    return _setPrototypeOf(o, p);\n  }\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n      return call;\n    } else if (call !== void 0) {\n      throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n\n    return _assertThisInitialized(self);\n  }\n\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n    return function _createSuperInternal() {\n      var Super = _getPrototypeOf(Derived),\n          result;\n\n      if (hasNativeReflectConstruct) {\n        var NewTarget = _getPrototypeOf(this).constructor;\n\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n\n      return _possibleConstructorReturn(this, result);\n    };\n  }\n\n  function _superPropBase(object, property) {\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\n      object = _getPrototypeOf(object);\n      if (object === null) break;\n    }\n\n    return object;\n  }\n\n  function _get() {\n    if (typeof Reflect !== \"undefined\" && Reflect.get) {\n      _get = Reflect.get.bind();\n    } else {\n      _get = function _get(target, property, receiver) {\n        var base = _superPropBase(target, property);\n\n        if (!base) return;\n        var desc = Object.getOwnPropertyDescriptor(base, property);\n\n        if (desc.get) {\n          return desc.get.call(arguments.length < 3 ? target : receiver);\n        }\n\n        return desc.value;\n      };\n    }\n\n    return _get.apply(this, arguments);\n  }\n\n  var Emitter = /*#__PURE__*/function () {\n    function Emitter() {\n      _classCallCheck(this, Emitter);\n\n      Object.defineProperty(this, 'listeners', {\n        value: {},\n        writable: true,\n        configurable: true\n      });\n    }\n\n    _createClass(Emitter, [{\n      key: \"addEventListener\",\n      value: function addEventListener(type, callback, options) {\n        if (!(type in this.listeners)) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push({\n          callback: callback,\n          options: options\n        });\n      }\n    }, {\n      key: \"removeEventListener\",\n      value: function removeEventListener(type, callback) {\n        if (!(type in this.listeners)) {\n          return;\n        }\n\n        var stack = this.listeners[type];\n\n        for (var i = 0, l = stack.length; i < l; i++) {\n          if (stack[i].callback === callback) {\n            stack.splice(i, 1);\n            return;\n          }\n        }\n      }\n    }, {\n      key: \"dispatchEvent\",\n      value: function dispatchEvent(event) {\n        if (!(event.type in this.listeners)) {\n          return;\n        }\n\n        var stack = this.listeners[event.type];\n        var stackToCall = stack.slice();\n\n        for (var i = 0, l = stackToCall.length; i < l; i++) {\n          var listener = stackToCall[i];\n\n          try {\n            listener.callback.call(this, event);\n          } catch (e) {\n            Promise.resolve().then(function () {\n              throw e;\n            });\n          }\n\n          if (listener.options && listener.options.once) {\n            this.removeEventListener(event.type, listener.callback);\n          }\n        }\n\n        return !event.defaultPrevented;\n      }\n    }]);\n\n    return Emitter;\n  }();\n\n  var AbortSignal = /*#__PURE__*/function (_Emitter) {\n    _inherits(AbortSignal, _Emitter);\n\n    var _super = _createSuper(AbortSignal);\n\n    function AbortSignal() {\n      var _this;\n\n      _classCallCheck(this, AbortSignal);\n\n      _this = _super.call(this); // Some versions of babel does not transpile super() correctly for IE <= 10, if the parent\n      // constructor has failed to run, then \"this.listeners\" will still be undefined and then we call\n      // the parent constructor directly instead as a workaround. For general details, see babel bug:\n      // https://github.com/babel/babel/issues/3041\n      // This hack was added as a fix for the issue described here:\n      // https://github.com/Financial-Times/polyfill-library/pull/59#issuecomment-477558042\n\n      if (!_this.listeners) {\n        Emitter.call(_assertThisInitialized(_this));\n      } // Compared to assignment, Object.defineProperty makes properties non-enumerable by default and\n      // we want Object.keys(new AbortController().signal) to be [] for compat with the native impl\n\n\n      Object.defineProperty(_assertThisInitialized(_this), 'aborted', {\n        value: false,\n        writable: true,\n        configurable: true\n      });\n      Object.defineProperty(_assertThisInitialized(_this), 'onabort', {\n        value: null,\n        writable: true,\n        configurable: true\n      });\n      Object.defineProperty(_assertThisInitialized(_this), 'reason', {\n        value: undefined,\n        writable: true,\n        configurable: true\n      });\n      return _this;\n    }\n\n    _createClass(AbortSignal, [{\n      key: \"toString\",\n      value: function toString() {\n        return '[object AbortSignal]';\n      }\n    }, {\n      key: \"dispatchEvent\",\n      value: function dispatchEvent(event) {\n        if (event.type === 'abort') {\n          this.aborted = true;\n\n          if (typeof this.onabort === 'function') {\n            this.onabort.call(this, event);\n          }\n        }\n\n        _get(_getPrototypeOf(AbortSignal.prototype), \"dispatchEvent\", this).call(this, event);\n      }\n    }]);\n\n    return AbortSignal;\n  }(Emitter);\n  var AbortController = /*#__PURE__*/function () {\n    function AbortController() {\n      _classCallCheck(this, AbortController);\n\n      // Compared to assignment, Object.defineProperty makes properties non-enumerable by default and\n      // we want Object.keys(new AbortController()) to be [] for compat with the native impl\n      Object.defineProperty(this, 'signal', {\n        value: new AbortSignal(),\n        writable: true,\n        configurable: true\n      });\n    }\n\n    _createClass(AbortController, [{\n      key: \"abort\",\n      value: function abort(reason) {\n        var event;\n\n        try {\n          event = new Event('abort');\n        } catch (e) {\n          if (typeof document !== 'undefined') {\n            if (!document.createEvent) {\n              // For Internet Explorer 8:\n              event = document.createEventObject();\n              event.type = 'abort';\n            } else {\n              // For Internet Explorer 11:\n              event = document.createEvent('Event');\n              event.initEvent('abort', false, false);\n            }\n          } else {\n            // Fallback where document isn't available:\n            event = {\n              type: 'abort',\n              bubbles: false,\n              cancelable: false\n            };\n          }\n        }\n\n        var signalReason = reason;\n\n        if (signalReason === undefined) {\n          if (typeof document === 'undefined') {\n            signalReason = new Error('This operation was aborted');\n            signalReason.name = 'AbortError';\n          } else {\n            try {\n              signalReason = new DOMException('signal is aborted without reason');\n            } catch (err) {\n              // IE 11 does not support calling the DOMException constructor, use a\n              // regular error object on it instead.\n              signalReason = new Error('This operation was aborted');\n              signalReason.name = 'AbortError';\n            }\n          }\n        }\n\n        this.signal.reason = signalReason;\n        this.signal.dispatchEvent(event);\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        return '[object AbortController]';\n      }\n    }]);\n\n    return AbortController;\n  }();\n\n  if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n    // These are necessary to make sure that we get correct output for:\n    // Object.prototype.toString.call(new AbortController())\n    AbortController.prototype[Symbol.toStringTag] = 'AbortController';\n    AbortSignal.prototype[Symbol.toStringTag] = 'AbortSignal';\n  }\n\n  function polyfillNeeded(self) {\n    if (self.__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL) {\n      console.log('__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL=true is set, will force install polyfill');\n      return true;\n    } // Note that the \"unfetch\" minimal fetch polyfill defines fetch() without\n    // defining window.Request, and this polyfill need to work on top of unfetch\n    // so the below feature detection needs the !self.AbortController part.\n    // The Request.prototype check is also needed because Safari versions 11.1.2\n    // up to and including 12.1.x has a window.AbortController present but still\n    // does NOT correctly implement abortable fetch:\n    // https://bugs.webkit.org/show_bug.cgi?id=174980#c2\n\n\n    return typeof self.Request === 'function' && !self.Request.prototype.hasOwnProperty('signal') || !self.AbortController;\n  }\n\n  /**\n   * Note: the \"fetch.Request\" default value is available for fetch imported from\n   * the \"node-fetch\" package and not in browsers. This is OK since browsers\n   * will be importing umd-polyfill.js from that path \"self\" is passed the\n   * decorator so the default value will not be used (because browsers that define\n   * fetch also has Request). One quirky setup where self.fetch exists but\n   * self.Request does not is when the \"unfetch\" minimal fetch polyfill is used\n   * on top of IE11; for this case the browser will try to use the fetch.Request\n   * default value which in turn will be undefined but then then \"if (Request)\"\n   * will ensure that you get a patched fetch but still no Request (as expected).\n   * @param {fetch, Request = fetch.Request}\n   * @returns {fetch: abortableFetch, Request: AbortableRequest}\n   */\n\n  function abortableFetchDecorator(patchTargets) {\n    if ('function' === typeof patchTargets) {\n      patchTargets = {\n        fetch: patchTargets\n      };\n    }\n\n    var _patchTargets = patchTargets,\n        fetch = _patchTargets.fetch,\n        _patchTargets$Request = _patchTargets.Request,\n        NativeRequest = _patchTargets$Request === void 0 ? fetch.Request : _patchTargets$Request,\n        NativeAbortController = _patchTargets.AbortController,\n        _patchTargets$__FORCE = _patchTargets.__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL,\n        __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL = _patchTargets$__FORCE === void 0 ? false : _patchTargets$__FORCE;\n\n    if (!polyfillNeeded({\n      fetch: fetch,\n      Request: NativeRequest,\n      AbortController: NativeAbortController,\n      __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL: __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL\n    })) {\n      return {\n        fetch: fetch,\n        Request: Request\n      };\n    }\n\n    var Request = NativeRequest; // Note that the \"unfetch\" minimal fetch polyfill defines fetch() without\n    // defining window.Request, and this polyfill need to work on top of unfetch\n    // hence we only patch it if it's available. Also we don't patch it if signal\n    // is already available on the Request prototype because in this case support\n    // is present and the patching below can cause a crash since it assigns to\n    // request.signal which is technically a read-only property. This latter error\n    // happens when you run the main5.js node-fetch example in the repo\n    // \"abortcontroller-polyfill-examples\". The exact error is:\n    //   request.signal = init.signal;\n    //   ^\n    // TypeError: Cannot set property signal of #<Request> which has only a getter\n\n    if (Request && !Request.prototype.hasOwnProperty('signal') || __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL) {\n      Request = function Request(input, init) {\n        var signal;\n\n        if (init && init.signal) {\n          signal = init.signal; // Never pass init.signal to the native Request implementation when the polyfill has\n          // been installed because if we're running on top of a browser with a\n          // working native AbortController (i.e. the polyfill was installed due to\n          // __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL being set), then passing our\n          // fake AbortSignal to the native fetch will trigger:\n          // TypeError: Failed to construct 'Request': member signal is not of type AbortSignal.\n\n          delete init.signal;\n        }\n\n        var request = new NativeRequest(input, init);\n\n        if (signal) {\n          Object.defineProperty(request, 'signal', {\n            writable: false,\n            enumerable: false,\n            configurable: true,\n            value: signal\n          });\n        }\n\n        return request;\n      };\n\n      Request.prototype = NativeRequest.prototype;\n    }\n\n    var realFetch = fetch;\n\n    var abortableFetch = function abortableFetch(input, init) {\n      var signal = Request && Request.prototype.isPrototypeOf(input) ? input.signal : init ? init.signal : undefined;\n\n      if (signal) {\n        var abortError;\n\n        try {\n          abortError = new DOMException('Aborted', 'AbortError');\n        } catch (err) {\n          // IE 11 does not support calling the DOMException constructor, use a\n          // regular error object on it instead.\n          abortError = new Error('Aborted');\n          abortError.name = 'AbortError';\n        } // Return early if already aborted, thus avoiding making an HTTP request\n\n\n        if (signal.aborted) {\n          return Promise.reject(abortError);\n        } // Turn an event into a promise, reject it once `abort` is dispatched\n\n\n        var cancellation = new Promise(function (_, reject) {\n          signal.addEventListener('abort', function () {\n            return reject(abortError);\n          }, {\n            once: true\n          });\n        });\n\n        if (init && init.signal) {\n          // Never pass .signal to the native implementation when the polyfill has\n          // been installed because if we're running on top of a browser with a\n          // working native AbortController (i.e. the polyfill was installed due to\n          // __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL being set), then passing our\n          // fake AbortSignal to the native fetch will trigger:\n          // TypeError: Failed to execute 'fetch' on 'Window': member signal is not of type AbortSignal.\n          delete init.signal;\n        } // Return the fastest promise (don't need to wait for request to finish)\n\n\n        return Promise.race([cancellation, realFetch(input, init)]);\n      }\n\n      return realFetch(input, init);\n    };\n\n    return {\n      fetch: abortableFetch,\n      Request: Request\n    };\n  }\n\n  (function (self) {\n\n    if (!polyfillNeeded(self)) {\n      return;\n    }\n\n    if (!self.fetch) {\n      console.warn('fetch() is not available, cannot install abortcontroller-polyfill');\n      return;\n    }\n\n    var _abortableFetch = abortableFetchDecorator(self),\n        fetch = _abortableFetch.fetch,\n        Request = _abortableFetch.Request;\n\n    self.fetch = fetch;\n    self.Request = Request;\n    Object.defineProperty(self, 'AbortController', {\n      writable: true,\n      enumerable: false,\n      configurable: true,\n      value: AbortController\n    });\n    Object.defineProperty(self, 'AbortSignal', {\n      writable: true,\n      enumerable: false,\n      configurable: true,\n      value: AbortSignal\n    });\n  })(typeof self !== 'undefined' ? self : global);\n\n}));\n","import 'abortcontroller-polyfill/dist/polyfill-patch-fetch'\n\nimport { FetchError } from '@/types'\nimport { ApiOptions } from './options'\n\nexport const Fetch = async (opts: ApiOptions, input: string | URL | Request, init?: RequestInit) => {\n  const apiToken = opts.getApiToken && opts.getApiToken()\n\n  const headers = new Headers({\n    'Authorization': apiToken ? `Bearer ${apiToken}` : '',\n    ...init?.headers,\n  })\n\n  if (!headers.get('Authorization')) headers.delete('Authorization')\n\n  // 请求操作\n  const resp = await fetch(input, {\n    ...init,\n    headers,\n  })\n\n  if (!resp.ok) {\n    // Deserialize response body (if it is JSON, otherwise returns `{}`)\n    const json: any = (await resp.json().catch(() => {})) || {}\n\n    // 请求弹出层验证\n    if (json.need_captcha) {\n        // 请求需要验证码\n        opts.onNeedCheckCaptcha && await opts.onNeedCheckCaptcha({\n          data: { imgData: json.img_data, iframe: json.iframe }\n        })\n        return Fetch(opts, input, init) // retry\n    }\n\n    if (json.need_login) {\n        // 请求需要管理员权限\n        opts.onNeedCheckAdmin && await opts.onNeedCheckAdmin({})\n        return Fetch(opts, input, init)\n    }\n\n    throw createError(resp.status, json)\n  }\n\n  return resp\n}\n\nexport class FetchException extends Error implements FetchError {\n  code: number = 0\n  message: string = 'fetch error'\n  data?: any\n}\n\nfunction createError(code: number, data: any): FetchException {\n  const err = new FetchException()\n  err.message = data.msg || data.message || 'fetch error'\n  err.code = code\n  err.data = data\n  console.error(err)\n  return err\n}\n","import { ApiOptions } from './options'\nimport { Api as ApiV2 } from './v2'\nimport { Fetch } from './fetch'\n\nexport class Api extends ApiV2<void> {\n  private _opts: ApiOptions\n\n  constructor(opts: ApiOptions) {\n    super({\n      baseUrl: opts.baseURL,\n      customFetch: (input, init) => Fetch(opts, input, init)\n    })\n\n    this._opts = opts\n  }\n\n  /**\n   * Get user info as params for request\n   *\n   * @returns Request params with user info\n   */\n  getUserFields() {\n    const user = this._opts.userInfo\n    if (!user?.name || !user?.email) return undefined\n    return { name: user.name, email: user.email }\n  }\n}\n","/**\n * marked v11.2.0 - a markdown parser\n * Copyright (c) 2011-2024, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n/**\n * Gets the original marked default options.\n */\nfunction _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null\n    };\n}\nlet _defaults = _getDefaults();\nfunction changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape$1(html, encode) {\n    if (encode) {\n        if (escapeTest.test(html)) {\n            return html.replace(escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (escapeTestNoEncode.test(html)) {\n            return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\nfunction unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, (_, n) => {\n        n = n.toLowerCase();\n        if (n === 'colon')\n            return ':';\n        if (n.charAt(0) === '#') {\n            return n.charAt(1) === 'x'\n                ? String.fromCharCode(parseInt(n.substring(2), 16))\n                : String.fromCharCode(+n.substring(1));\n        }\n        return '';\n    });\n}\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n    let source = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    const obj = {\n        replace: (name, val) => {\n            let valSource = typeof val === 'string' ? val : val.source;\n            valSource = valSource.replace(caret, '$1');\n            source = source.replace(name, valSource);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(source, opt);\n        }\n    };\n    return obj;\n}\nfunction cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(/%25/g, '%');\n    }\n    catch (e) {\n        return null;\n    }\n    return href;\n}\nconst noopTest = { exec: () => null };\nfunction splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(/ \\|/);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && !invert) {\n            suffLen++;\n        }\n        else if (currChar !== c && invert) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nfunction findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n    const href = link.href;\n    const title = link.title ? escape$1(link.title) : null;\n    const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n    if (cap[0].charAt(0) !== '!') {\n        lexer.state.inLink = true;\n        const token = {\n            type: 'link',\n            raw,\n            href,\n            title,\n            text,\n            tokens: lexer.inlineTokens(text)\n        };\n        lexer.state.inLink = false;\n        return token;\n    }\n    return {\n        type: 'image',\n        raw,\n        href,\n        title,\n        text: escape$1(text)\n    };\n}\nfunction indentCodeCompensation(raw, text) {\n    const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(/^\\s+/);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nclass _Tokenizer {\n    options;\n    rules; // set by the lexer\n    lexer; // set by the lexer\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0]\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(/^ {1,4}/gm, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '');\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n                text\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (/#$/.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || / $/.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text)\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: cap[0]\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            const text = rtrim(cap[0].replace(/^ *>[ \\t]?/gm, ''), '\\n');\n            const top = this.lexer.state.top;\n            this.lexer.state.top = true;\n            const tokens = this.lexer.blockTokens(text);\n            this.lexer.state.top = top;\n            return {\n                type: 'blockquote',\n                raw: cap[0],\n                tokens,\n                text\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: []\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n            let raw = '';\n            let itemContents = '';\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else {\n                    indent = cap[2].search(/[^ ]/); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                let blankLine = false;\n                if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n                    const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n                    const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n                    const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(src)) {\n                            break;\n                        }\n                        if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLine.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.search(/[^ ]/) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLine.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (/\\n *\\n *$/.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = /^\\[[ xX]\\] /.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: []\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            list.items[list.items.length - 1].raw = raw.trimEnd();\n            (list.items[list.items.length - 1]).text = itemContents.trimEnd();\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0]\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n            const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (!cap) {\n            return;\n        }\n        if (!/[:|]/.test(cap[2])) {\n            // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n            return;\n        }\n        const headers = splitCells(cap[1]);\n        const aligns = cap[2].replace(/^\\||\\| *$/g, '').split('|');\n        const rows = cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : [];\n        const item = {\n            type: 'table',\n            raw: cap[0],\n            header: [],\n            align: [],\n            rows: []\n        };\n        if (headers.length !== aligns.length) {\n            // header and align columns must be equal, rows can be different.\n            return;\n        }\n        for (const align of aligns) {\n            if (/^ *-+: *$/.test(align)) {\n                item.align.push('right');\n            }\n            else if (/^ *:-+: *$/.test(align)) {\n                item.align.push('center');\n            }\n            else if (/^ *:-+ *$/.test(align)) {\n                item.align.push('left');\n            }\n            else {\n                item.align.push(null);\n            }\n        }\n        for (const header of headers) {\n            item.header.push({\n                text: header,\n                tokens: this.lexer.inline(header)\n            });\n        }\n        for (const row of rows) {\n            item.rows.push(splitCells(row, item.header.length).map(cell => {\n                return {\n                    text: cell,\n                    tokens: this.lexer.inline(cell)\n                };\n            }));\n        }\n        return item;\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1])\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text)\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0])\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: escape$1(cap[1])\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0]\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(/>$/.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (/^</.test(href)) {\n                if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n                title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title\n            }, cap[0], this.lexer);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            const linkString = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n            const link = links[linkString.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrongLDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text)\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text)\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(/\\n/g, ' ');\n            const hasNonSpaceChars = /[^ ]/.test(text);\n            const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            text = escape$1(text, true);\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0]\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2])\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape$1(cap[1]);\n                href = 'mailto:' + text;\n            }\n            else {\n                text = escape$1(cap[1]);\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text\n                    }\n                ]\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape$1(cap[0]);\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n                } while (prevCapZero !== cap[0]);\n                text = escape$1(cap[0]);\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text\n                    }\n                ]\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            let text;\n            if (this.lexer.state.inRawBlock) {\n                text = cap[0];\n            }\n            else {\n                text = escape$1(cap[0]);\n            }\n            return {\n                type: 'text',\n                raw: cap[0],\n                text\n            };\n        }\n    }\n}\n\n/**\n * Block-Level Grammar\n */\nconst newline = /^(?: *(?:\\n|$))+/;\nconst blockCode = /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheading = edit(/^(?!bull )((?:.|\\n(?!\\s*?\\n|bull ))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/)\n    .replace('label', _blockLabel)\n    .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n    .getRegex();\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n    .replace(/bull/g, bullet)\n    .getRegex();\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n    + '|track|ul';\nconst _comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nconst html = edit('^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')', 'i')\n    .replace('comment', _comment)\n    .replace('tag', _tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst paragraph = edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n    .replace('paragraph', paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nconst blockNormal = {\n    blockquote,\n    code: blockCode,\n    def,\n    fences,\n    heading,\n    hr,\n    html,\n    lheading,\n    list,\n    newline,\n    paragraph,\n    table: noopTest,\n    text: blockText\n};\n/**\n * GFM Block Grammar\n */\nconst gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n    + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', ' {4}[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockGfm = {\n    ...blockNormal,\n    table: gfmTable,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n        .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n        .replace('table', gfmTable) // interrupt paragraphs with table\n        .replace('blockquote', ' {0,3}>')\n        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n        .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n        .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n        .getRegex()\n};\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nconst blockPedantic = {\n    ...blockNormal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', _comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest, // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', lheading)\n        .replace('|table', '')\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .replace('|tag', '')\n        .getRegex()\n};\n/**\n * Inline-Level Grammar\n */\nconst escape = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = '\\\\p{P}$+<=>`^|~';\nconst punctuation = edit(/^((?![*_])[\\spunctuation])/, 'u')\n    .replace(/punctuation/g, _punctuation).getRegex();\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\([^\\(\\)]*?\\)|`[^`]*?`|<[^<>]*?>/g;\nconst emStrongLDelim = edit(/^(?:\\*+(?:((?!\\*)[punct])|[^\\s*]))|^_+(?:((?!_)[punct])|([^\\s_]))/, 'u')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongRDelimAst = edit('^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n    + '|[^*]+(?=[^*])' // Consume to delim\n    + '|(?!\\\\*)[punct](\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n    + '|[^punct\\\\s](\\\\*+)(?!\\\\*)(?=[punct\\\\s]|$)' // (2) a***#, a*** can only be a Right Delimiter\n    + '|(?!\\\\*)[punct\\\\s](\\\\*+)(?=[^punct\\\\s])' // (3) #***a, ***a can only be Left Delimiter\n    + '|[\\\\s](\\\\*+)(?!\\\\*)(?=[punct])' // (4) ***# can only be Left Delimiter\n    + '|(?!\\\\*)[punct](\\\\*+)(?!\\\\*)(?=[punct])' // (5) #***# can be either Left or Right Delimiter\n    + '|[^punct\\\\s](\\\\*+)(?=[^punct\\\\s])', 'gu') // (6) a***a can be either Left or Right Delimiter\n    .replace(/punct/g, _punctuation)\n    .getRegex();\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n    + '|[^_]+(?=[^_])' // Consume to delim\n    + '|(?!_)[punct](_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n    + '|[^punct\\\\s](_+)(?!_)(?=[punct\\\\s]|$)' // (2) a___#, a___ can only be a Right Delimiter\n    + '|(?!_)[punct\\\\s](_+)(?=[^punct\\\\s])' // (3) #___a, ___a can only be Left Delimiter\n    + '|[\\\\s](_+)(?!_)(?=[punct])' // (4) ___# can only be Left Delimiter\n    + '|(?!_)[punct](_+)(?!_)(?=[punct])', 'gu') // (5) #___# can be either Left or Right Delimiter\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst anyPunctuation = edit(/\\\\([punct])/, 'gu')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n    .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n    .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n    .getRegex();\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit('^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n    .replace('comment', _inlineComment)\n    .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/)\n    .replace('label', _inlineLabel)\n    .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/)\n    .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n    .getRegex();\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n    .replace('label', _inlineLabel)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n    .replace('reflink', reflink)\n    .replace('nolink', nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\nconst inlineNormal = {\n    _backpedal: noopTest, // only used for GFM url\n    anyPunctuation,\n    autolink,\n    blockSkip,\n    br,\n    code: inlineCode,\n    del: noopTest,\n    emStrongLDelim,\n    emStrongRDelimAst,\n    emStrongRDelimUnd,\n    escape,\n    link,\n    nolink,\n    punctuation,\n    reflink,\n    reflinkSearch,\n    tag,\n    text: inlineText,\n    url: noopTest\n};\n/**\n * Pedantic Inline Grammar\n */\nconst inlinePedantic = {\n    ...inlineNormal,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', _inlineLabel)\n        .getRegex()\n};\n/**\n * GFM Inline Grammar\n */\nconst inlineGfm = {\n    ...inlineNormal,\n    escape: edit(escape).replace('])', '~|])').getRegex(),\n    url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n        .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n        .getRegex(),\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n/**\n * GFM + Line Breaks Inline Grammar\n */\nconst inlineBreaks = {\n    ...inlineGfm,\n    br: edit(br).replace('{2,}', '*').getRegex(),\n    text: edit(inlineGfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex()\n};\n/**\n * exports\n */\nconst block = {\n    normal: blockNormal,\n    gfm: blockGfm,\n    pedantic: blockPedantic\n};\nconst inline = {\n    normal: inlineNormal,\n    gfm: inlineGfm,\n    breaks: inlineBreaks,\n    pedantic: inlinePedantic\n};\n\n/**\n * Block Lexer\n */\nclass _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true\n        };\n        const rules = {\n            block: block.normal,\n            inline: inline.normal\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src\n            .replace(/\\r\\n|\\r/g, '\\n');\n        this.blockTokens(src, this.tokens);\n        for (let i = 0; i < this.inlineQueue.length; i++) {\n            const next = this.inlineQueue[i];\n            this.inlineTokens(next.src, next.tokens);\n        }\n        this.inlineQueue = [];\n        return this.tokens;\n    }\n    blockTokens(src, tokens = []) {\n        if (this.options.pedantic) {\n            src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n        }\n        else {\n            src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n                return leading + '    '.repeat(tabs.length);\n            });\n        }\n        let token;\n        let lastToken;\n        let cutSrc;\n        let lastParagraphClipped;\n        while (src) {\n            if (this.options.extensions\n                && this.options.extensions.block\n                && this.options.extensions.block.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.length === 1 && tokens.length > 0) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    tokens[tokens.length - 1].raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                lastToken = tokens[tokens.length - 1];\n                if (lastParagraphClipped && lastToken.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = (cutSrc.length !== src.length);\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        let token, lastToken, cutSrc;\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match;\n        let keepPrevChar, prevChar;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            // extensions\n            if (this.options.extensions\n                && this.options.extensions.inline\n                && this.options.extensions.inline.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n\n/**\n * Renderer\n */\nclass _Renderer {\n    options;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    code(code, infostring, escaped) {\n        const lang = (infostring || '').match(/^\\S*/)?.[0];\n        code = code.replace(/\\n$/, '') + '\\n';\n        if (!lang) {\n            return '<pre><code>'\n                + (escaped ? code : escape$1(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape$1(lang)\n            + '\">'\n            + (escaped ? code : escape$1(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote(quote) {\n        return `<blockquote>\\n${quote}</blockquote>\\n`;\n    }\n    html(html, block) {\n        return html;\n    }\n    heading(text, level, raw) {\n        // ignore IDs\n        return `<h${level}>${text}</h${level}>\\n`;\n    }\n    hr() {\n        return '<hr>\\n';\n    }\n    list(body, ordered, start) {\n        const type = ordered ? 'ol' : 'ul';\n        const startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(text, task, checked) {\n        return `<li>${text}</li>\\n`;\n    }\n    checkbox(checked) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph(text) {\n        return `<p>${text}</p>\\n`;\n    }\n    table(header, body) {\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow(content) {\n        return `<tr>\\n${content}</tr>\\n`;\n    }\n    tablecell(content, flags) {\n        const type = flags.header ? 'th' : 'td';\n        const tag = flags.align\n            ? `<${type} align=\"${flags.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong(text) {\n        return `<strong>${text}</strong>`;\n    }\n    em(text) {\n        return `<em>${text}</em>`;\n    }\n    codespan(text) {\n        return `<code>${text}</code>`;\n    }\n    br() {\n        return '<br>';\n    }\n    del(text) {\n        return `<del>${text}</del>`;\n    }\n    link(href, title, text) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + title + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image(href, title, text) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${title}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(text) {\n        return text;\n    }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass _TextRenderer {\n    // no need for block level renderers\n    strong(text) {\n        return text;\n    }\n    em(text) {\n        return text;\n    }\n    codespan(text) {\n        return text;\n    }\n    del(text) {\n        return text;\n    }\n    html(text) {\n        return text;\n    }\n    text(text) {\n        return text;\n    }\n    link(href, title, text) {\n        return '' + text;\n    }\n    image(href, title, text) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n\n/**\n * Parsing & Compiling\n */\nclass _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                const genericToken = token;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            switch (token.type) {\n                case 'space': {\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr();\n                    continue;\n                }\n                case 'heading': {\n                    const headingToken = token;\n                    out += this.renderer.heading(this.parseInline(headingToken.tokens), headingToken.depth, unescape(this.parseInline(headingToken.tokens, this.textRenderer)));\n                    continue;\n                }\n                case 'code': {\n                    const codeToken = token;\n                    out += this.renderer.code(codeToken.text, codeToken.lang, !!codeToken.escaped);\n                    continue;\n                }\n                case 'table': {\n                    const tableToken = token;\n                    let header = '';\n                    // header\n                    let cell = '';\n                    for (let j = 0; j < tableToken.header.length; j++) {\n                        cell += this.renderer.tablecell(this.parseInline(tableToken.header[j].tokens), { header: true, align: tableToken.align[j] });\n                    }\n                    header += this.renderer.tablerow(cell);\n                    let body = '';\n                    for (let j = 0; j < tableToken.rows.length; j++) {\n                        const row = tableToken.rows[j];\n                        cell = '';\n                        for (let k = 0; k < row.length; k++) {\n                            cell += this.renderer.tablecell(this.parseInline(row[k].tokens), { header: false, align: tableToken.align[k] });\n                        }\n                        body += this.renderer.tablerow(cell);\n                    }\n                    out += this.renderer.table(header, body);\n                    continue;\n                }\n                case 'blockquote': {\n                    const blockquoteToken = token;\n                    const body = this.parse(blockquoteToken.tokens);\n                    out += this.renderer.blockquote(body);\n                    continue;\n                }\n                case 'list': {\n                    const listToken = token;\n                    const ordered = listToken.ordered;\n                    const start = listToken.start;\n                    const loose = listToken.loose;\n                    let body = '';\n                    for (let j = 0; j < listToken.items.length; j++) {\n                        const item = listToken.items[j];\n                        const checked = item.checked;\n                        const task = item.task;\n                        let itemBody = '';\n                        if (item.task) {\n                            const checkbox = this.renderer.checkbox(!!checked);\n                            if (loose) {\n                                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                                    }\n                                }\n                                else {\n                                    item.tokens.unshift({\n                                        type: 'text',\n                                        text: checkbox + ' '\n                                    });\n                                }\n                            }\n                            else {\n                                itemBody += checkbox + ' ';\n                            }\n                        }\n                        itemBody += this.parse(item.tokens, loose);\n                        body += this.renderer.listitem(itemBody, task, !!checked);\n                    }\n                    out += this.renderer.list(body, ordered, start);\n                    continue;\n                }\n                case 'html': {\n                    const htmlToken = token;\n                    out += this.renderer.html(htmlToken.text, htmlToken.block);\n                    continue;\n                }\n                case 'paragraph': {\n                    const paragraphToken = token;\n                    out += this.renderer.paragraph(this.parseInline(paragraphToken.tokens));\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text;\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + (textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text);\n                    }\n                    out += top ? this.renderer.paragraph(body) : body;\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer) {\n        renderer = renderer || this.renderer;\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                const ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            switch (token.type) {\n                case 'escape': {\n                    const escapeToken = token;\n                    out += renderer.text(escapeToken.text);\n                    break;\n                }\n                case 'html': {\n                    const tagToken = token;\n                    out += renderer.html(tagToken.text);\n                    break;\n                }\n                case 'link': {\n                    const linkToken = token;\n                    out += renderer.link(linkToken.href, linkToken.title, this.parseInline(linkToken.tokens, renderer));\n                    break;\n                }\n                case 'image': {\n                    const imageToken = token;\n                    out += renderer.image(imageToken.href, imageToken.title, imageToken.text);\n                    break;\n                }\n                case 'strong': {\n                    const strongToken = token;\n                    out += renderer.strong(this.parseInline(strongToken.tokens, renderer));\n                    break;\n                }\n                case 'em': {\n                    const emToken = token;\n                    out += renderer.em(this.parseInline(emToken.tokens, renderer));\n                    break;\n                }\n                case 'codespan': {\n                    const codespanToken = token;\n                    out += renderer.codespan(codespanToken.text);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br();\n                    break;\n                }\n                case 'del': {\n                    const delToken = token;\n                    out += renderer.del(this.parseInline(delToken.tokens, renderer));\n                    break;\n                }\n                case 'text': {\n                    const textToken = token;\n                    out += renderer.text(textToken.text);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n\nclass _Hooks {\n    options;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess',\n        'processAllTokens'\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n    /**\n     * Process all tokens before walk tokens\n     */\n    processAllTokens(tokens) {\n        return tokens;\n    }\n}\n\nclass Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.#parseMarkdown(_Lexer.lex, _Parser.parse);\n    parseInline = this.#parseMarkdown(_Lexer.lexInline, _Parser.parseInline);\n    Parser = _Parser;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            const tokens = genericToken[childTokens].flat(Infinity);\n                            values = values.concat(this.walkTokens(tokens, callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    if (!(prop in renderer)) {\n                        throw new Error(`renderer '${prop}' does not exist`);\n                    }\n                    if (prop === 'options') {\n                        // ignore options property\n                        continue;\n                    }\n                    const rendererProp = prop;\n                    const rendererFunc = pack.renderer[rendererProp];\n                    const prevRenderer = renderer[rendererProp];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererProp] = (...args) => {\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    if (!(prop in tokenizer)) {\n                        throw new Error(`tokenizer '${prop}' does not exist`);\n                    }\n                    if (['options', 'rules', 'lexer'].includes(prop)) {\n                        // ignore options, rules, and lexer properties\n                        continue;\n                    }\n                    const tokenizerProp = prop;\n                    const tokenizerFunc = pack.tokenizer[tokenizerProp];\n                    const prevTokenizer = tokenizer[tokenizerProp];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    // @ts-expect-error cannot type tokenizer function dynamically\n                    tokenizer[tokenizerProp] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    if (!(prop in hooks)) {\n                        throw new Error(`hook '${prop}' does not exist`);\n                    }\n                    if (prop === 'options') {\n                        // ignore options property\n                        continue;\n                    }\n                    const hooksProp = prop;\n                    const hooksFunc = pack.hooks[hooksProp];\n                    const prevHook = hooks[hooksProp];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    lexer(src, options) {\n        return _Lexer.lex(src, options ?? this.defaults);\n    }\n    parser(tokens, options) {\n        return _Parser.parse(tokens, options ?? this.defaults);\n    }\n    #parseMarkdown(lexer, parser) {\n        return (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            // Show warning if an extension set async to true but the parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                if (!opt.silent) {\n                    console.warn('marked(): The async option was set to true by an extension. The async: false option sent to parse will be ignored.');\n                }\n                opt.async = true;\n            }\n            const throwError = this.#onError(!!opt.silent, !!opt.async);\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n            }\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                let tokens = lexer(src, opt);\n                if (opt.hooks) {\n                    tokens = opt.hooks.processAllTokens(tokens);\n                }\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n    }\n    #onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape$1(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n\nconst markedInstance = new Marked();\nfunction marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = _Parser.parse;\nconst lexer = _Lexer.lex;\n\nexport { _Hooks as Hooks, _Lexer as Lexer, Marked, _Parser as Parser, _Renderer as Renderer, _TextRenderer as TextRenderer, _Tokenizer as Tokenizer, _defaults as defaults, _getDefaults as getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n//# sourceMappingURL=marked.esm.js.map\n","'use strict';\n\nvar escapes = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nvar unescapes = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': \"'\"\n};\nvar rescaped = /(&amp;|&lt;|&gt;|&quot;|&#39;)/g;\nvar runescaped = /[&<>\"']/g;\n\nfunction escapeHtmlChar (match) {\n  return escapes[match];\n}\nfunction unescapeHtmlChar (match) {\n  return unescapes[match];\n}\n\nfunction escapeHtml (text) {\n  return text == null ? '' : String(text).replace(runescaped, escapeHtmlChar);\n}\n\nfunction unescapeHtml (html) {\n  return html == null ? '' : String(html).replace(rescaped, unescapeHtmlChar);\n}\n\nescapeHtml.options = unescapeHtml.options = {};\n\nmodule.exports = {\n  encode: escapeHtml,\n  escape: escapeHtml,\n  decode: unescapeHtml,\n  unescape: unescapeHtml,\n  version: '1.0.0-browser'\n};\n","'use strict';\n\nfunction assignment (result) {\n  var stack = Array.prototype.slice.call(arguments, 1);\n  var item;\n  var key;\n  while (stack.length) {\n    item = stack.shift();\n    for (key in item) {\n      if (item.hasOwnProperty(key)) {\n        if (Object.prototype.toString.call(result[key]) === '[object Object]') {\n          result[key] = assignment(result[key], item[key]);\n        } else {\n          result[key] = item[key];\n        }\n      }\n    }\n  }\n  return result;\n}\n\nmodule.exports = assignment;\n","'use strict';\n\nmodule.exports = function lowercase (string) {\n  return typeof string === 'string' ? string.toLowerCase() : string;\n};\n","'use strict';\n\nfunction toMap (list) {\n  return list.reduce(asKey, {});\n}\n\nfunction asKey (accumulator, item) {\n  accumulator[item] = true;\n  return accumulator;\n}\n\nmodule.exports = toMap;\n","'use strict';\n\nvar toMap = require('./toMap');\nvar uris = ['background', 'base', 'cite', 'href', 'longdesc', 'src', 'usemap'];\n\nmodule.exports = {\n  uris: toMap(uris) // attributes that have an href and hence need to be sanitized\n};\n","'use strict';\n\nvar toMap = require('./toMap');\nvar voids = ['area', 'br', 'col', 'hr', 'img', 'wbr', 'input', 'base', 'basefont', 'link', 'meta'];\n\nmodule.exports = {\n  voids: toMap(voids)\n};\n","'use strict';\n\nvar he = require('he');\nvar lowercase = require('./lowercase');\nvar attributes = require('./attributes');\nvar elements = require('./elements');\nvar rstart = /^<\\s*([\\w:-]+)((?:\\s+[\\w:-]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)\\s*>/;\nvar rend = /^<\\s*\\/\\s*([\\w:-]+)[^>]*>/;\nvar rattrs = /([\\w:-]+)(?:\\s*=\\s*(?:(?:\"((?:[^\"])*)\")|(?:'((?:[^'])*)')|([^>\\s]+)))?/g;\nvar rtag = /^</;\nvar rtagend = /^<\\s*\\//;\n\nfunction createStack () {\n  var stack = [];\n  stack.lastItem = function lastItem () {\n    return stack[stack.length - 1];\n  };\n  return stack;\n}\n\nfunction parser (html, handler) {\n  var stack = createStack();\n  var last = html;\n  var chars;\n\n  while (html) {\n    parsePart();\n  }\n  parseEndTag(); // clean up any remaining tags\n\n  function parsePart () {\n    chars = true;\n    parseTag();\n\n    var same = html === last;\n    last = html;\n\n    if (same) { // discard, because it's invalid\n      html = '';\n    }\n  }\n\n  function parseTag () {\n    if (html.substr(0, 4) === '<!--') { // comments\n      parseComment();\n    } else if (rtagend.test(html)) {\n      parseEdge(rend, parseEndTag);\n    } else if (rtag.test(html)) {\n      parseEdge(rstart, parseStartTag);\n    }\n    parseTagDecode();\n  }\n\n  function parseEdge (regex, parser) {\n    var match = html.match(regex);\n    if (match) {\n      html = html.substring(match[0].length);\n      match[0].replace(regex, parser);\n      chars = false;\n    }\n  }\n\n  function parseComment () {\n    var index = html.indexOf('-->');\n    if (index >= 0) {\n      if (handler.comment) {\n        handler.comment(html.substring(4, index));\n      }\n      html = html.substring(index + 3);\n      chars = false;\n    }\n  }\n\n  function parseTagDecode () {\n    if (!chars) {\n      return;\n    }\n    var text;\n    var index = html.indexOf('<');\n    if (index >= 0) {\n      text = html.substring(0, index);\n      html = html.substring(index);\n    } else {\n      text = html;\n      html = '';\n    }\n    if (handler.chars) {\n      handler.chars(text);\n    }\n  }\n\n  function parseStartTag (tag, tagName, rest, unary) {\n    var attrs = {};\n    var low = lowercase(tagName);\n    var u = elements.voids[low] || !!unary;\n\n    rest.replace(rattrs, attrReplacer);\n\n    if (!u) {\n      stack.push(low);\n    }\n    if (handler.start) {\n      handler.start(low, attrs, u);\n    }\n\n    function attrReplacer (match, name, doubleQuotedValue, singleQuotedValue, unquotedValue) {\n      if (doubleQuotedValue === void 0 && singleQuotedValue === void 0 && unquotedValue === void 0) {\n        attrs[name] = void 0; // attribute is like <button disabled></button>\n      } else {\n        attrs[name] = he.decode(doubleQuotedValue || singleQuotedValue || unquotedValue || '');\n      }\n    }\n  }\n\n  function parseEndTag (tag, tagName) {\n    var i;\n    var pos = 0;\n    var low = lowercase(tagName);\n    if (low) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos] === low) {\n          break; // find the closest opened tag of the same type\n        }\n      }\n    }\n    if (pos >= 0) {\n      for (i = stack.length - 1; i >= pos; i--) {\n        if (handler.end) { // close all the open elements, up the stack\n          handler.end(stack[i]);\n        }\n      }\n      stack.length = pos;\n    }\n  }\n}\n\nmodule.exports = parser;\n","'use strict';\n\nvar he = require('he');\nvar lowercase = require('./lowercase');\nvar attributes = require('./attributes');\nvar elements = require('./elements');\n\nfunction sanitizer (buffer, options) {\n  var last;\n  var context;\n  var o = options || {};\n\n  reset();\n\n  return {\n    start: start,\n    end: end,\n    chars: chars\n  };\n\n  function out (value) {\n    buffer.push(value);\n  }\n\n  function start (tag, attrs, unary) {\n    var low = lowercase(tag);\n\n    if (context.ignoring) {\n      ignore(low); return;\n    }\n    if ((o.allowedTags || []).indexOf(low) === -1) {\n      ignore(low); return;\n    }\n    if (o.filter && !o.filter({ tag: low, attrs: attrs })) {\n      ignore(low); return;\n    }\n\n    out('<');\n    out(low);\n    Object.keys(attrs).forEach(parse);\n    out(unary ? '/>' : '>');\n\n    function parse (key) {\n      var value = attrs[key];\n      var classesOk = (o.allowedClasses || {})[low] || [];\n      var attrsOk = (o.allowedAttributes || {})[low] || [];\n      var valid;\n      var lkey = lowercase(key);\n      if (lkey === 'class' && attrsOk.indexOf(lkey) === -1) {\n        value = value.split(' ').filter(isValidClass).join(' ').trim();\n        valid = value.length;\n      } else {\n        valid = attrsOk.indexOf(lkey) !== -1 && (attributes.uris[lkey] !== true || testUrl(value));\n      }\n      if (valid) {\n        out(' ');\n        out(key);\n        if (typeof value === 'string') {\n          out('=\"');\n          out(he.encode(value));\n          out('\"');\n        }\n      }\n      function isValidClass (className) {\n        return classesOk && classesOk.indexOf(className) !== -1;\n      }\n    }\n  }\n\n  function end (tag) {\n    var low = lowercase(tag);\n    var allowed = (o.allowedTags || []).indexOf(low) !== -1;\n    if (allowed) {\n      if (context.ignoring === false) {\n        out('</');\n        out(low);\n        out('>');\n      } else {\n        unignore(low);\n      }\n    } else {\n      unignore(low);\n    }\n  }\n\n  function testUrl (text) {\n    var start = text[0];\n    if (start === '#' || start === '/') {\n      return true;\n    }\n    var colon = text.indexOf(':');\n    if (colon === -1) {\n      return true;\n    }\n    var questionmark = text.indexOf('?');\n    if (questionmark !== -1 && colon > questionmark) {\n      return true;\n    }\n    var hash = text.indexOf('#');\n    if (hash !== -1 && colon > hash) {\n      return true;\n    }\n    return o.allowedSchemes.some(matches);\n\n    function matches (scheme) {\n      return text.indexOf(scheme + ':') === 0;\n    }\n  }\n\n  function chars (text) {\n    if (context.ignoring === false) {\n      out(o.transformText ? o.transformText(text) : text);\n    }\n  }\n\n  function ignore (tag) {\n    if (elements.voids[tag]) {\n      return;\n    }\n    if (context.ignoring === false) {\n      context = { ignoring: tag, depth: 1 };\n    } else if (context.ignoring === tag) {\n      context.depth++;\n    }\n  }\n\n  function unignore (tag) {\n    if (context.ignoring === tag) {\n      if (--context.depth <= 0) {\n        reset();\n      }\n    }\n  }\n\n  function reset () {\n    context = { ignoring: false, depth: 0 };\n  }\n}\n\nmodule.exports = sanitizer;\n","'use strict';\n\nvar defaults = {\n  allowedAttributes: {\n    a: ['href', 'name', 'target', 'title', 'aria-label'],\n    iframe: ['allowfullscreen', 'frameborder', 'src'],\n    img: ['src', 'alt', 'title', 'aria-label']\n  },\n  allowedClasses: {},\n  allowedSchemes: ['http', 'https', 'mailto'],\n  allowedTags: [\n    'a', 'abbr', 'article', 'b', 'blockquote', 'br', 'caption', 'code', 'del', 'details', 'div', 'em',\n    'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'i', 'img', 'ins', 'kbd', 'li', 'main', 'mark',\n    'ol', 'p', 'pre', 'section', 'span', 'strike', 'strong', 'sub', 'summary', 'sup', 'table',\n    'tbody', 'td', 'th', 'thead', 'tr', 'u', 'ul'\n  ],\n  filter: null\n};\n\nmodule.exports = defaults;\n","'use strict';\n\nvar he = require('he');\nvar assign = require('assignment');\nvar parser = require('./parser');\nvar sanitizer = require('./sanitizer');\nvar defaults = require('./defaults');\n\nfunction insane (html, options, strict) {\n  var buffer = [];\n  var configuration = strict === true ? options : assign({}, defaults, options);\n  var handler = sanitizer(buffer, configuration);\n\n  parser(html, handler);\n\n  return buffer.join('');\n}\n\ninsane.defaults = defaults;\nmodule.exports = insane;\n","import insane from 'insane'\n\nconst insaneOptions = {\n  allowedClasses: {},\n  // @refer CVE-2018-8495\n  // @link https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8495\n  // @link https://leucosite.com/Microsoft-Edge-RCE/\n  // @link https://medium.com/@knownsec404team/analysis-of-the-security-issues-of-url-scheme-in-pc-from-cve-2018-8495-934478a36756\n  allowedSchemes: [\n    'http', 'https', 'mailto',\n    'data' // for support base64 encoded image (安全性有待考虑)\n  ],\n  allowedTags: [\n    'a', 'abbr', 'article', 'b', 'blockquote', 'br', 'caption', 'code', 'del', 'details', 'div', 'em',\n    'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'i', 'img', 'ins', 'kbd', 'li', 'main', 'mark',\n    'ol', 'p', 'pre', 'section', 'span', 'strike', 'strong', 'sub', 'summary', 'sup', 'table',\n    'tbody', 'td', 'th', 'thead', 'tr', 'u', 'ul'\n  ],\n  allowedAttributes: {\n    '*': ['title', 'accesskey'],\n    a: ['href', 'name', 'target', 'aria-label', 'rel'],\n    img: ['src', 'alt', 'title', 'atk-emoticon', 'aria-label'],\n    // for code highlight\n    code: ['class'],\n    span: ['class', 'style'],\n  },\n  filter: node => {\n    // allow hljs style\n    const allowed = [\n      [ 'code', /^hljs\\W+language-(.*)$/ ],\n      [ 'span', /^(hljs-.*)$/ ]\n    ]\n    allowed.forEach(([ tag, reg ]) => {\n      if (\n        node.tag === tag\n        && !!node.attrs.class\n        && !(reg as RegExp).test(node.attrs.class)\n      ) {\n        delete node.attrs.class\n      }\n    })\n\n    // allow <span> set color sty\n    if (node.tag === 'span' && !!node.attrs.style\n        && !/^color:(\\W+)?#[0-9a-f]{3,6};?$/i.test(node.attrs.style)) {\n      delete node.attrs.style\n    }\n\n    return true\n  }\n}\n\nexport function sanitize(content: string): string {\n  // @link https://github.com/markedjs/marked/discussions/1232\n  // @link https://gist.github.com/lionel-rowe/bb384465ba4e4c81a9c8dada84167225\n  return insane(content, insaneOptions)\n}\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.hanabi = factory());\n}(this, (function () { 'use strict';\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar index$1 = createCommonjsModule(function (module) {\n'use strict';\n\nvar comment = module.exports = function () {\n\treturn new RegExp('(?:' + comment.line().source + ')|(?:' + comment.block().source + ')', 'gm');\n};\n\ncomment.line = function () {\n\treturn /(?:^|\\s)\\/\\/(.+?)$/gm;\n};\n\ncomment.block = function () {\n\treturn /\\/\\*([\\S\\s]*?)\\*\\//gm;\n};\n});\n\nvar defaultColors = ['23AC69', '91C132', 'F19726', 'E8552D', '1AAB8E', 'E1147F', '2980C1', '1BA1E6', '9FA0A0', 'F19726', 'E30B20', 'E30B20', 'A3338B'];\n\nvar index = function (input, ref) {\n  if ( ref === void 0 ) ref = {};\n  var colors = ref.colors; if ( colors === void 0 ) colors = defaultColors;\n\n  var index = 0;\n  var cache = {};\n  var wordRe = /[\\u4E00-\\u9FFF\\u3400-\\u4dbf\\uf900-\\ufaff\\u3040-\\u309f\\uac00-\\ud7af\\u0400-\\u04FF]+|\\w+/;\n  var leftAngleRe = /</;\n\n  var re = new RegExp((\"(\" + (wordRe.source) + \"|\" + (leftAngleRe.source) + \")|(\" + (index$1().source) + \")\"), 'gmi');\n  return input\n  .replace(re, function (m, word, cm) {\n    if (cm) {\n      return toComment(cm)\n    }\n\n    if (word === '<') {\n      return '&lt;'\n    }\n    var color;\n    if (cache[word]) {\n      color = cache[word];\n    } else {\n      color = colors[index];\n      cache[word] = color;\n    }\n\n    var out = \"<span style=\\\"color: #\" + color + \"\\\">\" + word + \"</span>\";\n    index = ++index % colors.length;\n    return out\n  })\n};\n\nfunction toComment(cm) {\n  return (\"<span style=\\\"color: slategray\\\">\" + cm + \"</span>\")\n}\n\nreturn index;\n\n})));\n","import hanabi from 'hanabi'\n\nexport function renderCode(code: string) {\n  return hanabi(code)\n}\n","import { marked as libMarked } from 'marked'\nimport { renderCode } from './highlight'\n\nexport function getRenderer() {\n  const renderer = new libMarked.Renderer()\n  renderer.link = markedLinkRenderer(renderer, renderer.link)\n  renderer.code = markedCodeRenderer()\n  return renderer\n}\n\nexport const markedLinkRenderer = (renderer: any, orgLinkRenderer: Function) => (href: string, title: string, text: string): string => {\n  const localLink = href?.startsWith(`${window.location.protocol}//${window.location.hostname}`);\n  const html = orgLinkRenderer.call(renderer, href, title, text);\n  return html.replace(/^<a /, `<a target=\"_blank\" ${!localLink ? `rel=\"noreferrer noopener nofollow\"` : ''} `);\n}\n\nexport const markedCodeRenderer = () => (block: string, lang: string | undefined): string => {\n  // Colorize the block only if the language is known to highlight.js\n  const realLang = (!lang ? 'plaintext' : lang)\n  let colorized = block\n  if ((window as any).hljs) {\n    if (realLang && (window as any).hljs.getLanguage(realLang)) {\n      colorized = (window as any).hljs.highlight(realLang, block).value\n    }\n  } else {\n    colorized = renderCode(block)\n  }\n\n  return `<pre rel=\"${realLang}\">\\n`\n    + `<code class=\"hljs language-${realLang}\">${colorized.replace(/&amp;/g, '&')}</code>\\n`\n    + `</pre>`\n}\n","import { marked as libMarked, MarkedOptions } from 'marked'\n\nimport { sanitize } from './sanitizer'\nimport { renderCode } from './highlight'\nimport { getRenderer } from './marked-renderer'\n\ntype Replacer = (raw: string) => string\nexport type TMarked = typeof libMarked\n\nlet instance: TMarked|undefined\nlet replacers: Replacer[] = []\n\nconst markedOptions: MarkedOptions = {\n  gfm: true,\n  breaks: true,\n  async: false\n}\n\n/** Get Marked instance */\nexport function getInstance() {\n  return instance\n}\n\nexport function setReplacers(arr: Replacer[]) {\n  replacers = arr\n}\n\n/** 初始化 marked */\nexport function initMarked() {\n  try { if (!libMarked.name) return } catch { return }\n\n  // @see https://github.com/markedjs/marked/blob/4afb228d956a415624c4e5554bb8f25d047676fe/src/Tokenizer.js#L329\n  libMarked.setOptions({\n    renderer: getRenderer(),\n    ...markedOptions\n  })\n\n  instance = libMarked\n}\n\n/** 解析 markdown */\nexport default function marked(src: string): string {\n  let markedContent = getInstance()?.parse(src) as string\n  if (!markedContent) { // 无 Markdown 模式简单处理\n    markedContent = simpleMarked(src)\n  }\n\n  let dest = sanitize(markedContent)\n\n  // 内容替换器\n  replacers.forEach((replacer) => {\n    if (typeof replacer === 'function')\n      dest = replacer(dest)\n  })\n\n  return dest\n}\n\nfunction simpleMarked(src: string) {\n  return src\n    // .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n    .replace(/```\\s*([^]+?.*?[^]+?[^]+?)```/g, (_, code) => `<pre><code>${renderCode(code)}</code></pre>`)\n    // .replace(/`([^`]+?)`/g, '<code>$1</code>')\n    .replace(/!\\[(.*?)\\]\\((.*?)\\)/g, (_, alt, imgSrc) => `<img src=\"${imgSrc}\" alt=\"${alt}\" />`)\n    .replace(/\\[(.*?)\\]\\((.*?)\\)/g, (_, text, link) => `<a href=\"${link}\" target=\"_blank\">${text}</a>`)\n    .replace(/\\n/g, '<br>')\n}\n","/**\n * Performs a deep merge of objects and returns new object.\n * Does not modify objects (immutable) and merges arrays via concatenation.\n *\n * @param objects - Objects to merge\n * @returns New object with merged key/values\n */\nexport function mergeDeep<T>(...objects: any[]): T {\n  const isObject = (obj: any) => obj && typeof obj === \"object\" && obj.constructor === Object;\n\n  return objects.reduce((prev, obj) => {\n    Object.keys(obj ?? {}).forEach((key) => {\n      // Avoid prototype pollution\n      if (key === \"__proto__\" || key === \"constructor\" || key === \"prototype\") {\n        return\n      }\n\n      const pVal = prev[key]\n      const oVal = obj[key]\n\n      if (Array.isArray(pVal) && Array.isArray(oVal)) {\n        prev[key] = pVal.concat(...oVal)\n      } else if (isObject(pVal) && isObject(oVal)) {\n        prev[key] = mergeDeep(pVal, oVal)\n      } else {\n        prev[key] = oVal\n      }\n    })\n\n    return prev\n  }, {})\n}\n","import type { NotifyData, PageData, CommentData, DataManagerApi, ListFetchParams, ListLastFetchData, EventPayloadMap } from '@/types'\nimport EventManager from './lib/event-manager'\n\nexport class DataManager implements DataManagerApi {\n  private loading: boolean = false\n  private listLastFetch?: ListLastFetchData\n  private comments: CommentData[] = [] // Note: 无层级结构 + 无须排列\n  private notifies: NotifyData[] = []\n  private page?: PageData\n\n  constructor(\n    protected events: EventManager<EventPayloadMap>\n  ) {}\n\n  getLoading() {\n    return this.loading\n  }\n\n  setLoading(val: boolean) {\n    this.loading = val\n  }\n\n  getListLastFetch() {\n    return this.listLastFetch\n  }\n\n  setListLastFetch(val: ListLastFetchData) {\n    this.listLastFetch = val\n  }\n\n  // -------------------------------------------------------------------\n  //  Comments\n  // -------------------------------------------------------------------\n  getComments() {\n    return this.comments\n  }\n\n  fetchComments(params: Partial<ListFetchParams>) {\n    this.events.trigger('list-fetch', params)\n  }\n\n  findComment(id: number) {\n    return this.comments.find(c => c.id === id)\n  }\n\n  clearComments() {\n    this.comments = []\n    this.events.trigger('list-loaded', this.comments)\n  }\n\n  loadComments(partialComments: CommentData[]) {\n    this.events.trigger('list-load', partialComments)\n\n    this.comments.push(...partialComments)\n\n    this.events.trigger('list-loaded', this.comments)\n  }\n\n  insertComment(comment: CommentData) {\n    this.comments.push(comment)\n\n    this.events.trigger('comment-inserted', comment)\n    this.events.trigger('list-loaded', this.comments) // list-loaded should always keep the last\n  }\n\n  updateComment(comment: CommentData) {\n    this.comments = this.comments.map(c => {\n      if (c.id === comment.id) return comment\n      return c\n    })\n\n    this.events.trigger('comment-updated', comment)\n    this.events.trigger('list-loaded', this.comments)\n  }\n\n  deleteComment(id: number) {\n    const comment = this.comments.find(c => c.id === id)\n    if (!comment) throw new Error(`Comment ${id} not found`)\n    this.comments = this.comments.filter(c => c.id !== id)\n\n    this.events.trigger('comment-deleted', comment)\n    this.events.trigger('list-loaded', this.comments)\n  }\n\n  // -------------------------------------------------------------------\n  //  Notifies\n  // -------------------------------------------------------------------\n  getNotifies() {\n    return this.notifies\n  }\n\n  updateNotifies(notifies: NotifyData[]) {\n    this.notifies = notifies\n\n    this.events.trigger('notifies-updated', this.notifies)\n  }\n\n  // -------------------------------------------------------------------\n  // Page\n  // -------------------------------------------------------------------\n  getPage() {\n    return this.page\n  }\n\n  updatePage(pageData: PageData) {\n    this.page = pageData\n\n    this.events.trigger('page-loaded', pageData)\n  }\n}\n","const en = {\n  /* Editor */\n  placeholder: 'Leave a comment',\n  noComment: 'No Comment',\n  send: 'Send',\n  save: 'Save',\n  nick: 'Nickname',\n  email: 'Email',\n  link: 'Website',\n  emoticon: 'Emoji',\n  preview: 'Preview',\n  uploadImage: 'Upload Image',\n  uploadFail: 'Upload Failed',\n  commentFail: 'Failed to comment',\n  restoredMsg: 'Content has been restored',\n  onlyAdminCanReply: 'Only admin can reply',\n  uploadLoginMsg: 'Please fill in your name and email to upload',\n\n  /* List */\n  counter: '{count} Comments',\n  sortLatest: 'Latest',\n  sortOldest: 'Oldest',\n  sortBest: 'Best',\n  sortAuthor: 'Author',\n  openComment: 'Open Comment',\n  closeComment: 'Close Comment',\n  listLoadFailMsg: 'Failed to load comments',\n  listRetry: 'Retry',\n  loadMore: 'Load More',\n\n  /* Comment */\n  admin: 'Admin',\n  reply: 'Reply',\n  voteUp: 'Up',\n  voteDown: 'Down',\n  voteFail: 'Vote Failed',\n  readMore: 'Read More',\n  actionConfirm: 'Confirm',\n  collapse: 'Collapse',\n  collapsed: 'Collapsed',\n  collapsedMsg: 'This comment has been collapsed',\n  expand: 'Expand',\n  approved: 'Approved',\n  pending: 'Pending',\n  pendingMsg: 'Pending, visible only to commenter.',\n  edit: 'Edit',\n  editCancel: 'Cancel Edit',\n  delete: 'Delete',\n  deleteConfirm: 'Confirm',\n  pin: 'Pin',\n  unpin: 'Unpin',\n\n  /* Time */\n  seconds: 'seconds ago',\n  minutes: 'minutes ago',\n  hours: 'hours ago',\n  days: 'days ago',\n  now: 'just now',\n\n  /* Checker */\n  adminCheck: 'Enter admin password:',\n  captchaCheck: 'Enter the CAPTCHA to continue:',\n  confirm: 'Confirm',\n  cancel: 'Cancel',\n\n  /* Sidebar */\n  msgCenter: 'Messages',\n  ctrlCenter: 'Admin',\n\n  /* General */\n  frontend: 'Frontend',\n  backend: 'Backend',\n  loading: 'Loading',\n  loadFail: 'Load Failed',\n  editing: 'Editing',\n  editFail: 'Edit Failed',\n  deleting: 'Deleting',\n  deleteFail: 'Delete Failed',\n  reqGot: 'Request got',\n  reqAborted: 'Request timed out or terminated unexpectedly',\n  updateMsg: 'Please update Artalk {name} to get the full experience',\n  currentVersion: 'Current Version',\n  ignore: 'Ignore',\n  open: 'Open',\n  openName: 'Open {name}',\n}\n\nexport type I18n = typeof en\nexport type I18nKeys = keyof I18n\n\nexport default en\n","import type { I18n } from '.'\n\nconst zhCN: I18n = {\n  /* Editor */\n  placeholder: '键入内容...',\n  noComment: '「此时无声胜有声」',\n  send: '发送',\n  save: '保存',\n  nick: '昵称',\n  email: '邮箱',\n  link: '网址',\n  emoticon: '表情',\n  preview: '预览',\n  uploadImage: '上传图片',\n  uploadFail: '上传失败',\n  commentFail: '评论失败',\n  restoredMsg: '内容已自动恢复',\n  onlyAdminCanReply: '仅管理员可评论',\n  uploadLoginMsg: '填入你的名字邮箱才能上传哦',\n\n  /* List */\n  counter: '{count} 条评论',\n  sortLatest: '最新',\n  sortOldest: '最早',\n  sortBest: '最热',\n  sortAuthor: '作者',\n  openComment: '打开评论',\n  closeComment: '关闭评论',\n  listLoadFailMsg: '无法获取评论列表数据',\n  listRetry: '点击重新获取',\n  loadMore: '加载更多',\n\n  /* Comment */\n  admin: '管理员',\n  reply: '回复',\n  voteUp: '赞同',\n  voteDown: '反对',\n  voteFail: '投票失败',\n  readMore: '阅读更多',\n  actionConfirm: '确认操作',\n  collapse: '折叠',\n  collapsed: '已折叠',\n  collapsedMsg: '该评论已被系统或管理员折叠',\n  expand: '展开',\n  approved: '已审',\n  pending: '待审',\n  pendingMsg: '审核中，仅本人可见。',\n  edit: '编辑',\n  editCancel: '取消编辑',\n  delete: '删除',\n  deleteConfirm: '确认删除',\n  pin: '置顶',\n  unpin: '取消置顶',\n\n  /* Time */\n  seconds: '秒前',\n  minutes: '分钟前',\n  hours: '小时前',\n  days: '天前',\n  now: '刚刚',\n\n  /* Checker */\n  adminCheck: '键入密码来验证管理员身份：',\n  captchaCheck: '键入验证码继续：',\n  confirm: '确认',\n  cancel: '取消',\n\n  /* Sidebar */\n  msgCenter: '通知中心',\n  ctrlCenter: '控制中心',\n\n  /* General */\n  frontend: '前端',\n  backend: '后端',\n  loading: '加载中',\n  loadFail: '加载失败',\n  editing: '修改中',\n  editFail: '修改失败',\n  deleting: '删除中',\n  deleteFail: '删除失败',\n  reqGot: '请求响应',\n  reqAborted: '请求超时或意外终止',\n  updateMsg: '请更新 Artalk {name} 以获得完整体验',\n  currentVersion: '当前版本',\n  ignore: '忽略',\n  open: '打开',\n  openName: '打开{name}',\n}\n\nexport default zhCN\n","import type { I18n } from '.'\n\nexport const GLOBAL_LOCALES_KEY = \"ArtalkI18n\"\n\nexport function defineLocaleExternal(lang: string, locale: I18n, aliases?: string[]) {\n  if (!window[GLOBAL_LOCALES_KEY]) window[GLOBAL_LOCALES_KEY] = {}\n  window[GLOBAL_LOCALES_KEY][lang] = locale\n  if (aliases) aliases.forEach(l => { window[GLOBAL_LOCALES_KEY][l] = locale })\n  return locale\n}\n","export function createElement<E extends HTMLElement = HTMLElement>(htmlStr: string = ''): E {\n  const div = document.createElement('div')\n  div.innerHTML = htmlStr.trim()\n  return (div.firstElementChild || div) as E\n}\n\nexport function getHeight(el: HTMLElement) {\n  return parseFloat(getComputedStyle(el, null).height.replace('px', ''))\n}\n\nexport function htmlEncode(str: string) {\n  const temp = document.createElement('div')\n  temp.innerText = str\n  const output = temp.innerHTML\n  return output\n}\n\nexport function htmlDecode(str: string) {\n  const temp = document.createElement('div')\n  temp.innerHTML = str\n  const output = temp.innerText\n  return output\n}\n\nexport function getQueryParam(name: string) {\n  const match = RegExp(`[?&]${name}=([^&]*)`).exec(window.location.search);\n  return match && decodeURIComponent(match[1].replace(/\\+/g, ' '));\n}\n\nexport function getOffset(el: HTMLElement, relativeTo?: HTMLElement) {\n  const getOffsetRecursive = (element: HTMLElement): { top: number, left: number } => {\n    const rect = element.getBoundingClientRect()\n    const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop\n    return {\n      top: rect.top + scrollTop,\n      left: rect.left + scrollLeft\n    }\n  }\n\n  const elOffset = getOffsetRecursive(el)\n  if (!relativeTo) return elOffset\n\n  const relativeToOffset = getOffsetRecursive(relativeTo)\n\n  return {\n    top: elOffset.top - relativeToOffset.top,\n    left: elOffset.left - relativeToOffset.left\n  }\n}\n\nexport function padWithZeros(vNumber: number, width: number) {\n  let numAsString = vNumber.toString()\n  while (numAsString.length < width) {\n    numAsString = `0${numAsString}`\n  }\n  return numAsString\n}\n\nexport function dateFormat(date: Date) {\n  const vDay = padWithZeros(date.getDate(), 2)\n  const vMonth = padWithZeros(date.getMonth() + 1, 2)\n  const vYear = padWithZeros(date.getFullYear(), 2)\n  // var vHour = padWithZeros(date.getHours(), 2);\n  // var vMinute = padWithZeros(date.getMinutes(), 2);\n  // var vSecond = padWithZeros(date.getSeconds(), 2);\n  return `${vYear}-${vMonth}-${vDay}`\n}\n\nexport function timeAgo(date: Date, $t: Function = (n: string) => n) {\n  try {\n    const oldTime = date.getTime()\n    const currTime = new Date().getTime()\n    const diffValue = currTime - oldTime\n\n    const days = Math.floor(diffValue / (24 * 3600 * 1000))\n    if (days === 0) {\n      // 计算相差小时数\n      const leave1 = diffValue % (24 * 3600 * 1000) // 计算天数后剩余的毫秒数\n      const hours = Math.floor(leave1 / (3600 * 1000))\n      if (hours === 0) {\n        // 计算相差分钟数\n        const leave2 = leave1 % (3600 * 1000) // 计算小时数后剩余的毫秒数\n        const minutes = Math.floor(leave2 / (60 * 1000))\n        if (minutes === 0) {\n          // 计算相差秒数\n          const leave3 = leave2 % (60 * 1000) // 计算分钟数后剩余的毫秒数\n          const seconds = Math.round(leave3 / 1000)\n          if (seconds < 10) return $t('now')\n          return `${seconds} ${$t('seconds')}`\n        }\n        return `${minutes} ${$t('minutes')}`\n      }\n      return `${hours} ${$t('hours')}`\n    }\n    if (days < 0) return $t('now')\n\n    if (days < 8) {\n      return `${days} ${$t('days')}`\n    }\n\n    return dateFormat(date)\n  } catch (error) {\n    console.error(error)\n    return ' - '\n  }\n}\n\n/** 所有图片加载完毕后执行 */\nexport function onImagesLoaded($container: HTMLElement, event: Function) {\n  if (!$container) return\n  const images = $container.getElementsByTagName('img')\n  if (!images.length) return\n  let loaded = images.length\n  for (let i = 0; i < images.length; i++) {\n    if (images[i].complete) {\n      loaded--\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-loop-func\n      images[i].addEventListener('load', () => {\n        loaded--\n        if (loaded === 0) event()\n      })\n    }\n\n    if (loaded === 0) event()\n  }\n}\n\nexport function getGravatarURL(opts: { params: string, mirror: string, emailMD5: string }) {\n  return `${opts.mirror.replace(/\\/$/, '')}/${opts.emailMD5}?${opts.params.replace(/^\\?/, '')}`\n}\n\nexport function sleep(ms: number) {\n  return new Promise(resolve => { setTimeout(resolve, ms) });\n}\n\n/** 版本号比较（a < b :-1 | 0 | b < a :1） */\nexport function versionCompare(a: string, b: string) {\n  const pa = a.split('.')\n  const pb = b.split('.')\n  for (let i = 0; i < 3; i++) {\n      const na = Number(pa[i])\n      const nb = Number(pb[i])\n      if (na > nb) return 1\n      if (nb > na) return -1\n      if (!Number.isNaN(na) && Number.isNaN(nb)) return 1\n      if (Number.isNaN(na) && !Number.isNaN(nb)) return -1\n  }\n  return 0\n}\n\n/** 获取修正后的 UserAgent */\nexport async function getCorrectUserAgent() {\n  const uaRaw = navigator.userAgent\n  if (!(navigator as any).userAgentData || !(navigator as any).userAgentData.getHighEntropyValues) {\n    return uaRaw\n  }\n\n  // @link https://web.dev/migrate-to-ua-ch/\n  // @link https://web.dev/user-agent-client-hints/\n  const uaData = (navigator as any).userAgentData\n  let uaGot: any = null\n  try {\n    uaGot = await uaData.getHighEntropyValues([\"platformVersion\"])\n  } catch (err) { console.error(err); return uaRaw }\n  const majorPlatformVersion = Number(uaGot.platformVersion.split('.')[0])\n\n  if (uaData.platform === \"Windows\") {\n    if (majorPlatformVersion >= 13) { // @link https://docs.microsoft.com/en-us/microsoft-edge/web-platform/how-to-detect-win11\n      // @date 2022-4-29\n      // Win 11 样本：\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36\"\n      return uaRaw.replace(/Windows NT 10.0/, 'Windows NT 11.0')\n    }\n  }\n  if (uaData.platform === \"macOS\") {\n    if (majorPlatformVersion >= 11) { // 11 => BigSur\n      // @date 2022-4-29\n      // (Intel Chip) macOS 12.3 样本：\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36\"\n      // (Arm Chip) macOS 样本：\"Mozilla/5.0 (Macintosh; ARM Mac OS X 10_15_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0.2 Safari/605.1.15\"\n      return uaRaw.replace(/(Mac OS X \\d+_\\d+_\\d+|Mac OS X)/, `Mac OS X ${uaGot.platformVersion.replace(/\\./g, '_')}`)\n    }\n  }\n\n  return uaRaw\n}\n\n/** 是否为完整的 URL */\nexport function isValidURL(urlRaw: string) {\n  // @link https://www.rfc-editor.org/rfc/rfc3986\n  let url: URL\n  try {\n    url = new URL(urlRaw)\n  } catch (_) { return false }\n  return url.protocol === \"http:\" || url.protocol === \"https:\"\n}\n\n/** 获取基于 conf.server 的 URL */\nexport function getURLBasedOnApi(opts: { base: string, path: string }) {\n  return getURLBasedOn(opts.base, opts.path)\n}\n\n/** 获取基于某个 baseURL 的 URL */\nexport function getURLBasedOn(baseURL: string, path: string) {\n  return `${baseURL.replace(/\\/$/, '')}/${path.replace(/^\\//, '')}`\n}\n","import en, { I18n, I18nKeys } from './en'\nimport zhCN from './zh-CN'\nimport { GLOBAL_LOCALES_KEY } from './external'\nimport * as Utils from '../lib/utils'\n\nexport type * from './en'\n\n// @note the key of language is followed by `ISO 639`\n// https://en.wikipedia.org/wiki/ISO_639\n// https://datatracker.ietf.org/doc/html/rfc5646#section-2.1\nexport const internal = {\n  'en': en,\n  'en-US': en,\n  'zh-CN': zhCN,\n}\n\n/**\n * find a locale object by language name\n */\nexport function findLocaleSet(lang: string): I18n {\n  // normalize a key of language to `ISO 639`\n  lang = lang.replace(\n    /^([a-zA-Z]+)(-[a-zA-Z]+)?$/,\n    (_, p1: string, p2: string) => (p1.toLowerCase() + (p2 || '').toUpperCase())\n  )\n\n  // internal finding\n  if (internal[lang]) {\n    return internal[lang]\n  }\n\n  // external finding\n  if (window[GLOBAL_LOCALES_KEY] && window[GLOBAL_LOCALES_KEY][lang]) {\n    return window[GLOBAL_LOCALES_KEY][lang]\n  }\n\n  // case when not found:\n  // use `en` by default\n  return internal.en\n}\n\n/**\n * System locale setting\n */\nlet LocaleConf: I18n|string = 'en'\nlet LocaleDict: I18n = findLocaleSet(LocaleConf) // en by default\n\n/**\n * Set system locale\n */\nexport function setLocale(locale: I18n|string) {\n  if (locale === LocaleConf) return\n  LocaleConf = locale\n  LocaleDict = (typeof locale === 'string') ? findLocaleSet(locale) : locale\n}\n\n/**\n * Get an i18n message by key\n */\nexport function t(key: I18nKeys, args: {[key: string]: string} = {}) {\n  let str = LocaleDict?.[key] || key\n  str = str.replace(/\\{\\s*(\\w+?)\\s*\\}/g, (_, token) => args[token] || '')\n\n  return Utils.htmlEncode(str)\n}\n\nexport default t\n","export type EventHandler<T> = (payload: T) => void\nexport interface Event<PayloadMap, K extends keyof PayloadMap = keyof PayloadMap> extends EventOptions {\n  name: K\n  handler: EventHandler<PayloadMap[K]>\n}\nexport interface EventOptions {\n  once?: boolean\n}\n\nexport interface EventManagerFuncs<PayloadMap> {\n  on<K extends keyof PayloadMap>(name: K, handler: EventHandler<PayloadMap[K]>, opts?: EventOptions): void\n  off<K extends keyof PayloadMap>(name: K, handler: EventHandler<PayloadMap[K]>): void\n  trigger<K extends keyof PayloadMap>(name: K, payload?: PayloadMap[K]): void\n}\n\nexport default class EventManager<PayloadMap> implements EventManagerFuncs<PayloadMap> {\n  private events: Event<PayloadMap>[] = []\n\n  /**\n   * Add an event listener for a specific event name\n   */\n  public on<K extends keyof PayloadMap>(name: K, handler: EventHandler<PayloadMap[K]>, opts: EventOptions = {}) {\n    this.events.push({ name, handler: handler as EventHandler<PayloadMap[keyof PayloadMap]>, ...opts })\n  }\n\n  /**\n   * Remove an event listener for a specific event name and handler\n   */\n  public off<K extends keyof PayloadMap>(name: K, handler: EventHandler<PayloadMap[K]>) {\n    if (!handler) return // not allow remove all events with same name\n    this.events = this.events.filter((evt) =>\n      !(evt.name === name && evt.handler === handler))\n  }\n\n  /**\n   * Trigger an event with an optional payload\n   */\n  public trigger<K extends keyof PayloadMap>(name: K, payload?: PayloadMap[K]) {\n    this.events\n      .slice(0) // make a copy, in case listeners are removed while iterating\n      .filter((evt) => evt.name === name && typeof evt.handler === 'function')\n      .forEach((evt) => {\n        if (evt.once) this.off(name, evt.handler)\n        evt.handler(payload!)\n      })\n  }\n}\n","import type { ArtalkConfig } from '@/types'\n\nconst defaults: ArtalkConfig = {\n  el: '',\n  pageKey: '',\n  pageTitle: '',\n  server: '',\n  site: '',\n\n  placeholder: '',\n  noComment: '',\n  sendBtn: '',\n  darkMode: false,\n  editorTravel: true,\n\n  flatMode: 'auto',\n  nestMax: 2,\n  nestSort: 'DATE_ASC',\n\n  emoticons: \"https://cdn.jsdelivr.net/gh/ArtalkJS/Emoticons/grps/default.json\",\n\n  vote: true,\n  voteDown: false,\n  uaBadge: true,\n  listSort: true,\n  preview: true,\n  countEl: '#ArtalkCount',\n  pvEl: '#ArtalkPV',\n\n  gravatar: {\n    mirror: 'https://cravatar.cn/avatar/',\n    params: 'd=mp&s=240',\n  },\n\n  pagination: {\n    pageSize: 20,\n    readMore: true,\n    autoLoad: true,\n  },\n\n  heightLimit: {\n    content: 300,\n    children: 400,\n    scrollable: false,\n  },\n\n  imgUpload: true,\n  reqTimeout: 15000,\n  versionCheck: true,\n  useBackendConf: true,\n\n  locale: 'en',\n}\n\nif (ARTALK_LITE) {\n  defaults.vote = false\n  defaults.uaBadge = false\n  defaults.emoticons = false\n  defaults.preview = false\n}\n\nexport default defaults\n","import type { ArtalkConfig, ContextApi } from '@/types'\nimport type { ApiOptions } from './api/options'\nimport { mergeDeep } from './lib/merge-deep'\nimport Defaults from './defaults'\n\n/**\n * Handle the custom config which is provided by the user\n *\n * @param customConf - The custom config object which is provided by the user\n * @param full - If `full` is `true`, the return value will be the complete config for Artalk instance creation\n * @returns The config for Artalk instance creation\n */\nexport function handelCustomConf(customConf: Partial<ArtalkConfig>, full: true): ArtalkConfig\nexport function handelCustomConf(customConf: Partial<ArtalkConfig>, full?: false): Partial<ArtalkConfig>\nexport function handelCustomConf(customConf: Partial<ArtalkConfig>, full = false) {\n  // 合并默认配置\n  const conf: Partial<ArtalkConfig> = full ? mergeDeep(Defaults, customConf) : customConf\n\n  // 绑定元素\n  if (conf.el && typeof conf.el === 'string') {\n    try {\n      const findEl = document.querySelector<HTMLElement>(conf.el)\n      if (!findEl) throw Error(`Target element \"${conf.el}\" was not found.`)\n      conf.el = findEl\n    } catch (e) {\n      console.error(e)\n      throw new Error('Please check your Artalk `el` config.')\n    }\n  }\n\n  // 默认 pageKey\n  if (conf.pageKey === '')\n    conf.pageKey = `${window.location.pathname}` // @link http://bl.ocks.org/abernier/3070589\n\n  // 默认 pageTitle\n  if (conf.pageTitle === '')\n    conf.pageTitle = `${document.title}`\n\n  // 服务器配置\n  if (conf.server)\n    conf.server = conf.server.replace(/\\/$/, '').replace(/\\/api\\/?$/, '')\n\n  // 自适应语言\n  if (conf.locale === 'auto')\n    conf.locale = navigator.language\n\n  // 自动判断启用平铺模式\n  if (conf.flatMode === 'auto')\n    conf.flatMode = window.matchMedia(\"(max-width: 768px)\").matches\n\n  // flatMode\n  if (typeof conf.nestMax === 'number' && Number(conf.nestMax) <= 1)\n    conf.flatMode = true\n\n  return conf\n}\n\n/**\n * Handle the config which is provided by the server\n *\n * @param conf - The Server response config for control the frontend of Artalk remotely\n * @returns The config for Artalk instance creation\n */\nexport function handleConfFormServer(conf: Partial<ArtalkConfig>) {\n  const DisabledKeys: (keyof ArtalkConfig)[] = [\n    'el', 'pageKey', 'pageTitle', 'server', 'site', 'darkMode'\n  ]\n  Object.keys(conf).forEach(k => {\n    if (DisabledKeys.includes(k as any)) delete conf[k]\n  })\n\n  // Patch: `emoticons` config string to json\n  if (conf.emoticons && typeof conf.emoticons === \"string\") {\n    conf.emoticons = conf.emoticons.trim()\n    if (conf.emoticons.startsWith(\"[\") || conf.emoticons.startsWith(\"{\")) {\n      conf.emoticons = JSON.parse(conf.emoticons) // parse json\n    } else if (conf.emoticons === \"false\") {\n      conf.emoticons = false\n    }\n  }\n\n  return conf\n}\n\n/**\n * Convert Artalk Config to ApiOptions for Api client\n *\n * @param conf - Artalk config\n * @param ctx - If `ctx` not provided, `checkAdmin` and `checkCaptcha` will be disabled\n * @returns ApiOptions for Api client instance creation\n */\nexport function convertApiOptions(conf: Partial<ArtalkConfig>, ctx?: ContextApi): ApiOptions {\n  return {\n    baseURL: `${conf.server}/api/v2`,\n    siteName: conf.site || '',\n    pageKey: conf.pageKey || '',\n    pageTitle: conf.pageTitle || '',\n    timeout: conf.reqTimeout,\n    getApiToken: () => ctx?.get('user').getData().token,\n    userInfo: ctx?.get('user').checkHasBasicUserInfo() ? {\n      name: ctx?.get('user').getData().nick,\n      email: ctx?.get('user').getData().email,\n    } : undefined,\n\n    onNeedCheckAdmin: (payload) => {\n      if (!ctx) throw new Error('`ctx` is required when `onNeedCheckAdmin` is called.')\n      return ctx.checkAdmin({})\n    },\n\n    onNeedCheckCaptcha: (payload) => {\n      if (!ctx) throw new Error('`ctx` is required when `onNeedCheckCaptcha` is called.')\n      return ctx.checkCaptcha({\n        imgData: payload.data.imgData,\n        iframe: payload.data.iframe,\n      })\n    },\n  }\n}\n","import type { ArtalkConfig, ContextApi } from '@/types'\n\nexport function watchConf<T extends (keyof ArtalkConfig)[]>(ctx: ContextApi, keys: T, effect: (conf: Pick<ArtalkConfig, T[number]>) => void): void {\n  const deepEqual = (a: any, b: any) => JSON.stringify(a) === JSON.stringify(b)\n  const val = () => {\n    const conf = ctx.getConf()\n    const res: any = {}\n    keys.forEach((key) => { res[key] = conf[key] })\n    return res\n  }\n  let lastVal: any = null\n  const handler = () => {\n    const newVal = val()\n    const isDiff = lastVal == null || !deepEqual(lastVal, newVal)\n    // only trigger when specific keys changed\n    if (isDiff) {\n      lastVal = newVal\n      effect(newVal)\n    }\n  }\n  ctx.on('mounted', handler)\n  ctx.on('updated', handler)\n}\n","import type { ArtalkConfig, CommentData, ListFetchParams, ContextApi, EventPayloadMap, SidebarShowPayload } from '@/types'\nimport type { TInjectedServices } from './service'\nimport { Api } from './api'\n\nimport * as marked from './lib/marked'\nimport { mergeDeep } from './lib/merge-deep'\nimport { CheckerCaptchaPayload, CheckerPayload } from './components/checker'\n\nimport { DataManager } from './data'\nimport * as I18n from './i18n'\n\nimport EventManager from './lib/event-manager'\nimport { convertApiOptions, handelCustomConf } from './config'\nimport { watchConf } from './lib/watch-conf'\n\n// Auto dependency injection\ninterface Context extends TInjectedServices { }\n\n/**\n * Artalk Context\n */\nclass Context implements ContextApi {\n  /* 运行参数 */\n  conf: ArtalkConfig\n  data: DataManager\n  $root: HTMLElement\n\n  /* Event Manager */\n  private events = new EventManager<EventPayloadMap>()\n  private mounted = false\n\n  constructor(conf: ArtalkConfig) {\n    this.conf = conf\n\n    this.$root = conf.el as HTMLElement\n    this.$root.classList.add('artalk')\n    this.$root.innerHTML = ''\n\n    this.data = new DataManager(this.events)\n\n    this.on('mounted', () => {\n      this.mounted = true\n    })\n  }\n\n  inject(depName: string, obj: any) {\n    this[depName] = obj\n  }\n\n  get(depName: string) {\n    return this[depName]\n  }\n\n  getApi() {\n    return new Api(convertApiOptions(this.conf, this))\n  }\n\n  getData() {\n    return this.data\n  }\n\n  replyComment(commentData: CommentData, $comment: HTMLElement): void {\n    this.editor.setReply(commentData, $comment)\n  }\n\n  editComment(commentData: CommentData, $comment: HTMLElement): void {\n    this.editor.setEditComment(commentData, $comment)\n  }\n\n  fetch(params: Partial<ListFetchParams>): void {\n    this.data.fetchComments(params)\n  }\n\n  reload(): void {\n    this.data.fetchComments({ offset: 0 })\n  }\n\n  /* List */\n  listGotoFirst(): void {\n    this.events.trigger('list-goto-first')\n  }\n\n  getCommentNodes() {\n    return this.list.getCommentNodes()\n  }\n\n  getComments() {\n    return this.data.getComments()\n  }\n\n  getCommentList = this.getCommentNodes\n  getCommentDataList = this.getComments\n\n  /* Editor */\n  editorShowLoading(): void {\n    this.editor.showLoading()\n  }\n\n  editorHideLoading(): void {\n    this.editor.hideLoading()\n  }\n\n  editorShowNotify(msg, type): void {\n    this.editor.showNotify(msg, type)\n  }\n\n  editorResetState(): void {\n    this.editor.resetState()\n  }\n\n  /* Sidebar */\n  showSidebar(payload?: SidebarShowPayload): void {\n    this.sidebarLayer.show(payload)\n  }\n\n  hideSidebar(): void {\n    this.sidebarLayer.hide()\n  }\n\n  /* Checker */\n  checkAdmin(payload: CheckerPayload): Promise<void> {\n    return this.checkerLauncher.checkAdmin(payload)\n  }\n\n  checkCaptcha(payload: CheckerCaptchaPayload): Promise<void> {\n    return this.checkerLauncher.checkCaptcha(payload)\n  }\n\n  /* Events */\n  on(name: any, handler: any) {\n    this.events.on(name, handler)\n  }\n\n  off(name: any, handler: any) {\n    this.events.off(name, handler)\n  }\n\n  trigger(name: any, payload?: any) {\n    this.events.trigger(name, payload)\n  }\n\n  /* i18n */\n  $t(key: I18n.I18nKeys, args: {[key: string]: string} = {}): string {\n    return I18n.t(key, args)\n  }\n\n  setDarkMode(darkMode: boolean|'auto'): void {\n    this.updateConf({ darkMode })\n  }\n\n  updateConf(nConf: Partial<ArtalkConfig>): void {\n    this.conf = mergeDeep(this.conf, handelCustomConf(nConf, false))\n    this.mounted && this.events.trigger('updated', this.conf)\n  }\n\n  getConf(): ArtalkConfig {\n    return this.conf\n  }\n\n  getEl(): HTMLElement {\n    return this.$root\n  }\n\n  getMarked() {\n    return marked.getInstance()\n  }\n\n  watchConf<T extends (keyof ArtalkConfig)[]>(keys: T, effect: (conf: Pick<ArtalkConfig, T[number]>) => void): void {\n    watchConf(this, keys, effect)\n  }\n}\n\nexport default Context\n","import $t from '@/i18n'\nimport * as Utils from '../lib/utils'\n\ntype BtnClickHandler = (btnEl: HTMLElement, dialog: Dialog) => boolean|void\n\n/**\n * 对话框\n */\nexport default class Dialog {\n  public $el: HTMLElement\n  public $content: HTMLElement\n  public $actions: HTMLElement\n\n  constructor (contentEl: HTMLElement) {\n    this.$el = Utils.createElement(\n      `<div class=\"atk-layer-dialog-wrap\">\n        <div class=\"atk-layer-dialog\">\n          <div class=\"atk-layer-dialog-content\"></div>\n          <div class=\"atk-layer-dialog-actions\"></div>\n        </div>\n      </div>`\n    )\n\n    // 按钮\n    this.$actions = this.$el.querySelector<HTMLElement>('.atk-layer-dialog-actions')!\n\n    // 内容\n    this.$content = this.$el.querySelector('.atk-layer-dialog-content')!\n    this.$content.appendChild(contentEl)\n  }\n\n  /** 按钮 · 确定 */\n  public setYes(handler: BtnClickHandler) {\n    const btn = Utils.createElement<HTMLButtonElement>(\n      `<button data-action=\"confirm\">${$t('confirm')}</button>`\n    )\n    btn.onclick = this.onBtnClick(handler)\n    this.$actions.appendChild(btn)\n\n    return this\n  }\n\n  /** 按钮 · 取消 */\n  public setNo(handler: BtnClickHandler) {\n    const btn = Utils.createElement<HTMLButtonElement>(\n      `<button data-action=\"cancel\">${$t('cancel')}</button>`\n    )\n    btn.onclick = this.onBtnClick(handler)\n    this.$actions.appendChild(btn)\n\n    return this\n  }\n\n  private onBtnClick(handler: BtnClickHandler) {\n    return (evt: Event) => {\n      const re = handler(evt.currentTarget as HTMLElement, this)\n      if (re === undefined || re === true) {\n        this.$el.remove()\n      }\n    }\n  }\n}\n","import type { NotifyLevel } from '@/types'\nimport * as Utils from './utils'\n\n/** 显示加载 */\nexport function showLoading(parentElem: HTMLElement, conf?: { transparentBg?: boolean }) {\n  // Use :scope https://developer.mozilla.org/en-US/docs/Web/CSS/:scope\n  let $loading = parentElem.querySelector<HTMLElement>(':scope > .atk-loading')\n  if (!$loading) {\n    $loading = Utils.createElement(\n    `<div class=\"atk-loading\" style=\"display: none;\">\n      <div class=\"atk-loading-spinner\">\n        <svg viewBox=\"25 25 50 50\"><circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\"></circle></svg>\n      </div>\n    </div>`)\n    if (conf?.transparentBg) $loading.style.background = 'transparent'\n    parentElem.appendChild($loading)\n  }\n  $loading.style.display = ''\n\n  // spinner 延迟显示，若加载等待时间太短，没必要显示（闪一下即可）\n  const $spinner = $loading.querySelector<HTMLElement>('.atk-loading-spinner')\n  if ($spinner) {\n    $spinner.style.display = 'none'\n    window.setTimeout(() => {\n      if ($spinner.isConnected) $spinner.style.display = ''\n    }, 500)\n  }\n}\n\n/** 隐藏加载 */\nexport function hideLoading(parentElem: HTMLElement) {\n  const $loading = parentElem.querySelector<HTMLElement>(':scope > .atk-loading')\n  if ($loading) $loading.style.display = 'none'\n}\n\n/** 元素加载动画 */\nexport function setLoading(val: boolean, parentElem: HTMLElement) {\n  if (val) showLoading(parentElem)\n  else hideLoading(parentElem)\n}\n\n/** 元素是否用户可见 */\nexport function isVisible(el: HTMLElement, viewport: HTMLElement = document.documentElement) {\n  const viewportHeight = viewport.clientHeight\n\n  const docViewTop = viewport.scrollTop\n  const docViewBottom = docViewTop + viewportHeight\n\n  const rect = el.getBoundingClientRect()\n  const elemTop = rect.top + docViewTop\n  const elemBottom = elemTop + rect.height\n\n  return (elemBottom <= docViewBottom) //&& (elemTop >= docViewTop) 注释因为假如 el 比 viewport 还高就会失效\n}\n\n/** 滚动到元素中心 */\nexport function scrollIntoView(elem: HTMLElement, enableAnim: boolean = true, relativeTo?: HTMLElement) {\n  let top: number\n\n  if (relativeTo) {\n    const containerRect = relativeTo.getBoundingClientRect()\n    const elementRect = elem.getBoundingClientRect()\n    top = elementRect.top - containerRect.top + relativeTo.scrollTop - relativeTo.clientHeight / 2 + elem.clientHeight / 2\n  } else {\n    const rect = elem.getBoundingClientRect()\n    const elemTop = rect.top + window.scrollY\n    top = elemTop - (window.innerHeight / 2 - rect.height / 2)\n  }\n\n  const scrollOptions: ScrollToOptions = {\n    top, left: 0,\n    // behavior: enableAnim ? 'smooth' : 'instant',\n    behavior: 'instant'\n  }\n\n  if (relativeTo) relativeTo.scroll(scrollOptions)\n  else window.scroll(scrollOptions)\n}\n\n/** 显示消息 */\nexport function showNotify(\n  wrapElem: HTMLElement,\n  msg: string,\n  type: NotifyLevel,\n) {\n  const colors = { s: '#57d59f', e: '#ff6f6c', w: '#ffc721', i: '#2ebcfc' }\n  const timeout = 3000 // 持续显示时间 ms\n\n  const notifyElem = Utils.createElement(\n    `<div class=\"atk-notify atk-fade-in\" style=\"background-color: ${colors[type]}\"><span class=\"atk-notify-content\"></span></div>`\n  )\n  const notifyContentEl = notifyElem.querySelector<HTMLElement>('.atk-notify-content')!\n  notifyContentEl.innerHTML = Utils.htmlEncode(msg).replace('\\n', '<br/>')\n\n  wrapElem.appendChild(notifyElem)\n\n  const notifyRemove = () => {\n    notifyElem.classList.add('atk-fade-out')\n    setTimeout(() => {\n      notifyElem.remove()\n    }, 200)\n  }\n\n  let timeoutFn: number\n  if (timeout > 0) {\n    timeoutFn = window.setTimeout(() => {\n      notifyRemove()\n    }, timeout)\n  }\n\n  notifyElem.addEventListener('click', () => {\n    notifyRemove()\n    window.clearTimeout(timeoutFn)\n  })\n}\n\n/** fade 动画 */\nexport function playFadeAnim(\n  elem: HTMLElement,\n  after?: () => void,\n  type: 'in' | 'out' = 'in'\n) {\n  elem.classList.add(`atk-fade-${type}`)\n  // 动画结束清除 class\n  const onAnimEnded = () => {\n    elem.classList.remove(`atk-fade-${type}`)\n    elem.removeEventListener('animationend', onAnimEnded)\n    if (after) after()\n  }\n  elem.addEventListener('animationend', onAnimEnded)\n}\n\n/** 渐入动画 */\nexport function playFadeInAnim(elem: HTMLElement, after?: () => void) {\n  playFadeAnim(elem, after, 'in')\n}\n\n/** 渐出动画 */\nexport function playFadeOutAnim(elem: HTMLElement, after?: () => void) {\n  playFadeAnim(elem, after, 'out')\n}\n\n/** 设置全局错误 */\nexport function setError(parentElem: HTMLElement, html: string | HTMLElement | null, title: string = '<span class=\"atk-error-title\">Artalk Error</span>') {\n  let elem = parentElem.querySelector<HTMLElement>('.atk-error-layer')\n  if (html === null) {\n    if (elem !== null) elem.remove()\n    return\n  }\n  if (!elem) {\n    elem = Utils.createElement(\n      `<div class=\"atk-error-layer\">${title}<span class=\"atk-error-text\"></span></div>`\n    )\n    parentElem.appendChild(elem)\n  }\n\n  const errorTextEl = elem.querySelector<HTMLElement>('.atk-error-text')!\n  errorTextEl.innerHTML = ''\n  if (html === null) return\n\n  if (html instanceof HTMLElement) {\n    errorTextEl.appendChild(html)\n  } else {\n    errorTextEl.innerText = html\n  }\n}\n\nexport function getScrollBarWidth() {\n  const inner = document.createElement('p')\n  inner.style.width = '100%'\n  inner.style.height = '200px'\n\n  const outer = document.createElement('div')\n  outer.style.position = 'absolute'\n  outer.style.top = '0px'\n  outer.style.left = '0px'\n  outer.style.visibility = 'hidden'\n  outer.style.width = '200px'\n  outer.style.height = '150px'\n  outer.style.overflow = 'hidden'\n  outer.appendChild(inner)\n\n  document.body.appendChild(outer)\n  const w1 = inner.offsetWidth\n  outer.style.overflow = 'scroll'\n  let w2 = inner.offsetWidth\n  if (w1 === w2) w2 = outer.clientWidth\n\n  document.body.removeChild(outer)\n\n  return (w1 - w2)\n}\n","import $t from '@/i18n'\nimport * as Utils from '@/lib/utils'\nimport * as Ui from '@/lib/ui'\nimport type { CheckerCtx } from '.'\n\n/** 图片验证码 */\nexport function imgBody(checker: CheckerCtx) {\n  // 图片验证方式\n  const elem = Utils.createElement(\n    `<span><img class=\"atk-captcha-img\" src=\"${checker.get('img_data') || ''}\">${$t('captchaCheck')}</span>`\n  );\n\n  // 刷新验证码\n  elem.querySelector<HTMLElement>('.atk-captcha-img')!.onclick = () => {\n    const imgEl = elem.querySelector('.atk-captcha-img')\n    checker.getApi().captcha.getCaptcha()\n      .then((res) => {\n        imgEl!.setAttribute('src', res.data.img_data)\n      })\n      .catch((err) => {\n        console.error('Failed to get captcha image ', err)\n      })\n  }\n  return elem\n}\n\n/** iframe 形式的通用验证服务 */\nexport function iframeBody(checker: CheckerCtx) {\n  const $iframeWrap = Utils.createElement(`<div class=\"atk-checker-iframe-wrap\"></div>`)\n  const $iframe = Utils.createElement<HTMLIFrameElement>(`<iframe class=\"atk-fade-in\" referrerpolicy=\"strict-origin-when-cross-origin\"></iframe>`)\n  $iframe.style.display = 'none'\n  Ui.showLoading($iframeWrap, { transparentBg: true })\n  $iframe.src = checker.getOpts().getCaptchaIframeURL()\n  $iframe.onload = () => {\n    $iframe.style.display = ''\n    Ui.hideLoading($iframeWrap)\n  }\n  $iframeWrap.append($iframe)\n\n  const $closeBtn = Utils.createElement(`<div class=\"atk-close-btn\"><i class=\"atk-icon atk-icon-close\"></i></div>`)\n  $iframeWrap.append($closeBtn)\n\n  checker.hideInteractInput()\n\n  // 轮询状态\n  let stop = false // 打断\n  const sleep = (ms: number) => new Promise((resolve) => { window.setTimeout(() => { resolve(null) }, ms) })\n  ;(async function queryStatus() {\n    await sleep(1000)\n    if (stop) return\n    let isPass = false\n    try {\n      const resp = await checker.getApi().captcha.getCaptchaStatus()\n      isPass = resp.data.is_pass\n    } catch { isPass = false }\n    if (isPass) {\n      checker.triggerSuccess()\n    } else {\n      queryStatus()\n    }\n  })()\n\n  $closeBtn.onclick = () => {\n    stop = true\n    checker.cancel()\n  }\n\n  return $iframeWrap\n}\n","\nimport type { Checker } from '.'\nimport * as render from './captcha-renders'\n\nconst CaptchaChecker: Checker<{}> = {\n  request(checker, inputVal) {\n    return checker.getApi().captcha.verifyCaptcha({\n      value: inputVal\n    })\n  },\n\n  body(checker) {\n    if (checker.get('iframe')) return render.iframeBody(checker)\n    return render.imgBody(checker)\n  },\n\n  onSuccess(checker, data, inputVal, formEl) {\n    checker.set('val', inputVal)\n  },\n\n  onError(checker, err, inputVal, formEl) {\n    formEl.querySelector<HTMLElement>('.atk-captcha-img')!.click() // 刷新验证码\n    formEl.querySelector<HTMLInputElement>('input[type=\"text\"]')!.value = '' // 清空输入框输入\n  }\n}\n\nexport default CaptchaChecker\n\n","import $t from '@/i18n'\nimport * as Utils from '@/lib/utils'\nimport type { Checker } from '.'\n\nconst AdminChecker: Checker<{ token: string }> = {\n  inputType: 'password',\n\n  async request(checker, inputVal) {\n    return (await checker.getApi().user.login({\n      name: checker.getUser().getData().nick,\n      email: checker.getUser().getData().email,\n      password: inputVal\n    })).data\n  },\n\n  body(checker) {\n    return Utils.createElement(`<span>${$t('adminCheck')}</span>`)\n  },\n\n  onSuccess(checker, res, inputVal, formEl) {\n    checker.getUser().update({\n      isAdmin: true,\n      token: res.token\n    })\n    checker.getOpts().onReload()\n  },\n\n  onError(checker, err, inputVal, formEl) {}\n}\n\nexport default AdminChecker\n","import type { Api } from '@/api'\nimport Dialog from '@/components/dialog'\nimport $t from '@/i18n'\nimport type { ContextApi } from '@/types'\nimport type User from '@/lib/user'\nimport * as Utils from '@/lib/utils'\nimport CaptchaChecker from './captcha'\nimport AdminChecker from './admin'\n\nexport interface CheckerCaptchaPayload extends CheckerPayload {\n  imgData?: string\n  iframe?: string\n}\n\nexport interface CheckerPayload {\n  onSuccess?: () => void\n  onMount?: (dialogEl: HTMLElement) => void\n  onCancel?: () => void\n}\n\nexport interface CheckerLauncherOptions {\n  getCtx: () => ContextApi\n  getApi: () => Api\n  getCaptchaIframeURL: () => string\n  onReload: () => void\n}\n\nfunction wrapPromise<P extends CheckerPayload = CheckerPayload>(fn: (p: P) => void) {\n  return (payload: P) => new Promise<void>((resolve, reject) => {\n    const cancelFn = payload.onCancel\n    payload.onCancel = () => {\n      cancelFn && cancelFn()\n      reject(new Error('user canceled the checker'))\n    }\n    const successFn = payload.onSuccess\n    payload.onSuccess = () => {\n      successFn && successFn()\n      resolve()\n    }\n    fn(payload)\n  })\n}\n\n/**\n * Checker 发射台\n */\nexport default class CheckerLauncher {\n  constructor(private opts: CheckerLauncherOptions) { }\n\n  public checkCaptcha: ((payload: CheckerCaptchaPayload) => Promise<void>) = wrapPromise((p) => {\n    this.fire(CaptchaChecker, p, (ctx) => {\n      ctx.set('img_data', p.imgData)\n      ctx.set('iframe', p.iframe)\n    })\n  })\n\n  public checkAdmin: ((payload: CheckerPayload) => Promise<void>) = wrapPromise((p) => {\n    this.fire(AdminChecker, p)\n  })\n\n  public fire(checker: Checker, payload: CheckerPayload, postFire?: (c: CheckerCtx) => void) {\n    // 显示层\n    const layer = this.opts.getCtx().get('layerManager').create(`checker-${new Date().getTime()}`)\n    layer.show()\n\n    const close = () => {\n      layer.destroy()\n    }\n\n    // 构建 Checker 的上下文\n    const checkerStore: CheckerStore = {}\n    let hideInteractInput = false\n    const checkerCtx: CheckerCtx = {\n      set: (key, val) => { checkerStore[key] = val },\n      get: (key) => (checkerStore[key]),\n      getOpts: () => (this.opts),\n      getUser: () => (this.opts.getCtx().get('user')),\n      getApi: () => this.opts.getApi(),\n      hideInteractInput: () => {\n        hideInteractInput = true\n      },\n      triggerSuccess: () => {\n        close()\n        if (checker.onSuccess) checker.onSuccess(checkerCtx, \"\", \"\", formEl)\n        if (payload.onSuccess) payload.onSuccess()\n      },\n      cancel: () => {\n        close()\n        if (payload.onCancel) payload.onCancel()\n      }\n    }\n\n    if (postFire) postFire(checkerCtx)\n\n    // 创建表单\n    const formEl = Utils.createElement()\n    formEl.appendChild(checker.body(checkerCtx))\n\n    // 输入框\n    const $input = Utils.createElement<HTMLInputElement>(\n      `<input id=\"check\" type=\"${checker.inputType || 'text'}\" autocomplete=\"off\" required placeholder=\"\">`\n    )\n    formEl.appendChild($input)\n    setTimeout(() => $input.focus(), 80) // 延迟 Focus\n\n    // 绑定键盘事件\n    $input.onkeyup = (evt) => {\n      if (evt.key === 'Enter' || evt.keyCode === 13) {\n        // 按下回车键\n        evt.preventDefault()\n        layer\n          .getEl()\n          .querySelector<HTMLButtonElement>('button[data-action=\"confirm\"]')!\n          .click()\n      }\n    }\n\n    let btnTextOrg: string | undefined\n    const dialog = new Dialog(formEl)\n\n    // 确认按钮\n    dialog.setYes((btnEl) => {\n      const inputVal = $input.value.trim()\n\n      // 按钮操作\n      if (!btnTextOrg) btnTextOrg = btnEl.innerText\n      const btnTextSet = (btnText: string) => {\n        btnEl.innerText = btnText\n        btnEl.classList.add('error')\n      }\n      const btnTextRestore = () => {\n        btnEl.innerText = btnTextOrg || ''\n        btnEl.classList.remove('error')\n      }\n\n      btnEl.innerText = `${$t('loading')}...`\n\n      // 发送请求\n      checker\n        .request(checkerCtx, inputVal)\n        .then((data) => {\n          // 请求成功\n          close()\n\n          if (checker.onSuccess) checker.onSuccess(checkerCtx, data, inputVal, formEl)\n          if (payload.onSuccess) payload.onSuccess()\n        })\n        .catch((err) => {\n          // 请求失败\n          btnTextSet(String(err.msg || String(err)))\n\n          if (checker.onError) checker.onError(checkerCtx, err, inputVal, formEl)\n\n          // 错误显示 3s 后恢复按钮\n          const tf = setTimeout(() => btnTextRestore(), 3000)\n          $input.onfocus = () => {\n            btnTextRestore()\n            clearTimeout(tf)\n          }\n        })\n\n      return false\n    })\n\n    // 取消按钮\n    dialog.setNo(() => {\n      close()\n      if (payload.onCancel) payload.onCancel()\n      return false\n    })\n\n    if (hideInteractInput) {\n      $input.style.display = 'none'\n      dialog.$el.querySelector<HTMLElement>('.atk-layer-dialog-actions')!.style.display = 'none'\n    }\n\n    // 层装载 dialog 元素\n    layer.getEl().append(dialog.$el)\n\n    // onMount 回调\n    if (payload.onMount) payload.onMount(dialog.$el)\n  }\n}\n\nexport interface Checker<T = any> {\n  el?: HTMLElement\n  inputType?: 'password' | 'text'\n  body: (checker: CheckerCtx) => HTMLElement\n  request: (checker: CheckerCtx, inputVal: string) => Promise<T>\n  onSuccess?: (checker: CheckerCtx, respData: T, inputVal: string, formEl: HTMLElement) => void\n  onError?: (checker: CheckerCtx, errData: any, inputVal: string, formEl: HTMLElement) => void\n}\n\ninterface CheckerStore {\n  val?: string\n  img_data?: string\n  iframe?: string\n}\n\nexport interface CheckerCtx {\n  get<K extends keyof CheckerStore>(key: K): CheckerStore[K]\n  set<K extends keyof CheckerStore>(key: K, val: CheckerStore[K]): void\n  getOpts(): CheckerLauncherOptions\n  getApi(): Api\n  getUser(): User\n  hideInteractInput(): void\n  triggerSuccess(): void\n  cancel(): void\n}\n","import type { ContextApi } from '@/types'\n\nexport default abstract class Component {\n  public $el!: HTMLElement\n  public get conf() {\n    return this.ctx.conf\n  }\n\n  public constructor(\n    public ctx: ContextApi\n  ) {}\n\n  getEl() {\n    return this.$el\n  }\n}\n","export default \"<div class=\\\"atk-main-editor\\\">\\n  <div class=\\\"atk-header\\\">\\n    <input name=\\\"nick\\\" class=\\\"atk-nick\\\" type=\\\"text\\\" required=\\\"required\\\">\\n    <input name=\\\"email\\\" class=\\\"atk-email\\\" type=\\\"email\\\" required=\\\"required\\\">\\n    <input name=\\\"link\\\" class=\\\"atk-link\\\" type=\\\"url\\\">\\n  </div>\\n  <div class=\\\"atk-textarea-wrap\\\">\\n    <textarea class=\\\"atk-textarea\\\"></textarea>\\n  </div>\\n  <div class=\\\"atk-plug-panel-wrap\\\" style=\\\"display: none;\\\"></div>\\n  <div class=\\\"atk-bottom\\\">\\n    <div class=\\\"atk-item atk-bottom-left\\\">\\n      <span class=\\\"atk-state-wrap\\\"></span>\\n      <span class=\\\"atk-plug-btn-wrap\\\"></span>\\n    </div>\\n    <div class=\\\"atk-item\\\">\\n      <button type=\\\"button\\\" class=\\\"atk-send-btn\\\"></button>\\n    </div>\\n  </div>\\n  <div class=\\\"atk-notify-wrap\\\"></div>\\n</div>\\n\"","import * as Utils from '../lib/utils'\nimport EditorHTML from './editor.html?raw'\n\nconst Sel = {\n  $header: '.atk-header',\n  $nick: '.atk-header [name=\"nick\"]',\n  $email: '.atk-header [name=\"email\"]',\n  $link: '.atk-header [name=\"link\"]',\n  $textareaWrap: '.atk-textarea-wrap',\n  $textarea: '.atk-textarea',\n  $bottom: '.atk-bottom',\n  $submitBtn: '.atk-send-btn',\n  $notifyWrap: '.atk-notify-wrap',\n  $bottomLeft: '.atk-bottom-left',\n  $stateWrap: '.atk-state-wrap',\n  $plugBtnWrap: '.atk-plug-btn-wrap',\n  $plugPanelWrap: '.atk-plug-panel-wrap',\n}\n\nexport interface EditorUI extends Record<keyof typeof Sel, HTMLElement> {\n  $el: HTMLElement\n  $nick: HTMLInputElement\n  $email: HTMLInputElement\n  $link: HTMLInputElement\n  $textarea: HTMLTextAreaElement\n  $submitBtn: HTMLButtonElement\n  $sendReplyBtn?: HTMLElement\n  $editCancelBtn?: HTMLElement\n}\n\nexport function render() {\n  const $el = Utils.createElement(EditorHTML)\n  const ui = { $el }\n  Object.entries(Sel).forEach(([k, sel]) => {\n    ui[k] = $el.querySelector(sel)\n  })\n  return ui as EditorUI\n}\n","import type { CommentData, EditorState } from '@/types'\nimport * as Utils from '@/lib/utils'\nimport type PlugKit from './_kit'\n\n/**\n * Editor 插件\n */\ninterface EditorPlug {\n  $btn?: HTMLElement\n  $panel?: HTMLElement\n  contentTransformer?(rawContent: string): string\n  editorStateEffectWhen?: EditorState\n  editorStateEffect?(comment: CommentData): () => void\n}\n\nclass EditorPlug {\n  constructor(\n    protected kit: PlugKit\n  ) {\n  }\n\n  /** Use plug btn will add a btn on the bottom of editor */\n  useBtn(html: string = '<div></div>') {\n    this.$btn = Utils.createElement(`<span class=\"atk-plug-btn\">${html}</span>`)\n    return this.$btn\n  }\n\n  /** Use plug panel will show the panel when btn is clicked */\n  usePanel(html: string = '<div></div>') {\n    this.$panel = Utils.createElement(html)\n    return this.$panel\n  }\n\n  /** Use the content transformer to handle the content of the last submit by the editor */\n  useContentTransformer(func: (raw: string) => string) {\n    this.contentTransformer = func\n  }\n\n  /** Listen the event of panel show */\n  usePanelShow(func: () => void) {\n    this.kit.useEvents().on('panel-show', (aPlug) => {\n      if (aPlug === this) func()\n    })\n  }\n\n  /** Listen the event of panel hide */\n  usePanelHide(func: () => void) {\n    this.kit.useEvents().on('panel-hide', (aPlug) => {\n      if (aPlug === this) func()\n    })\n  }\n\n  /** Use editor state modifier */\n  useEditorStateEffect(stateName: EditorState, effectFn: (comment: CommentData) => () => void) {\n    this.editorStateEffectWhen = stateName\n    this.editorStateEffect = effectFn\n  }\n}\n\nexport default EditorPlug\n","import * as Utils from '@/lib/utils'\nimport EditorPlug from './_plug'\n\nexport default class Mover extends EditorPlug {\n  private isMoved = false\n\n  move(afterEl: HTMLElement) {\n    if (this.isMoved) return\n    this.isMoved = true\n\n    const editorEl = this.kit.useUI().$el\n\n    editorEl.after(Utils.createElement('<div class=\"atk-editor-travel-placeholder\"></div>'))\n\n    const $travelPlace = Utils.createElement('<div></div>')\n    afterEl.after($travelPlace)\n    $travelPlace.replaceWith(editorEl)\n\n    editorEl.classList.add('atk-fade-in') // 添加渐入动画\n    editorEl.classList.add('editor-traveling')\n  }\n\n  back() {\n    if (!this.isMoved) return\n    this.isMoved = false\n    this.kit.useGlobalCtx().$root.querySelector('.atk-editor-travel-placeholder')?.replaceWith(this.kit.useUI().$el)\n    this.kit.useUI().$el.classList.remove('editor-traveling')\n  }\n}\n","import type { EditorState, CommentData } from '@/types'\nimport * as Ui from '@/lib/ui'\nimport type Editor from './editor'\nimport Mover from '../plugins/editor/mover'\n\nexport default class EditorStateManager {\n  constructor(private editor: Editor) {}\n\n  private stateCurt: EditorState = 'normal'\n  private stateUnmountFn: (() => void)|null = null\n\n  /** Get current state */\n  get() {\n    return this.stateCurt\n  }\n\n  /**\n   * Switch editor state\n   *\n   * @param state The state to switch\n   * @param payload The cause of state switch\n   */\n  switch(state: EditorState, payload?: { $comment: HTMLElement, comment: CommentData }) {\n    // trigger unmount\n    if (this.stateUnmountFn) {\n      this.stateUnmountFn()\n      this.stateUnmountFn = null\n\n      // move editor back to the initial position\n      this.editor.getPlugs()?.get(Mover)?.back()\n    }\n\n    // invoke effect function and save unmount function\n    if (state !== 'normal' && payload) {\n      // move editor position\n      let moveAfterEl = payload.$comment\n      if (!this.editor.conf.flatMode) moveAfterEl = moveAfterEl.querySelector<HTMLElement>('.atk-footer')!\n      this.editor.getPlugs()?.get(Mover)?.move(moveAfterEl)\n\n      const $relative = this.editor.ctx.conf.scrollRelativeTo && this.editor.ctx.conf.scrollRelativeTo()\n      Ui.scrollIntoView(this.editor.getUI().$el, true, $relative)\n\n      const plugin = this.editor.getPlugs()?.getPlugs().find(p => p.editorStateEffectWhen === state)\n      if (plugin && plugin.editorStateEffect) {\n        this.stateUnmountFn = plugin.editorStateEffect(payload.comment)\n      }\n    }\n\n    // change current state\n    this.stateCurt = state\n  }\n}\n","import type { CommentData, ContextApi, EditorApi } from '@/types'\nimport Component from '../lib/component'\nimport * as Ui from '../lib/ui'\nimport marked from '../lib/marked'\nimport { render, EditorUI } from './ui'\nimport EditorStateManager from './state'\n\nclass Editor extends Component implements EditorApi {\n  private ui: EditorUI\n  private state: EditorStateManager\n\n  getUI() { return this.ui }\n  getPlugs() { return this.ctx.get('editorPlugs') }\n  getState() { return this.state.get() }\n\n  constructor(ctx: ContextApi) {\n    super(ctx)\n\n    // init editor ui\n    this.ui = render()\n    this.$el = this.ui.$el\n\n    // init state manager\n    this.state = new EditorStateManager(this)\n  }\n\n  getHeaderInputEls() {\n    return { nick: this.ui.$nick, email: this.ui.$email, link: this.ui.$link }\n  }\n\n  getContentFinal() {\n    let content = this.getContentRaw()\n\n    // plug hook: final content transformer\n    const plugs = this.getPlugs()\n    if (plugs) content = plugs.getTransformedContent(content)\n\n    return content\n  }\n\n  getContentRaw() {\n    return this.ui.$textarea.value || ''\n  }\n\n  getContentMarked() {\n    return marked(this.getContentFinal())\n  }\n\n  setContent(val: string) {\n    this.ui.$textarea.value = val\n\n    // plug hook: content updated\n    this.getPlugs()?.getEvents().trigger('content-updated', val)\n  }\n\n  insertContent(val: string) {\n    if ((document as any).selection) {\n      this.ui.$textarea.focus();\n      (document as any).selection.createRange().text = val\n      this.ui.$textarea.focus()\n    } else if (this.ui.$textarea.selectionStart || this.ui.$textarea.selectionStart === 0) {\n      const sStart = this.ui.$textarea.selectionStart\n      const sEnd = this.ui.$textarea.selectionEnd\n      const sT = this.ui.$textarea.scrollTop\n      this.setContent(this.ui.$textarea.value.substring(0, sStart) + val + this.ui.$textarea.value.substring(sEnd, this.ui.$textarea.value.length))\n      this.ui.$textarea.focus()\n      this.ui.$textarea.selectionStart = sStart + val.length\n      this.ui.$textarea.selectionEnd = sStart + val.length\n      this.ui.$textarea.scrollTop = sT\n    } else {\n      this.ui.$textarea.focus()\n      this.ui.$textarea.value += val\n    }\n  }\n\n  focus() {\n    this.ui.$textarea.focus()\n  }\n\n  reset() {\n    this.setContent('')\n    this.resetState()\n  }\n\n  resetState() {\n    this.state.switch('normal')\n  }\n\n  setReply(comment: CommentData, $comment: HTMLElement) {\n    this.state.switch('reply', { comment, $comment })\n  }\n\n  setEditComment(comment: CommentData, $comment: HTMLElement) {\n    this.state.switch('edit', { comment, $comment })\n  }\n\n  showNotify(msg: string, type: any) {\n    Ui.showNotify(this.ui.$notifyWrap, msg, type)\n  }\n\n  showLoading() {\n    Ui.showLoading(this.ui.$el)\n  }\n\n  hideLoading() {\n    Ui.hideLoading(this.ui.$el)\n  }\n\n  submit() {\n    this.ctx.trigger('editor-submit')\n  }\n}\n\nexport default Editor\n","export default \"<div class=\\\"atk-sidebar-layer\\\">\\n  <div class=\\\"atk-sidebar-inner\\\">\\n    <div class=\\\"atk-sidebar-header\\\">\\n      <div class=\\\"atk-sidebar-close\\\"><i class=\\\"atk-icon atk-icon-close\\\"></i></div>\\n    </div>\\n    <div class=\\\"atk-sidebar-iframe-wrap\\\"></div>\\n  </div>\\n</div>\\n\"","import type { ContextApi, SidebarShowPayload } from '@/types'\nimport Component from '@/lib/component'\nimport * as Utils from '@/lib/utils'\nimport * as Ui from '@/lib/ui'\nimport SidebarHTML from './sidebar-layer.html?raw'\nimport type { Layer } from './layer'\n\nexport default class SidebarLayer extends Component {\n  public layer?: Layer\n  public $header: HTMLElement\n  public $closeBtn: HTMLElement\n  public $iframeWrap: HTMLElement\n  public $iframe?: HTMLIFrameElement\n\n  constructor(ctx: ContextApi) {\n    super(ctx)\n\n    this.$el = Utils.createElement(SidebarHTML)\n    this.$header = this.$el.querySelector('.atk-sidebar-header')!\n    this.$closeBtn = this.$header.querySelector('.atk-sidebar-close')!\n    this.$iframeWrap = this.$el.querySelector('.atk-sidebar-iframe-wrap')!\n\n    this.$closeBtn.onclick = () => {\n      this.hide()\n    }\n\n    // event\n    this.ctx.on('user-changed', () => { this.refreshOnShow = true })\n  }\n\n  /** Refresh iFrame on show */\n  private refreshOnShow = true\n\n  /** Animation timer */\n  private animTimer?: any = undefined\n\n  /** 显示 */\n  public async show(conf: SidebarShowPayload = {}) {\n    this.$el.style.transform = '' // 动画清除，防止二次打开失效\n\n    // init layer\n    this.initLayer()\n    this.layer!.show()\n\n    // init iframe\n    if (this.refreshOnShow) {\n      this.refreshOnShow = false\n      this.$iframeWrap.innerHTML = ''\n      this.$iframe = this.createIframe(conf.view)\n      this.$iframeWrap.append(this.$iframe)\n    } else {\n      // Sync Dark Mode (reload iframe if not match)\n      const $iframe = this.$iframe!\n      const iFrameSrc = $iframe.src\n      if (this.conf.darkMode !== iFrameSrc.includes('darkMode=1')) {\n        this.iframeLoad($iframe, (this.conf.darkMode)\n          ? iFrameSrc.concat('&darkMode=1')\n          : iFrameSrc.replace('&darkMode=1', ''))\n      }\n    }\n\n    // 管理员身份验证 (若身份失效，弹出验证窗口)\n    this.authCheck({\n      onSuccess: () => this.show(conf) // retry show after auth check\n    })\n\n    // 执行滑动显示动画\n    this.animTimer = setTimeout(() => {\n      this.animTimer = undefined\n      this.$el.style.transform = 'translate(0, 0)'\n\n      setTimeout(() => {\n        this.ctx.getData().updateNotifies([])\n      }, 0)\n\n      this.ctx.trigger('sidebar-show')\n    }, 100)\n  }\n\n  /** 隐藏 */\n  public hide() {\n    this.layer?.hide()\n  }\n\n  // --------------------------------------------------\n\n  private async authCheck(opts: { onSuccess: () => void }) {\n    const data = (await this.ctx.getApi().user.getUserStatus({\n      ...this.ctx.getApi().getUserFields()\n    })).data\n    if (data.is_admin && !data.is_login) {\n      this.refreshOnShow = true\n\n      // show checker layer\n      this.ctx.checkAdmin({\n        onSuccess: () => {\n          setTimeout(() => {\n            opts.onSuccess()\n          }, 500)\n        },\n        onCancel: () => {\n          this.hide()\n        }\n      })\n\n      // hide sidebar layer\n      this.hide()\n    }\n  }\n\n  private initLayer() {\n    if (this.layer) return\n\n    this.layer = this.ctx.get('layerManager').create('sidebar', this.$el)\n    this.layer.setOnAfterHide(() => {\n      // 防止评论框被吞\n      this.ctx.editorResetState()\n\n      // interrupt animation\n      this.animTimer && clearTimeout(this.animTimer)\n\n      // perform transform\n      this.$el.style.transform = ''\n\n      // trigger event\n      this.ctx.trigger('sidebar-hide')\n    })\n  }\n\n  private createIframe(view?: string) {\n    const $iframe = Utils.createElement<HTMLIFrameElement>('<iframe referrerpolicy=\"strict-origin-when-cross-origin\"></iframe>')\n\n    // 准备 Iframe 参数\n    const baseURL = (import.meta.env.DEV)  ? 'http://localhost:23367/'\n      : Utils.getURLBasedOnApi({\n        base: this.ctx.conf.server,\n        path: '/sidebar/',\n      })\n\n    const query: any = {\n      pageKey: this.conf.pageKey,\n      site: this.conf.site || '',\n      user: JSON.stringify(this.ctx.get('user').getData()),\n      time: +new Date()\n    }\n\n    if (view) query.view = view\n    if (this.conf.darkMode) query.darkMode = '1'\n\n    const urlParams = new URLSearchParams(query);\n    this.iframeLoad($iframe, `${baseURL}?${urlParams.toString()}`)\n\n    return $iframe\n  }\n\n  private iframeLoad($iframe: HTMLIFrameElement, src: string) {\n    $iframe.src = src\n\n    // 加载动画\n    Ui.showLoading(this.$iframeWrap)\n    $iframe.onload = () => {\n      Ui.hideLoading(this.$iframeWrap)\n    }\n  }\n}\n","export default \"<div class=\\\"atk-list\\\">\\n  <div class=\\\"atk-list-header\\\">\\n    <div class=\\\"atk-comment-count\\\">\\n      <div class=\\\"atk-text\\\"></div>\\n    </div>\\n    <div class=\\\"atk-right-action\\\">\\n      <span data-action=\\\"admin-close-comment\\\" class=\\\"atk-hide\\\" atk-only-admin-show></span>\\n      <span data-action=\\\"open-sidebar\\\" class=\\\"atk-hide atk-on\\\">\\n        <span class=\\\"atk-unread-badge\\\" style=\\\"display: none;\\\"></span>\\n        <div class=\\\"atk-text\\\"></div>\\n      </span>\\n    </div>\\n  </div>\\n  <div class=\\\"atk-list-body\\\">\\n    <div class=\\\"atk-list-comments-wrap\\\"></div>\\n  </div>\\n  <div class=\\\"atk-list-footer\\\">\\n    <div class=\\\"atk-copyright\\\"></div>\\n  </div>\\n</div>\\n\"","import type { CommentData } from '@/types'\n\nexport type CommentNode = {\n  id: number\n  comment: CommentData\n  children: CommentNode[]\n  parent?: CommentNode\n  level: number\n}\n\nexport type SortByType = 'DATE_DESC'|'DATE_ASC'|'SRC_INDEX'|'VOTE_UP_DESC'\n\n// 构建树状结构列表\nexport function makeNestCommentNodeList(srcData: CommentData[], sortBy: SortByType = 'DATE_DESC', nestMax = 2) {\n  const nodeList: CommentNode[] = []\n\n  const roots = srcData.filter((o) => o.rid === 0)\n  roots.forEach((root: CommentData) => {\n    const rootNode: CommentNode = {\n      id: root.id,\n      comment: root,\n      children: [],\n      level: 1,\n    }\n\n    rootNode.parent = rootNode\n    nodeList.push(rootNode)\n\n    ;(function loadChildren(parentNode: CommentNode) {\n      const children = srcData.filter((o) => o.rid === parentNode.id)\n      if (children.length === 0) return\n      if (parentNode.level >= nestMax) parentNode = parentNode.parent!\n      children.forEach((child: CommentData) => {\n        const childNode: CommentNode = {\n          id: child.id,\n          comment: child,\n          children: [],\n          parent: parentNode,\n          level: parentNode.level + 1,\n        }\n\n        parentNode.children.push(childNode)\n        loadChildren(childNode)\n      })\n    })(rootNode)\n  })\n\n  // 排序\n  const sortFunc = (a: CommentNode, b: CommentNode): number => {\n    let v = a.id - b.id\n    if (sortBy === 'DATE_ASC') v = +new Date(a.comment.date) - +new Date(b.comment.date)\n    else if (sortBy === 'DATE_DESC') v = +new Date(b.comment.date) - +new Date(a.comment.date)\n    else if (sortBy === 'SRC_INDEX') v = srcData.indexOf(a.comment) - srcData.indexOf(b.comment)\n    else if (sortBy === 'VOTE_UP_DESC') v = b.comment.vote_up - a.comment.vote_up\n    return v\n  }\n\n  (function sortLevels(nodes: CommentNode[]) {\n    nodes.forEach((node) => {\n      node.children = node.children.sort(sortFunc)\n      sortLevels(node.children)\n    })\n  })(nodeList)\n\n  return nodeList\n}\n","import type { CommentNode } from '@/comment'\nimport * as Ui from '@/lib/ui'\nimport * as ListNest from '@/list/nest'\nimport type { LayoutStrategyCreator } from '.'\n\nexport const createNestStrategy: LayoutStrategyCreator = (opts) => ({\n  import: (comments) => {\n    // 遍历 root 评论\n    const rootNodes = ListNest.makeNestCommentNodeList(comments, opts.nestSortBy, opts.nestMax)\n    rootNodes.forEach((rootNode: ListNest.CommentNode) => {\n      const rootC = opts.createCommentNode(rootNode.comment)\n\n      // 显示并播放渐入动画\n      opts.$commentsWrap?.appendChild(rootC.getEl())\n      rootC.getRender().playFadeAnim()\n\n      // 加载子评论\n      const loadChildren = (parentC: CommentNode, parentNode: ListNest.CommentNode) => {\n        parentNode.children.forEach((node: ListNest.CommentNode) => {\n          const childD = node.comment\n          const childC = opts.createCommentNode(childD, parentC.getData())\n\n          // 插入到父评论中\n          parentC.putChild(childC)\n\n          // 递归加载子评论\n          loadChildren(childC, node)\n        })\n      }\n      loadChildren(rootC, rootNode)\n\n      // 限高检测\n      rootC.getRender().checkHeightLimit()\n    })\n  },\n  insert: (comment, replyComment) => {\n    // 嵌套模式\n    const node = opts.createCommentNode(comment, replyComment)\n\n    if (comment.rid === 0) {\n      // root评论 新增\n      opts.$commentsWrap?.prepend(node.getEl())\n    } else {\n      // 子评论 新增\n      const parent = opts.findCommentNode(comment.rid)\n      if (parent) {\n        parent.putChild(node, (opts.nestSortBy === 'DATE_ASC' ? 'append' : 'prepend'))\n\n        // 若父评论存在 “子评论部分” 限高，取消限高\n        node.getParents().forEach((p) => {\n          p.getRender().heightLimitRemoveForChildren()\n        })\n      }\n    }\n\n    node.getRender().checkHeightLimit()\n\n    node.scrollIntoView() // 滚动到可以见\n    node.getRender().playFadeAnim() // 播放评论渐出动画\n  }\n})\n","import type { CommentData } from '@/types'\nimport * as Ui from '@/lib/ui'\nimport type { LayoutStrategyCreator, LayoutOptions } from '.'\n\nexport const createFlatStrategy: LayoutStrategyCreator = (opts) => ({\n  import: (comments) => {\n    comments.forEach((comment: CommentData) => {\n      const replyComment = (comment.rid === 0 ? undefined : comments.find(c => c.id === comment.rid))\n      insertComment(opts, 'append', comment, replyComment)\n    })\n  },\n  insert: (comment, replyComment) => {\n    const node = insertComment(opts, 'prepend', comment, replyComment)\n    node.scrollIntoView()\n  }\n})\n\n/** 导入评论 · 平铺模式 */\nfunction insertComment(opts: LayoutOptions, insertMode: 'append'|'prepend', comment: CommentData, replyComment?: CommentData | undefined) {\n  if (comment.is_collapsed) comment.is_allow_reply = false\n  const node = opts.createCommentNode(comment, replyComment)\n\n  // 可见评论添加到界面\n  // 注：不可见评论用于显示 “引用内容”\n  if (comment.visible) {\n    const $comment = node.getEl()\n    const $listCommentsWrap = opts.$commentsWrap\n    if (insertMode === 'append') $listCommentsWrap?.append($comment)\n    if (insertMode === 'prepend') $listCommentsWrap?.prepend($comment)\n    node.getRender().playFadeAnim()\n  }\n\n  // 平铺评论插入后 · 内容限高检测\n  // 插入列表的评论 (visible=true) 和关联的评论 (visible=false) 都需要检测\n  node.getRender().checkHeightLimit()\n\n  return node\n}\n","import type { CommentData } from '@/types'\nimport type { CommentNode } from '@/comment'\nimport * as ListNest from '../nest'\nimport { createNestStrategy } from './nest'\nimport { createFlatStrategy } from './flat'\n\nexport interface LayoutOptions {\n  /** The comments wrap of list */\n  $commentsWrap: HTMLElement\n  nestSortBy: ListNest.SortByType\n  nestMax: number\n  flatMode: boolean\n\n  createCommentNode(comment: CommentData, replyComment?: CommentData): CommentNode\n  findCommentNode(id: number): CommentNode|undefined\n}\n\nexport interface LayoutStrategy {\n  import(comments: CommentData[]): void\n  insert(comment: CommentData, replyComment?: CommentData): void\n}\n\nexport type LayoutStrategyCreator = (opts: LayoutOptions) => LayoutStrategy\n\nexport class ListLayout {\n  constructor(private options: LayoutOptions) {}\n\n  private getStrategy() {\n    return this.options.flatMode ? createFlatStrategy(this.options) : createNestStrategy(this.options)\n  }\n\n  import(comments: CommentData[]) {\n    this.getStrategy().import(comments)\n  }\n\n  insert(comment: CommentData, replyComment?: CommentData) {\n    this.getStrategy().insert(comment, replyComment)\n  }\n}\n","function Detect(userAgent?: string) {\n  const win = (window as any) || {}\n  const nav = navigator || {}\n\n  const u = String(userAgent || nav.userAgent)\n  const dest = {\n    os: '',\n    osVersion: '',\n    engine: '',\n    browser: '',\n    device: '',\n    language: '',\n    version: ''\n  }\n\n  // 内核\n  const engineMatch = {\n    Trident: u.includes('Trident') || u.includes('NET CLR'),\n    Presto: u.includes('Presto'),\n    WebKit: u.includes('AppleWebKit'),\n    Gecko: u.includes('Gecko/')\n  }\n\n  // 浏览器\n  const browserMatch = {\n    Safari: u.includes('Safari'),\n    Chrome: u.includes('Chrome') || u.includes('CriOS'),\n    IE: u.includes('MSIE') || u.includes('Trident'),\n    Edge: u.includes('Edge') || u.includes('Edg'),\n    Firefox: u.includes('Firefox') || u.includes('FxiOS'),\n    'Firefox Focus': u.includes('Focus'),\n    Chromium: u.includes('Chromium'),\n    Opera: u.includes('Opera') || u.includes('OPR'),\n    Vivaldi: u.includes('Vivaldi'),\n    Yandex: u.includes('YaBrowser'),\n    Kindle: u.includes('Kindle') || u.includes('Silk/'),\n    360: u.includes('360EE') || u.includes('360SE'),\n    UC: u.includes('UC') || u.includes(' UBrowser'),\n    QQBrowser: u.includes('QQBrowser'),\n    QQ: u.includes('QQ/'),\n    Baidu: u.includes('Baidu') || u.includes('BIDUBrowser'),\n    Maxthon: u.includes('Maxthon'),\n    Sogou: u.includes('MetaSr') || u.includes('Sogou'),\n    LBBROWSER: u.includes('LBBROWSER'),\n    '2345Explorer': u.includes('2345Explorer'),\n    TheWorld: u.includes('TheWorld'),\n    MIUI: u.includes('MiuiBrowser'),\n    Quark: u.includes('Quark'),\n    Qiyu: u.includes('Qiyu'),\n    Wechat: u.includes('MicroMessenger'),\n    Taobao: u.includes('AliApp(TB'),\n    Alipay: u.includes('AliApp(AP'),\n    Weibo: u.includes('Weibo'),\n    Douban: u.includes('com.douban.frodo'),\n    Suning: u.includes('SNEBUY-APP'),\n    iQiYi: u.includes('IqiyiApp'),\n  }\n\n  // 系统或平台\n  const osMatch = {\n    Windows: u.includes('Windows'),\n    Linux: u.includes('Linux') || u.includes('X11'),\n    'macOS': u.includes('Macintosh'),\n    Android: u.includes('Android') || u.includes('Adr'),\n    Ubuntu: u.includes('Ubuntu'),\n    FreeBSD: u.includes('FreeBSD'),\n    Debian: u.includes('Debian'),\n    'Windows Phone': u.includes('IEMobile') || u.includes('Windows Phone'),\n    BlackBerry: u.includes('BlackBerry') || u.includes('RIM'),\n    MeeGo: u.includes('MeeGo'),\n    Symbian: u.includes('Symbian'),\n    iOS: u.includes('like Mac OS X'),\n    'Chrome OS': u.includes('CrOS'),\n    WebOS: u.includes('hpwOS'),\n  }\n\n  // 设备\n  const deviceMatch = {\n    Mobile: u.includes('Mobi') || u.includes('iPh') || u.includes('480'),\n    Tablet: u.includes('Tablet') || u.includes('Pad') || u.includes('Nexus 7')\n  }\n\n  // 修正\n  if (deviceMatch.Mobile) {\n    deviceMatch.Mobile = !(u.includes('iPad'))\n  } else if (browserMatch.Chrome && u.includes('Edg')) {\n    // Chrome 内核的 Edge\n    browserMatch.Chrome = false\n    browserMatch.Edge = true\n  } else if (win.showModalDialog && win.chrome) {\n    browserMatch.Chrome = false\n    browserMatch['360'] = true\n  }\n\n  // 默认设备\n  dest.device = 'PC'\n\n  // 语言\n  dest.language = (() => {\n    const g = ((nav as any).browserLanguage || nav.language)\n    const arr = g.split('-')\n    if (arr[1]) arr[1] = arr[1].toUpperCase()\n    return arr.join('_')\n  })()\n\n  // 应用判断数据\n  const hash = {\n    engine: engineMatch,\n    browser: browserMatch,\n    os: osMatch,\n    device: deviceMatch,\n  }\n  Object.entries(hash).forEach(([type, match]) => {\n    Object.entries(match).forEach(([name, result]) => {\n      if (result === true) dest[type] = name\n    })\n  })\n\n  // 系统版本信息\n  const osVersion = {\n    Windows: () => {\n      const v = u.replace(/^.*Windows NT ([\\d.]+);.*$/, '$1')\n      const wvHash = {\n        '6.4': '10',\n        '6.3': '8.1',\n        '6.2': '8',\n        '6.1': '7',\n        '6.0': 'Vista',\n        '5.2': 'XP',\n        '5.1': 'XP',\n        '5.0': '2000',\n        '10.0': '10',\n        '11.0': '11' // 自定的，不是微软官方的判断方法\n      }\n      return wvHash[v] || v\n    },\n    Android: () => u.replace(/^.*Android ([\\d.]+);.*$/, '$1'),\n    iOS: () => u.replace(/^.*OS ([\\d_]+) like.*$/, '$1').replace(/_/g, '.'),\n    Debian: () => u.replace(/^.*Debian\\/([\\d.]+).*$/, '$1'),\n    'Windows Phone': () => u.replace(/^.*Windows Phone( OS)? ([\\d.]+);.*$/, '$2'),\n    'macOS': () => u.replace(/^.*Mac OS X ([\\d_]+).*$/, '$1').replace(/_/g, '.'),\n    WebOS: () => u.replace(/^.*hpwOS\\/([\\d.]+);.*$/, '$1')\n  }\n\n  dest.osVersion = ''\n  if (osVersion[dest.os]) {\n    dest.osVersion = osVersion[dest.os]()\n    if (dest.osVersion === u) {\n      dest.osVersion = ''\n    }\n  }\n\n  // 浏览器版本信息\n  const version = {\n    Safari: () => u.replace(/^.*Version\\/([\\d.]+).*$/, '$1'),\n    Chrome: () => u.replace(/^.*Chrome\\/([\\d.]+).*$/, '$1').replace(/^.*CriOS\\/([\\d.]+).*$/, '$1'),\n    IE: () => u.replace(/^.*MSIE ([\\d.]+).*$/, '$1').replace(/^.*rv:([\\d.]+).*$/, '$1'),\n    Edge: () => u.replace(/^.*(Edge|Edg|Edg[A-Z]{1})\\/([\\d.]+).*$/, '$2'),\n    Firefox: () => u.replace(/^.*Firefox\\/([\\d.]+).*$/, '$1').replace(/^.*FxiOS\\/([\\d.]+).*$/, '$1'),\n    'Firefox Focus': () => u.replace(/^.*Focus\\/([\\d.]+).*$/, '$1'),\n    Chromium: () => u.replace(/^.*Chromium\\/([\\d.]+).*$/, '$1'),\n    Opera: () => u.replace(/^.*Opera\\/([\\d.]+).*$/, '$1').replace(/^.*OPR\\/([\\d.]+).*$/, '$1'),\n    Vivaldi: () => u.replace(/^.*Vivaldi\\/([\\d.]+).*$/, '$1'),\n    Yandex: () => u.replace(/^.*YaBrowser\\/([\\d.]+).*$/, '$1'),\n    Kindle: () => u.replace(/^.*Version\\/([\\d.]+).*$/, '$1'),\n    Maxthon: () => u.replace(/^.*Maxthon\\/([\\d.]+).*$/, '$1'),\n    QQBrowser: () => u.replace(/^.*QQBrowser\\/([\\d.]+).*$/, '$1'),\n    QQ: () => u.replace(/^.*QQ\\/([\\d.]+).*$/, '$1'),\n    Baidu: () => u.replace(/^.*BIDUBrowser[\\s/]([\\d.]+).*$/, '$1'),\n    UC: () => u.replace(/^.*UC?Browser\\/([\\d.]+).*$/, '$1'),\n    Sogou: () => u.replace(/^.*SE ([\\d.X]+).*$/, '$1').replace(/^.*SogouMobileBrowser\\/([\\d.]+).*$/, '$1'),\n    '2345Explorer': () => u.replace(/^.*2345Explorer\\/([\\d.]+).*$/, '$1'),\n    TheWorld: () => u.replace(/^.*TheWorld ([\\d.]+).*$/, '$1'),\n    MIUI: () => u.replace(/^.*MiuiBrowser\\/([\\d.]+).*$/, '$1'),\n    Quark: () => u.replace(/^.*Quark\\/([\\d.]+).*$/, '$1'),\n    Qiyu: () => u.replace(/^.*Qiyu\\/([\\d.]+).*$/, '$1'),\n    Wechat: () => u.replace(/^.*MicroMessenger\\/([\\d.]+).*$/, '$1'),\n    Taobao: () => u.replace(/^.*AliApp\\(TB\\/([\\d.]+).*$/, '$1'),\n    Alipay: () => u.replace(/^.*AliApp\\(AP\\/([\\d.]+).*$/, '$1'),\n    Weibo: () => u.replace(/^.*weibo__([\\d.]+).*$/, '$1'),\n    Douban: () => u.replace(/^.*com.douban.frodo\\/([\\d.]+).*$/, '$1'),\n    Suning: () => u.replace(/^.*SNEBUY-APP([\\d.]+).*$/, '$1'),\n    iQiYi: () => u.replace(/^.*IqiyiVersion\\/([\\d.]+).*$/, '$1'),\n  }\n\n  dest.version = ''\n  if (version[dest.browser]) {\n    dest.version = version[dest.browser]()\n    if (dest.version === u) {\n      dest.version = ''\n    }\n  }\n\n  // 简化版本号\n  /* if (_this.osVersion.indexOf('.')) {\n    _this.osVersion = _this.osVersion.substring(0, _this.osVersion.indexOf('.'))\n  } */\n  if (dest.version.indexOf('.')) {\n    dest.version = dest.version.substring(0, dest.version.indexOf('.'))\n  }\n\n  // 修正\n  if (dest.os === 'iOS' && u.includes('iPad')) {\n    dest.os = 'iPadOS'\n  } else if (dest.browser === 'Edge' && !u.includes('Edg')) {\n    dest.engine = 'EdgeHTML'\n  } else if (dest.browser === 'MIUI') {\n    dest.os = 'Android'\n  } else if (dest.browser === 'Chrome' && Number(dest.version) > 27) {\n    dest.engine = 'Blink'\n  } else if (dest.browser === 'Opera' && Number(dest.version) > 12) {\n    dest.engine = 'Blink'\n  } else if (dest.browser === 'Yandex') {\n    dest.engine = 'Blink'\n  } else if (dest.browser === undefined) {\n    dest.browser = 'Unknow App'\n  }\n\n  return dest\n}\n\nexport default Detect\n","import * as Utils from '../lib/utils'\nimport $t from '../i18n'\n\nexport interface IHeightLimitConf {\n  /** Post expand btn click */\n  postExpandBtnClick?: (e: MouseEvent) => void\n  /** Allow Scroll */\n  scrollable?: boolean\n}\n\nexport interface IHeightLimitRule {\n  /** Target element need to check */\n  el: HTMLElement|null|undefined\n\n  /** Max height (unit: px) */\n  max: number\n\n  /** Whether or not the element contains `<img />` */\n  imgContains?: boolean\n}\n\nexport type THeightLimitRuleSet = IHeightLimitRule[]\n\n/** Check all elements below the max height limit */\nexport function check(conf: IHeightLimitConf, rules: THeightLimitRuleSet) {\n  rules.forEach(({\n    el, max: maxHeight, imgContains\n  }) => {\n    const _apply = () => {\n      if (!el) return\n      if (!conf.scrollable)\n        applyHeightLimit({ el, maxHeight, postBtnClick: conf.postExpandBtnClick })\n      else\n        applyScrollableHeightLimit({ el, maxHeight })\n    }\n\n    // checking\n    const _check = () => {\n      if (el && Utils.getHeight(el) > maxHeight) _apply() // 是否超过高度\n    }\n    _check() // check now\n    if (imgContains && el) // check again if img contains\n      Utils.onImagesLoaded(el, () => _check())\n  })\n}\n\n/** Height limit CSS class name */\nconst HEIGHT_LIMIT_CSS = 'atk-height-limit'\n\n/** Apply height limit on an element and add expand btn */\nexport function applyHeightLimit(obj: {\n  el: HTMLElement,\n  maxHeight: number,\n  postBtnClick?: (e: MouseEvent) => void\n}) {\n  if (!obj.el) return\n  if (!obj.maxHeight) return\n  if (obj.el.classList.contains(HEIGHT_LIMIT_CSS)) return\n\n  obj.el.classList.add(HEIGHT_LIMIT_CSS)\n  obj.el.style.height = `${obj.maxHeight}px`\n  obj.el.style.overflow = 'hidden'\n\n  /* Expand button */\n  const $expandBtn = Utils.createElement(`<div class=\"atk-height-limit-btn\">${$t('readMore')}</span>`)\n  $expandBtn.onclick = (e) => {\n    e.stopPropagation()\n    disposeHeightLimit(obj.el)\n\n    if (obj.postBtnClick) obj.postBtnClick(e)\n  }\n  obj.el.append($expandBtn)\n}\n\n/** Dispose height limit on an element and remove expand btn */\nexport function disposeHeightLimit($el: HTMLElement) {\n  if (!$el) return\n  if (!$el.classList.contains(HEIGHT_LIMIT_CSS)) return\n\n  $el.classList.remove(HEIGHT_LIMIT_CSS)\n  Array.from($el.children).forEach((e) => {\n    if (e.classList.contains('atk-height-limit-btn')) e.remove()\n  })\n  $el.style.height = ''\n  $el.style.overflow = ''\n}\n\n/** Height limit scrollable CSS class name */\nconst HEIGHT_LIMIT_SCROLL_CSS = 'atk-height-limit-scroll'\n\n/** Apply scrollable height limit */\nexport function applyScrollableHeightLimit(obj: {\n  el: HTMLElement,\n  maxHeight: number\n}) {\n  if (!obj.el) return\n  if (obj.el.classList.contains(HEIGHT_LIMIT_SCROLL_CSS)) return\n  obj.el.classList.add(HEIGHT_LIMIT_SCROLL_CSS)\n  obj.el.style.height = `${obj.maxHeight}px`\n}\n","export default \"<div class=\\\"atk-comment-wrap\\\">\\n  <div class=\\\"atk-comment\\\">\\n    <div class=\\\"atk-avatar\\\"></div>\\n    <div class=\\\"atk-main\\\">\\n      <div class=\\\"atk-header\\\">\\n        <span class=\\\"atk-item atk-nick\\\"></span>\\n        <span class=\\\"atk-badge-wrap\\\"></span>\\n        <span class=\\\"atk-item atk-date\\\"></span>\\n      </div>\\n      <div class=\\\"atk-body\\\">\\n        <div class=\\\"atk-content\\\"></div>\\n      </div>\\n      <div class=\\\"atk-footer\\\">\\n        <div class=\\\"atk-actions\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import * as Utils from '../../lib/utils'\nimport type Render from '../render'\n\n/**\n * 评论头像界面\n */\nexport default function renderAvatar(r: Render) {\n  const $avatar = r.$el.querySelector<HTMLElement>('.atk-avatar')!\n  const $avatarImg = Utils.createElement<HTMLImageElement>('<img />')\n\n  const avatarURLBuilder = r.opts.avatarURLBuilder\n  $avatarImg.src = avatarURLBuilder ? avatarURLBuilder(r.data) : r.comment.getGravatarURL()\n\n  if (r.data.link) {\n    const $avatarA = Utils.createElement<HTMLLinkElement>('<a target=\"_blank\" rel=\"noreferrer noopener nofollow\"></a>')\n    $avatarA.href = Utils.isValidURL(r.data.link) ? r.data.link : `https://${r.data.link}`\n    $avatarA.append($avatarImg)\n    $avatar.append($avatarA)\n  } else {\n    $avatar.append($avatarImg)\n  }\n}\n","import $t from '@/i18n'\nimport * as Utils from '../../lib/utils'\nimport type Render from '../render'\n\n/**\n * 评论头部界面\n */\nexport default function renderHeader(r: Render) {\n  Object.entries({\n    renderNick, renderVerifyBadge, renderDate, renderUABadge\n  }).forEach(([name, render]) => {\n    render(r)\n  })\n}\n\nfunction renderNick(r: Render) {\n  r.$headerNick = r.$el.querySelector<HTMLElement>('.atk-nick')!\n\n  if (r.data.link) {\n    const $nickA = Utils.createElement<HTMLLinkElement>('<a target=\"_blank\" rel=\"noreferrer noopener nofollow\"></a>')\n    $nickA.innerText = r.data.nick\n    $nickA.href = Utils.isValidURL(r.data.link) ? r.data.link : `https://${r.data.link}`\n    r.$headerNick.append($nickA)\n  } else {\n    r.$headerNick.innerText = r.data.nick\n  }\n}\n\nfunction renderVerifyBadge(ctx: Render) {\n  ctx.$headerBadgeWrap = ctx.$el.querySelector<HTMLElement>('.atk-badge-wrap')!\n  ctx.$headerBadgeWrap.innerHTML = ''\n\n  const badgeText = ctx.data.badge_name\n  const badgeColor = ctx.data.badge_color\n  if (badgeText) {\n    const $badge = Utils.createElement(`<span class=\"atk-badge\"></span>`)\n    $badge.innerText = badgeText.replace('管理员', $t('admin')) // i18n patch\n    $badge.style.backgroundColor = badgeColor || ''\n    ctx.$headerBadgeWrap.append($badge)\n  }\n\n  if (ctx.data.is_pinned) {\n    const $pinnedBadge = Utils.createElement(`<span class=\"atk-pinned-badge\">${$t('pin')}</span>`) // 置顶徽章\n    ctx.$headerBadgeWrap.append($pinnedBadge)\n  }\n}\n\nfunction renderDate(ctx: Render) {\n  const $date = ctx.$el.querySelector<HTMLElement>('.atk-date')!\n  $date.innerText = ctx.comment.getDateFormatted()\n  $date.setAttribute('data-atk-comment-date', String(+new Date(ctx.data.date)))\n}\n\nfunction renderUABadge(ctx: Render) {\n  if (!ctx.opts.uaBadge && !ctx.data.ip_region) return\n\n  let $uaWrap = ctx.$header.querySelector('atk-ua-wrap')\n  if (!$uaWrap) {\n    $uaWrap = Utils.createElement(`<span class=\"atk-ua-wrap\"></span>`)\n    ctx.$header.append($uaWrap)\n  }\n\n  $uaWrap.innerHTML = ''\n\n  if (ctx.data.ip_region) {\n    const $regionBadge = Utils.createElement(`<span class=\"atk-region-badge\"></span>`)\n    $regionBadge.innerText = ctx.data.ip_region\n    $uaWrap.append($regionBadge)\n  }\n\n  if (ctx.opts.uaBadge) {\n    const { browser, os } = ctx.comment.getUserUA()\n    if (String(browser).trim()) {\n      const $uaBrowser = Utils.createElement(`<span class=\"atk-ua ua-browser\"></span>`)\n      $uaBrowser.innerText = browser\n      $uaWrap.append($uaBrowser)\n    }\n\n    if (String(os).trim()) {\n      const $usOS = Utils.createElement(`<span class=\"atk-ua ua-os\"></span>`)\n      $usOS.innerText = os\n      $uaWrap.append($usOS)\n    }\n  }\n}\n","import $t from '@/i18n'\nimport * as Utils from '../../lib/utils'\nimport * as Ui from '../../lib/ui'\nimport type Render from '../render'\n\n/**\n * 评论内容界面\n */\nexport default function renderContent(r: Render) {\n  if (!r.data.is_collapsed) {\n    r.$content.innerHTML = r.comment.getContentMarked()\n    r.$content.classList.remove('atk-hide', 'atk-collapsed')\n    return\n  }\n\n  // 内容 & 折叠\n  r.$content.classList.add('atk-hide', 'atk-type-collapsed')\n  const collapsedInfoEl = Utils.createElement(`\n    <div class=\"atk-collapsed\">\n      <span class=\"atk-text\">${$t('collapsedMsg')}</span>\n      <span class=\"atk-show-btn\">${$t('expand')}</span>\n    </div>`)\n  r.$body.insertAdjacentElement('beforeend', collapsedInfoEl)\n\n  const contentShowBtn = collapsedInfoEl.querySelector<HTMLElement>('.atk-show-btn')!\n  contentShowBtn.addEventListener('click', (e) => {\n    e.stopPropagation() // 防止穿透\n\n    if (r.$content.classList.contains('atk-hide')) {\n      r.$content.innerHTML = r.comment.getContentMarked()\n      r.$content.classList.remove('atk-hide')\n      Ui.playFadeInAnim(r.$content)\n      contentShowBtn.innerText = $t('collapse')\n    } else {\n      r.$content.innerHTML = ''\n      r.$content.classList.add('atk-hide')\n      contentShowBtn.innerText = $t('expand')\n    }\n  })\n}\n","import * as Utils from '../../lib/utils'\nimport type Render from '../render'\n\n/**\n * 层级嵌套模式显示 AT 界面\n */\nexport default function renderReplyAt(r: Render) {\n  if (r.opts.flatMode || r.data.rid === 0) return // not 平铺模式 或 根评论\n  if (!r.opts.replyTo) return\n\n  r.$replyAt = Utils.createElement(`<span class=\"atk-item atk-reply-at\"><span class=\"atk-arrow\"></span><span class=\"atk-nick\"></span></span>`)\n  r.$replyAt.querySelector<HTMLElement>('.atk-nick')!.innerText = `${r.opts.replyTo.nick}`\n  r.$replyAt.onclick = () => { r.comment.getActions().goToReplyComment() }\n\n  r.$headerBadgeWrap.insertAdjacentElement('afterend', r.$replyAt)\n}\n","import * as Utils from '@/lib/utils'\nimport marked from '@/lib/marked'\nimport $t from '@/i18n'\nimport type Render from '../render'\n\n/**\n * 关联评论显示 (被回复的评论)\n */\nexport default function renderReplyTo(r: Render) {\n  if (!r.opts.flatMode) return // 仅平铺模式显示\n  if (!r.opts.replyTo) return\n\n  r.$replyTo = Utils.createElement(`\n    <div class=\"atk-reply-to\">\n      <div class=\"atk-meta\">${$t('reply')} <span class=\"atk-nick\"></span>:</div>\n      <div class=\"atk-content\"></div>\n    </div>`)\n\n  // Comment author name\n  const $nick = r.$replyTo.querySelector<HTMLElement>('.atk-nick')!\n  $nick.innerText = `@${r.opts.replyTo.nick}`\n  $nick.onclick = () => { r.comment.getActions().goToReplyComment() }\n\n  // Comment content\n  let replyContent = marked(r.opts.replyTo.content)\n  if (r.opts.replyTo.is_collapsed) replyContent = `[${$t('collapsed')}]`\n  r.$replyTo.querySelector<HTMLElement>('.atk-content')!.innerHTML = replyContent\n\n  // Mount the replyTo element\n  r.$body.prepend(r.$replyTo)\n}\n","import $t from '@/i18n'\nimport * as Utils from '../../lib/utils'\nimport type Render from '../render'\n\n/**\n * 待审核状态界面\n */\nexport default function renderPending(r: Render) {\n  if (!r.data.is_pending) return\n\n  const pendingEl = Utils.createElement(`<div class=\"atk-pending\">${$t('pendingMsg')}</div>`)\n  r.$body.prepend(pendingEl)\n}\n","import $t from '@/i18n'\nimport * as Utils from '../lib/utils'\n\ninterface ActionBtnOptions {\n  /** 按钮文字 (动态/静态) */\n  text: (() => string) | string\n\n  /** 仅管理员可用 */\n  adminOnly?: boolean\n\n  /** 确认操作 */\n  confirm?: boolean\n\n  /** 确认时提示文字 */\n  confirmText?: string\n}\n\n/**\n * 通用操作按钮\n */\nexport default class ActionBtn {\n  private opts: ActionBtnOptions\n  public $el: HTMLElement\n\n  public isLoading = false // 正在加载\n\n  public msgRecTimer?: number // 消息显示复原定时器\n  public msgRecTimerFunc?: Function // 消息显示复原操作\n  public get isMessaging() { return !!this.msgRecTimer } // 消息正在显示\n\n  public isConfirming = false // 正在确认\n  public confirmRecTimer?: number // 确认消息复原定时器\n\n  /** 构造函数 */\n  constructor(opts: ActionBtnOptions|string|(() => string)) {\n    this.$el = Utils.createElement(`<span class=\"atk-common-action-btn\"></span>`)\n\n    this.opts = (typeof opts !== 'object') ? ({ text: opts }) : opts\n    this.$el.innerText = this.getText()\n\n    // 仅管理员可操作\n    if (this.opts.adminOnly) this.$el.setAttribute('atk-only-admin-show', '')\n  }\n\n  /** 将按钮装载到指定元素 */\n  public appendTo(dom: HTMLElement) {\n    dom.append(this.$el)\n    return this\n  }\n\n  /** 获取按钮文字（动态/静态） */\n  private getText() {\n    return (typeof this.opts.text === 'string') ? this.opts.text : this.opts.text()\n  }\n\n  /** 设置点击事件 */\n  public setClick(func: Function) {\n    this.$el.onclick = (e) => {\n      e.stopPropagation() // 防止穿透\n\n      // 按钮处于加载状态，禁止点击\n      if (this.isLoading) {\n        return\n      }\n\n      // 操作确认\n      if (this.opts.confirm && !this.isMessaging) {\n        const confirmRestore = () => {\n          this.isConfirming = false\n          this.$el.classList.remove('atk-btn-confirm')\n          this.$el.innerText = this.getText()\n        }\n\n        if (!this.isConfirming) {\n          this.isConfirming = true\n          this.$el.classList.add('atk-btn-confirm')\n          this.$el.innerText = this.opts.confirmText || $t('actionConfirm')\n          this.confirmRecTimer = window.setTimeout(() => confirmRestore(), 5000)\n          return\n        }\n\n        if (this.confirmRecTimer) window.clearTimeout(this.confirmRecTimer)\n        confirmRestore()\n      }\n\n      // 立刻释放掉原有的定时器（当显示消息后，用户立刻点击时）\n      if (this.msgRecTimer) {\n        this.fireMsgRecTimer()\n        this.clearMsgRecTimer()\n        return\n      }\n\n      // 触发设定的点击事件\n      func()\n    }\n  }\n\n  /** 文字刷新（动态/静态） */\n  public updateText(text?: (() => string) | string) {\n    if (text) this.opts.text = text\n    this.setLoading(false)\n    this.$el.innerText = this.getText()\n  }\n\n  /** 设置加载状态 */\n  public setLoading(value: boolean, loadingText?: string) {\n    if (this.isLoading === value) return\n    this.isLoading = value\n    if (value) {\n      this.$el.classList.add('atk-btn-loading')\n      this.$el.innerText = loadingText || `${$t('loading')}...`\n    } else {\n      this.$el.classList.remove('atk-btn-loading')\n      this.$el.innerText = this.getText()\n    }\n  }\n\n  /** 错误消息 */\n  public setError(text: string) {\n    this.setMsg(text, 'atk-btn-error')\n  }\n\n  /** 警告消息 */\n  public setWarn(text: string) {\n    this.setMsg(text, 'atk-btn-warn')\n  }\n\n  /** 成功消息 */\n  public setSuccess(text: string) {\n    this.setMsg(text, 'atk-btn-success')\n  }\n\n  /** 设置消息 */\n  public setMsg(text: string, className?: string, duringTime?: number, after?: Function) {\n    this.setLoading(false)\n    if (className) this.$el.classList.add(className)\n    this.$el.innerText = text\n\n    // 设定复原 timer\n    this.setMsgRecTimer(() => {\n      this.$el.innerText = this.getText()\n      if (className) this.$el.classList.remove(className)\n      if (after) after()\n    }, duringTime || 2500) // 消息默认显示持续 2500s\n  }\n\n  /** 设置消息复原操作定时器 */\n  private setMsgRecTimer(func: Function, duringTime: number) {\n    this.fireMsgRecTimer()\n    this.clearMsgRecTimer()\n\n    this.msgRecTimerFunc = func\n    this.msgRecTimer = window.setTimeout(() => {\n      func()\n      this.clearMsgRecTimer()\n    }, duringTime)\n  }\n\n  /** 立刻触发器复原定时器 */\n  private fireMsgRecTimer() {\n    if (this.msgRecTimerFunc) this.msgRecTimerFunc()\n  }\n\n  /** 仅清除 timer */\n  private clearMsgRecTimer() {\n    if (this.msgRecTimer) window.clearTimeout(this.msgRecTimer)\n    this.msgRecTimer = undefined\n    this.msgRecTimerFunc = undefined\n  }\n}\n","import $t from '@/i18n'\nimport * as Utils from '../../lib/utils'\nimport ActionBtn from '../../components/action-btn'\nimport type Render from '../render'\n\n/**\n * 评论操作按钮界面\n */\nexport default function renderActions(r: Render) {\n  Object.entries({\n    renderVote, renderReply,\n    // 管理员操作\n    renderCollapse, renderModerator, renderPin, renderEdit, renderDel\n  }).forEach(([name, render]) => {\n    render(r)\n  })\n}\n\n\n// 操作按钮 - 投票\nfunction renderVote(r: Render) {\n  if (!r.opts.vote) return // 关闭投票功能\n\n  // 赞同按钮\n  r.voteBtnUp = new ActionBtn(() => `${$t('voteUp')} (${r.data.vote_up || 0})`).appendTo(r.$actions)\n  r.voteBtnUp.setClick(() => {\n    r.comment.getActions().vote('up')\n  })\n\n  // 反对按钮\n  if (r.opts.voteDown) {\n    r.voteBtnDown = new ActionBtn(() => `${$t('voteDown')} (${r.data.vote_down || 0})`).appendTo(r.$actions)\n    r.voteBtnDown.setClick(() => {\n      r.comment.getActions().vote('down')\n    })\n  }\n}\n\n// 操作按钮 - 回复\nfunction renderReply(r: Render) {\n  if (!r.data.is_allow_reply) return // 不允许回复\n\n  const replyBtn = Utils.createElement(`<span>${$t('reply')}</span>`)\n  r.$actions.append(replyBtn)\n  replyBtn.addEventListener('click', (e) => {\n    e.stopPropagation() // 防止穿透\n    r.opts.replyComment(r.data, r.$el)\n  })\n}\n\n// 操作按钮 - 折叠\nfunction renderCollapse(r: Render) {\n  const collapseBtn = new ActionBtn({\n    text: () => (r.data.is_collapsed ? $t('expand') : $t('collapse')),\n    adminOnly: true\n  })\n  collapseBtn.appendTo(r.$actions)\n  collapseBtn.setClick(() => {\n    r.comment.getActions().adminEdit('collapsed', collapseBtn)\n  })\n}\n\n// 操作按钮 - 审核\nfunction renderModerator(r: Render) {\n  const pendingBtn = new ActionBtn({\n    text: () => (r.data.is_pending ? $t('pending') : $t('approved')),\n    adminOnly: true\n  })\n  pendingBtn.appendTo(r.$actions)\n  pendingBtn.setClick(() => {\n    r.comment.getActions().adminEdit('pending', pendingBtn)\n  })\n}\n\n// 操作按钮 - 置顶\nfunction renderPin(r: Render) {\n  const pinnedBtn = new ActionBtn({\n    text: () => (r.data.is_pinned ? $t('unpin') : $t('pin')),\n    adminOnly: true\n  })\n  pinnedBtn.appendTo(r.$actions)\n  pinnedBtn.setClick(() => {\n    r.comment.getActions().adminEdit('pinned', pinnedBtn)\n  })\n}\n\n// 操作按钮 - 编辑\nfunction renderEdit(r: Render) {\n  const editBtn = new ActionBtn({\n    text: $t('edit'),\n    adminOnly: true\n  })\n  editBtn.appendTo(r.$actions)\n  editBtn.setClick(() => {\n    r.opts.editComment(r.data, r.$el)\n  })\n}\n\n// 操作按钮 - 删除\nfunction renderDel(r: Render) {\n  const delBtn = new ActionBtn({\n    text: $t('delete'),\n    confirm: true,\n    confirmText: $t('deleteConfirm'),\n    adminOnly: true,\n  })\n  delBtn.appendTo(r.$actions)\n  delBtn.setClick(() => {\n    r.comment.getActions().adminDelete(delBtn)\n  })\n}\n","import type Render from '../render'\nimport Avatar from './avatar'\nimport Header from './header'\nimport Content from './content'\nimport ReplyAt from './reply-at'\nimport ReplyTo from './reply-to'\nimport Pending from './pending'\nimport Actions from './actions'\n\nconst Renders = {\n  Avatar, Header, Content, ReplyAt,\n  ReplyTo, Pending, Actions\n}\n\nexport default function loadRenders(r: Render) {\n  Object.entries(Renders).forEach(([ name, render ]) => {\n    render(r)\n  })\n}\n","import type { CommentNode } from '.'\nimport ActionBtn from '../components/action-btn'\nimport * as Utils from '../lib/utils'\nimport * as Ui from '../lib/ui'\n\nimport * as HeightLimit from './height-limit'\nimport CommentHTML from './comment.html?raw'\nimport loadRenders from './renders'\n\nexport default class Render {\n  public comment: CommentNode\n\n  public get data() { return this.comment.getData() }\n  public get opts() { return this.comment.getOpts() }\n\n  public $el!: HTMLElement\n  public $main!: HTMLElement\n  public $header!: HTMLElement\n  public $headerNick!: HTMLElement\n  public $headerBadgeWrap!: HTMLElement\n  public $body!: HTMLElement\n  public $content!: HTMLElement\n  public $childrenWrap!: HTMLElement|null\n  public $actions!: HTMLElement\n  public voteBtnUp?: ActionBtn\n  public voteBtnDown?: ActionBtn\n\n  public $replyTo?: HTMLElement // 回复评论内容 (平铺下显示)\n  public $replyAt?: HTMLElement // 回复 AT（层级嵌套下显示）\n\n  public constructor(comment: CommentNode) {\n    this.comment = comment\n  }\n\n  /**\n   * Render the comment ui\n   *\n   * If comment data is updated, call this method to re-render the comment ui.\n   * The method will be called multiple times, so it should be idempotent.\n   *\n   * Renders may add event listeners to the comment ui, so it should be called only once or override the original.\n   * Please be aware of the memory leak caused by the event listener.\n   */\n  public render() {\n    // init ui elements\n    this.$el = Utils.createElement(CommentHTML)\n\n    this.$main = this.$el.querySelector('.atk-main')!\n    this.$header = this.$el.querySelector('.atk-header')!\n    this.$body = this.$el.querySelector('.atk-body')!\n    this.$content = this.$body.querySelector('.atk-content')!\n    this.$actions = this.$el.querySelector('.atk-actions')!\n\n    this.$el.setAttribute('id', `atk-comment-${this.data.id}`)\n\n    // call all renders\n    loadRenders(this)\n\n    // append children wrap if exists\n    if (this.$childrenWrap) {\n      this.$main.append(this.$childrenWrap)\n    }\n\n    return this.$el\n  }\n\n  /** 内容限高检测 */\n  public checkHeightLimit() {\n    const conf = this.opts.heightLimit\n    if (!conf || !conf.content || !conf.children) return // 关闭限高\n\n    const contentMaxH = conf.content\n    const childrenMaxH = conf.children\n\n    HeightLimit.check({\n      postExpandBtnClick: () => {\n        // 子评论数仅有 1，直接取消限高\n        const children = this.comment.getChildren()\n        if (children.length === 1) HeightLimit.disposeHeightLimit(children[0].getRender().$content)\n      },\n      scrollable: conf.scrollable\n    }, [\n      // 评论内容限高\n      { el: this.$content, max: contentMaxH, imgContains: true },\n      { el: this.$replyTo, max: contentMaxH, imgContains: true },\n      // 子评论区域限高（仅嵌套模式）\n      { el: this.$childrenWrap, max: childrenMaxH, imgContains: false }\n    ])\n  }\n\n  /** 子评论区域移除限高 */\n  public heightLimitRemoveForChildren() {\n    if (!this.$childrenWrap) return\n    HeightLimit.disposeHeightLimit(this.$childrenWrap)\n  }\n\n  /** 渐出动画 */\n  playFadeAnim() {\n    Ui.playFadeInAnim(this.comment.getRender().$el)\n  }\n\n  /** 渐出动画 · 评论内容区域 */\n  playFadeAnimForBody() {\n    Ui.playFadeInAnim(this.comment.getRender().$body)\n  }\n\n  /** Perform the flash animation */\n  playFlashAnim() {\n    // Make sure the class is removed\n    this.$el.classList.remove('atk-flash-once')\n    window.setTimeout(() => {\n      // Add the class to perform the animation\n      this.$el.classList.add('atk-flash-once')\n    }, 150)\n  }\n\n  /** 获取子评论 Wrap */\n  public getChildrenWrap() {\n    if (!this.$childrenWrap) {\n      // if not exists, create a new one\n      this.$childrenWrap = Utils.createElement('<div class=\"atk-comment-children\"></div>')\n      this.$main.append(this.$childrenWrap)\n    }\n    return this.$childrenWrap\n  }\n\n  /** 设置已读 */\n  public setUnread(val: boolean) {\n    if (val) this.$el.classList.add('atk-unread')\n    else this.$el.classList.remove('atk-unread')\n  }\n\n  /** 设置为可点击的评论 */\n  public setOpenable(val: boolean) {\n    if (val) this.$el.classList.add('atk-openable')\n    else this.$el.classList.remove('atk-openable')\n  }\n\n  /** 设置点击评论打开置顶 URL */\n  public setOpenURL(url: string) {\n    this.setOpenable(true)\n    this.$el.onclick = (evt) => {\n      evt.stopPropagation()\n      window.open(url)\n    }\n  }\n\n  /** 设置点击评论时的操作 */\n  public setOpenAction(action: () => void) {\n    this.setOpenable(true)\n    this.$el.onclick = (evt) => {\n      evt.stopPropagation()\n      action()\n    }\n  }\n}\n","import ActionBtn from '@/components/action-btn'\nimport $t from '@/i18n'\nimport type { CommentNode } from '.'\n\nexport default class CommentActions {\n  private comment: CommentNode\n\n  private get data() { return this.comment.getData() }\n  private get opts() { return this.comment.getOpts() }\n  private getApi() { return this.comment.getOpts().getApi() }\n\n  public constructor(comment: CommentNode) {\n    this.comment = comment\n  }\n\n  /** 投票操作 */\n  public vote(type: 'up'|'down') {\n    const actionBtn = (type === 'up') ? this.comment.getRender().voteBtnUp : this.comment.getRender().voteBtnDown\n\n    this.getApi().votes.vote(`comment_${type}`, this.data.id, { ...this.getApi().getUserFields() })\n    .then((res) => {\n      this.data.vote_up = res.data.up\n      this.data.vote_down = res.data.down\n      this.comment.getRender().voteBtnUp?.updateText()\n      this.comment.getRender().voteBtnDown?.updateText()\n    })\n    .catch((err) => {\n      actionBtn?.setError($t('voteFail'))\n      console.log(err)\n    })\n  }\n\n  /** 管理员 - 评论状态修改 */\n  public adminEdit(type: 'collapsed'|'pending'|'pinned', btnElem: ActionBtn) {\n    if (btnElem.isLoading) return // 若正在修改中\n\n    btnElem.setLoading(true, `${$t('editing')}...`)\n\n    // 克隆并修改当前数据\n    const modify = { ...this.data }\n    if (type === 'collapsed') {\n      modify.is_collapsed = !modify.is_collapsed\n    } else if (type === 'pending') {\n      modify.is_pending = !modify.is_pending\n    } else if (type === 'pinned') {\n      modify.is_pinned = !modify.is_pinned\n    }\n\n    this.getApi().comments.updateComment(this.data.id, {\n      ...modify,\n    }).then((res) => {\n      btnElem.setLoading(false)\n\n      // 刷新当前 Comment UI\n      this.comment.setData(res.data)\n    }).catch((err) => {\n      console.error(err)\n      btnElem.setError($t('editFail'))\n    })\n  }\n\n  /** 管理员 - 评论删除 */\n  public adminDelete(btnElem: ActionBtn) {\n    if (btnElem.isLoading) return // 若正在删除中\n\n    btnElem.setLoading(true, `${$t('deleting')}...`)\n    this.getApi().comments.deleteComment(this.data.id)\n      .then(() => {\n        btnElem.setLoading(false)\n        if (this.opts.onDelete) this.opts.onDelete(this.comment)\n      })\n      .catch((e) => {\n        console.error(e)\n        btnElem.setError($t('deleteFail'))\n      })\n  }\n\n  /** 快速跳转到该评论 */\n  public goToReplyComment() {\n    const origHash = window.location.hash\n    const modifyHash = `#atk-comment-${this.data.rid}`\n\n    window.location.hash = modifyHash\n    if (modifyHash === origHash) window.dispatchEvent(new Event('hashchange')) // 强制触发事件\n  }\n}\n","import type { CommentData, ArtalkConfig, ContextApi } from '@/types'\nimport $t from '@/i18n'\nimport type { Api } from '../api'\nimport * as Ui from '../lib/ui'\nimport * as Utils from '../lib/utils'\nimport marked from '../lib/marked'\nimport UADetect from '../lib/detect'\nimport CommentUI from './render'\nimport CommentActions from './actions'\n\nexport interface CommentOptions {\n  // Hooks\n  onAfterRender?: () => void\n  onDelete?: Function\n\n  /** The comment being replied to (linked comment) */\n  replyTo?: CommentData\n\n  // Referenced from ArtalkConfig\n  flatMode: boolean\n  vote: boolean\n  voteDown: boolean\n  uaBadge: boolean\n  nestMax: number\n  gravatar: ArtalkConfig['gravatar']\n  heightLimit: ArtalkConfig['heightLimit']\n  avatarURLBuilder: ArtalkConfig['avatarURLBuilder']\n  scrollRelativeTo: ArtalkConfig['scrollRelativeTo']\n\n  // TODO: Move to plugin folder and remove from core\n  getApi: () => Api\n  replyComment: ContextApi['replyComment']\n  editComment: ContextApi['editComment']\n}\n\nexport default class CommentNode {\n  $el?: HTMLElement\n\n  private renderInstance: CommentUI\n  private actionInstance: CommentActions\n\n  private data: CommentData\n  private opts: CommentOptions\n\n  private parent: CommentNode|null\n  private children: CommentNode[] = []\n\n  private nestCurt: number // 当前嵌套层数\n\n  constructor(data: CommentData, opts: CommentOptions) {\n    this.opts = opts\n    this.data = { ...data }\n    this.data.date = this.data.date.replace(/-/g, '/') // 解决 Safari 日期解析 NaN 问题\n\n    this.parent = null\n    this.nestCurt = 1 // 现在已嵌套 n 层\n\n    this.actionInstance = new CommentActions(this)\n    this.renderInstance = new CommentUI(this)\n  }\n\n  /** 渲染 UI */\n  public render() {\n    const newEl = this.renderInstance.render()\n\n    if (this.$el) this.$el.replaceWith(newEl)\n    this.$el = newEl\n    // Please be aware of the memory leak, the $el may be replaced multiple times.\n    // If somewhere else has a reference to the old $el, it will cause a memory leak.\n    // So it's limited to use the $el reference by `getEl()`.\n    // The `getEl()` will always return the latest $el.\n\n    if (this.opts.onAfterRender) this.opts.onAfterRender()\n  }\n\n  /** 获取评论操作实例对象 */\n  public getActions() {\n    return this.actionInstance\n  }\n\n  /** 获取评论渲染器实例对象 */\n  public getRender() {\n    return this.renderInstance\n  }\n\n  /** 获取评论数据 */\n  public getData() {\n    return this.data\n  }\n\n  /** 设置数据 */\n  public setData(data: CommentData) {\n    this.data = data\n\n    this.render()\n    this.getRender().playFadeAnimForBody()\n  }\n\n  /** 获取父评论 */\n  public getParent() {\n    return this.parent\n  }\n\n  /** 获取所有子评论 */\n  public getChildren() {\n    return this.children\n  }\n\n  /** 获取当前嵌套层数 */\n  public getNestCurt() {\n    return this.nestCurt\n  }\n\n  /** 判断是否为根评论 */\n  public getIsRoot() {\n    return this.data.rid === 0\n  }\n\n  /** 获取评论 ID */\n  public getID() {\n    return this.data.id\n  }\n\n  /** 置入子评论 */\n  public putChild(childNode: CommentNode, insertMode: 'append'|'prepend' = 'append') {\n    childNode.parent = this\n    childNode.nestCurt = this.nestCurt + 1 // 嵌套层数 +1\n    this.children.push(childNode)\n\n    const $childrenWrap = this.getChildrenWrapEl()\n    const $childComment = childNode.getEl()\n    if (insertMode === 'append') $childrenWrap.append($childComment)\n    else if (insertMode === 'prepend') $childrenWrap.prepend($childComment)\n\n    childNode.getRender().playFadeAnim()\n    childNode.getRender().checkHeightLimit()  // 内容限高\n  }\n\n  /** 获取存放子评论的元素对象 */\n  public getChildrenWrapEl(): HTMLElement {\n    // console.log(this.nestCurt)\n    if (this.nestCurt >= this.opts.nestMax) {\n      return this.parent!.getChildrenWrapEl()\n    }\n    return this.getRender().getChildrenWrap()\n  }\n\n  /** 获取所有父评论 */\n  public getParents() {\n    const flattenParents: CommentNode[] = []\n    let parent = this.parent\n    while (parent) {\n      flattenParents.push(parent)\n      parent = parent.getParent()\n    }\n    return flattenParents\n  }\n\n  /**\n   * Get the element of the comment\n   *\n   * The `getEl()` will always return the latest $el after calling `render()`.\n   * Please be aware of the memory leak if you use the $el reference directly.\n   */\n  public getEl() {\n    if (!this.$el) throw new Error('comment element not initialized before `getEl()`')\n    return this.$el\n  }\n\n  /**\n   * Focus on the comment\n   *\n   * Scroll to the comment and perform flash animation\n   */\n  focus() {\n    if (!this.$el) throw new Error('comment element not initialized before `focus()`')\n\n    // 若父评论存在 “子评论部分” 限高，取消限高\n    this.getParents().forEach((p) => {\n      p.getRender().heightLimitRemoveForChildren()\n    })\n\n    // Scroll to comment\n    this.scrollIntoView()\n\n    // Perform flash animation\n    this.getRender().playFlashAnim()\n  }\n\n  scrollIntoView() {\n    this.$el && Ui.scrollIntoView(this.$el, false, this.opts.scrollRelativeTo && this.opts.scrollRelativeTo())\n  }\n\n  /**\n   * Remove the comment node\n   */\n  remove() {\n    this.$el?.remove()\n  }\n\n  /** 获取 Gravatar 头像 URL */\n  public getGravatarURL() {\n    return Utils.getGravatarURL({\n      mirror: this.opts.gravatar.mirror,\n      params: this.opts.gravatar.params,\n      emailMD5: this.data.email_encrypted,\n    })\n  }\n\n  /** 获取评论 markdown 解析后的内容 */\n  public getContentMarked() {\n    return marked(this.data.content)\n  }\n\n  /** 获取格式化后的日期 */\n  public getDateFormatted() {\n    return Utils.timeAgo(new Date(this.data.date), $t)\n  }\n\n  /** 获取用户 UserAgent 信息 */\n  public getUserUA() {\n    const info = UADetect(this.data.ua)\n    return {\n      browser: `${info.browser} ${info.version}`,\n      os: `${info.os} ${info.osVersion}`\n    }\n  }\n\n  /** 获取配置 */\n  public getOpts() {\n    return this.opts\n  }\n}\n","import type { ContextApi, CommentData } from '@/types'\nimport { CommentNode } from '@/comment'\n\ninterface CreateCommentNodeOptions {\n  forceFlatMode?: boolean\n}\n\nexport function createCommentNode(ctx: ContextApi, comment: CommentData, replyComment?: CommentData, opts?: CreateCommentNodeOptions): CommentNode {\n  const instance = new CommentNode(comment, {\n    onAfterRender: () => {\n      ctx.trigger('comment-rendered', instance)\n    },\n    onDelete: (c: CommentNode) => {\n      ctx.getData().deleteComment(c.getID())\n    },\n\n    replyTo: replyComment,\n\n    // TODO simplify reference\n    flatMode: typeof opts?.forceFlatMode === 'boolean' ? opts?.forceFlatMode : ctx.conf.flatMode as boolean,\n    gravatar: ctx.conf.gravatar,\n    nestMax: ctx.conf.nestMax,\n    heightLimit: ctx.conf.heightLimit,\n    avatarURLBuilder: ctx.conf.avatarURLBuilder,\n    scrollRelativeTo: ctx.conf.scrollRelativeTo,\n    vote: ctx.conf.vote,\n    voteDown: ctx.conf.voteDown,\n    uaBadge: ctx.conf.uaBadge,\n\n    // TODO: move to plugin folder and remove from core\n    getApi: () => ctx.getApi(),\n    replyComment: (c, $el) => ctx.replyComment(c, $el),\n    editComment: (c, $el) => ctx.editComment(c, $el)\n  })\n\n  // 渲染元素\n  instance.render()\n\n  return instance\n}\n","import * as Utils from '../lib/utils'\n\nexport interface ReadMoreBtnOptions {\n  /** 回调函数 */\n  onClick: (offset: number) => void\n\n  pageSize: number\n\n  text?: string\n}\n\n/**\n * 阅读更多按钮\n */\nexport default class ReadMoreBtn {\n  public opts: ReadMoreBtnOptions\n  public $el: HTMLElement\n  private $loading: HTMLElement\n  private $text: HTMLElement\n  private offset: number = 0\n  private total: number = 0\n  private origText: string = 'Load More'\n\n  /** 是否有更多内容 */\n  get hasMore() {\n    return this.total > (this.offset + this.opts.pageSize)\n  }\n\n  public constructor(opts: ReadMoreBtnOptions) {\n    this.opts = opts\n    this.origText = this.opts.text || this.origText\n\n    this.$el = Utils.createElement(\n    `<div class=\"atk-list-read-more\" style=\"display: none;\">\n      <div class=\"atk-list-read-more-inner\">\n        <div class=\"atk-loading-icon\" style=\"display: none;\"></div>\n        <span class=\"atk-text\">${this.origText}</span>\n      </div>\n    </div>`)\n\n    this.$loading = this.$el.querySelector<HTMLElement>('.atk-loading-icon')!\n    this.$text = this.$el.querySelector<HTMLElement>('.atk-text')!\n\n    this.$el.onclick = () => { this.click() }\n  }\n\n  click() {\n    if (this.hasMore) this.opts.onClick(this.offset + this.opts.pageSize)\n    this.checkDisabled()\n  }\n\n  /** 显示 */\n  show() {\n    this.$el.style.display = ''\n  }\n\n  /** 隐藏 */\n  hide() {\n    this.$el.style.display = 'none'\n  }\n\n  /** 加载 */\n  setLoading (isLoading: boolean) {\n    this.$loading.style.display = isLoading ? '' : 'none'\n    this.$text.style.display = isLoading ? 'none' : ''\n  }\n\n  /** 错误提示 */\n  showErr(errMsg: string) {\n    this.setLoading(false)\n\n    this.$text.innerText = errMsg\n    this.$el.classList.add('atk-err')\n    window.setTimeout(() => {\n      this.$text.innerText = this.origText\n      this.$el.classList.remove('atk-err')\n    }, 2000) // 2s后错误提示复原\n  }\n\n  /** 更新数据 */\n  public update(offset: number, total: number) {\n    this.offset = offset\n    this.total = total\n\n    this.checkDisabled()\n  }\n\n  public checkDisabled() {\n    if (this.hasMore) this.show()\n    else this.hide()\n  }\n}\n","import type { ListFetchParams } from '@/types'\nimport ReadMoreBtn from '@/components/read-more-btn'\nimport $t from '@/i18n'\nimport type { Paginator, IPgHolderOpt } from '.'\n\n/**\n * 阅读更多形式的分页\n */\nexport default class ReadMorePaginator implements Paginator {\n  private instance!: ReadMoreBtn\n  private onReachedBottom: (() => void) | null = null\n  private opt!: IPgHolderOpt\n\n  create(opt: IPgHolderOpt) {\n    this.opt = opt\n\n    this.instance = new ReadMoreBtn({\n      pageSize: opt.pageSize,\n      onClick: async (o) => {\n        opt.ctx.fetch({\n          offset: o,\n        })\n      },\n      text: $t('loadMore'),\n    })\n\n    // 滚动到底部自动加载\n    if (opt.readMoreAutoLoad) {\n      this.onReachedBottom = () => {\n        if (!this.instance.hasMore || this.opt.ctx.getData().getLoading()) return\n        this.instance.click()\n      }\n      this.opt.ctx.on('list-reach-bottom', this.onReachedBottom)\n    }\n\n    return this.instance.$el\n  }\n\n  setLoading(val: boolean) {\n    this.instance.setLoading(val)\n  }\n\n  update(offset: number, total: number) {\n    this.instance.update(offset, total)\n  }\n\n  showErr(msg: string) {\n    this.instance.showErr(msg)\n  }\n\n  next() {\n    this.instance.click()\n  }\n\n  getHasMore(): boolean {\n    return this.instance.hasMore\n  }\n\n  getIsClearComments(params: { offset?: number }): boolean {\n    return params.offset === 0\n  }\n\n  dispose(): void {\n    this.onReachedBottom && this.opt.ctx.off('list-reach-bottom', this.onReachedBottom)\n    this.instance.$el.remove()\n  }\n}\n","import * as Utils from '../lib/utils'\nimport * as Ui from '../lib/ui'\n\nexport interface PaginationOptions {\n  /** 每页条数 */\n  pageSize: number\n\n  /** 回调函数 */\n  onChange: (offset: number) => void\n}\n\nexport default class Pagination {\n  private opts: PaginationOptions\n  public total: number\n  public $el: HTMLElement\n  public $input: HTMLInputElement\n  public inputTimer?: number\n  public $prevBtn: HTMLElement\n  public $nextBtn: HTMLElement\n\n  public page: number = 1\n  get pageSize(): number {\n    return this.opts.pageSize\n  }\n  get offset(): number {\n    return this.pageSize * (this.page - 1)\n  }\n  get maxPage(): number {\n    return Math.ceil(this.total / this.pageSize)\n  }\n\n  public constructor(total: number, opts: PaginationOptions) {\n    this.total = total\n    this.opts = opts\n\n    this.$el = Utils.createElement(\n      `<div class=\"atk-pagination-wrap\">\n        <div class=\"atk-pagination\">\n          <div class=\"atk-btn atk-btn-prev\" aria-label=\"Previous page\">\n            <svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 512 512\" height=\"14px\" width=\"14px\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M217.9 256L345 129c9.4-9.4 9.4-24.6 0-33.9-9.4-9.4-24.6-9.3-34 0L167 239c-9.1 9.1-9.3 23.7-.7 33.1L310.9 417c4.7 4.7 10.9 7 17 7s12.3-2.3 17-7c9.4-9.4 9.4-24.6 0-33.9L217.9 256z\"></path></svg>\n          </div>\n          <input type=\"text\" class=\"atk-input\" aria-label=\"Enter the number of page\" />\n          <div class=\"atk-btn atk-btn-next\" aria-label=\"Next page\">\n            <svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 512 512\" height=\"14px\" width=\"14px\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M294.1 256L167 129c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.3 34 0L345 239c9.1 9.1 9.3 23.7.7 33.1L201.1 417c-4.7 4.7-10.9 7-17 7s-12.3-2.3-17-7c-9.4-9.4-9.4-24.6 0-33.9l127-127.1z\"></path></svg>\n          </div>\n        </div>\n      </div>`)\n    this.$input = this.$el.querySelector('.atk-input')!\n    this.$input.value = `${this.page}`\n\n    this.$input.oninput = () => this.input()\n    this.$input.onkeydown = (e) => this.keydown(e)\n\n    this.$prevBtn = this.$el.querySelector('.atk-btn-prev')!\n    this.$nextBtn = this.$el.querySelector('.atk-btn-next')!\n\n    this.$prevBtn.onclick = () => this.prev()\n    this.$nextBtn.onclick = () => this.next()\n\n    this.checkDisabled()\n  }\n\n  public update(offset: number, total: number) {\n    this.page = Math.ceil(offset / this.pageSize) + 1\n    this.total = total\n\n    this.setInput(this.page)\n    this.checkDisabled()\n  }\n\n  public setInput(page: number) {\n    this.$input.value = `${page}`\n  }\n\n  public input(now: boolean = false) {\n    window.clearTimeout(this.inputTimer)\n\n    const value = this.$input.value.trim()\n\n    const modify = () => {\n      if (value === '') { this.setInput(this.page);return }\n      let page = Number(value)\n      if (Number.isNaN(page)) { this.setInput(this.page);return }\n      if (page < 1) { this.setInput(this.page);return }\n      if (page > this.maxPage) { this.setInput(this.maxPage);page = this.maxPage }\n      this.change(page)\n    }\n\n    // 延迟 800ms 执行\n    if (!now) this.inputTimer = window.setTimeout(() => modify(), 800)\n    else modify()\n  }\n\n  public prev() {\n    const page = this.page - 1\n    if (page < 1) { return }\n    this.change(page)\n  }\n\n  public next() {\n    const page = this.page + 1\n    if (page > this.maxPage) { return }\n    this.change(page)\n  }\n\n  public getHasMore() {\n    return this.page + 1 <= this.maxPage\n  }\n\n  public change(page: number) {\n    this.page = page\n    this.opts.onChange(this.offset)\n    this.setInput(page)\n    this.checkDisabled()\n  }\n\n  public checkDisabled() {\n    if (this.page + 1 > this.maxPage) {\n      this.$nextBtn.classList.add('atk-disabled')\n    } else {\n      this.$nextBtn.classList.remove('atk-disabled')\n    }\n\n    if (this.page - 1 < 1) {\n      this.$prevBtn.classList.add('atk-disabled')\n    } else {\n      this.$prevBtn.classList.remove('atk-disabled')\n    }\n  }\n\n  public keydown(e: KeyboardEvent) {\n    const keyCode = e.keyCode || e.which\n\n    if (keyCode === 38) {\n      // 上键\n      const page = Number(this.$input.value) + 1\n      if (page > this.maxPage) { return }\n      this.setInput(page);\n      this.input()\n    } else if (keyCode === 40) {\n      // 下键\n      const page = Number(this.$input.value) - 1\n      if (page < 1) { return }\n      this.setInput(page)\n      this.input()\n    } else if (keyCode === 13) {\n      // 回车\n      this.input(true)\n    }\n  }\n\n  /** 加载 */\n  setLoading (isLoading: boolean) {\n    if (isLoading) Ui.showLoading(this.$el)\n    else Ui.hideLoading(this.$el)\n  }\n}\n","import PaginationComponent from '@/components/pagination'\nimport type { Paginator, IPgHolderOpt } from '.'\n\n/**\n * 翻页形式的分页\n */\nexport default class UpDownPaginator implements Paginator {\n  private instance!: PaginationComponent\n\n  create(opt: IPgHolderOpt) {\n    this.instance = new PaginationComponent(opt.total, {\n      pageSize: opt.pageSize,\n      onChange: async (o) => {\n        opt.ctx.editorResetState() // 防止评论框被吞\n\n        opt.ctx.fetch({\n          offset: o,\n          onSuccess: () => {\n            opt.ctx.listGotoFirst()\n          }\n        })\n      }\n    })\n\n    return this.instance.$el\n  }\n\n  setLoading(val: boolean) {\n    this.instance.setLoading(val)\n  }\n\n  update(offset: number, total: number) {\n    this.instance.update(offset, total)\n  }\n\n  next() {\n    this.instance.next()\n  }\n\n  getHasMore(): boolean {\n    return this.instance.getHasMore()\n  }\n\n  getIsClearComments(): boolean {\n    return true\n  }\n\n  dispose(): void {\n    this.instance.$el.remove()\n  }\n}\n","import type { ArtalkConfig, ContextApi } from '@/types'\nimport $t from '@/i18n'\nimport { Paginator } from './paginator'\nimport ReadMorePaginator from './paginator/read-more'\nimport UpDownPaginator from './paginator/up-down'\n\nfunction createPaginatorByConf(conf: Pick<ArtalkConfig, 'pagination'>): Paginator {\n  if (conf.pagination.readMore) return new ReadMorePaginator()\n  return new UpDownPaginator()\n}\n\nfunction getPageDataByLastData(ctx: ContextApi): { offset: number, total: number } {\n  const last = ctx.getData().getListLastFetch()\n  const r = { offset: 0, total: 0 }\n  if (!last) return r\n\n  r.offset = last.params.offset\n  if (last.data) r.total = last.params.flatMode ? last.data.count : last.data.roots_count\n\n  return r\n}\n\nexport const initListPaginatorFunc = (ctx: ContextApi) => {\n  let paginator: Paginator|null = null\n\n  // Init paginator when conf loaded\n  ctx.watchConf(['pagination', 'locale'], (conf) => {\n    const list = ctx.get('list')\n\n    if (paginator) paginator.dispose() // if had been init, dispose it\n\n    // create paginator instance\n    paginator = createPaginatorByConf(conf)\n\n    // create paginator dom\n    const { offset, total } = getPageDataByLastData(ctx)\n    const $paginator = paginator.create({\n      ctx, pageSize: conf.pagination.pageSize, total,\n\n      readMoreAutoLoad: conf.pagination.autoLoad,\n    })\n\n    // mount paginator dom\n    list.$commentsWrap.after($paginator)\n\n    // update paginator info\n    paginator?.update(offset, total)\n  })\n\n  // When list loaded\n  ctx.on('list-loaded', (comments) => {\n    // update paginator info\n    const { offset, total } = getPageDataByLastData(ctx)\n    paginator?.update(offset, total)\n  })\n\n  // When list fetch\n  ctx.on('list-fetch', (params) => {\n    // if clear comments when fetch new page data\n    if (ctx.getData().getComments().length > 0 && paginator?.getIsClearComments(params)) {\n      ctx.getData().clearComments()\n    }\n  })\n\n  // When list error\n  ctx.on('list-failed', () => {\n    paginator?.showErr?.($t('loadFail'))\n  })\n\n  // loading\n  ctx.on('list-fetch', (params) => {\n    paginator?.setLoading(true)\n  })\n  ctx.on('list-fetched', ({ params }) => {\n    paginator?.setLoading(false)\n  })\n}\n","import type { ContextApi } from '@/types'\nimport Component from '@/lib/component'\nimport * as Utils from '@/lib/utils'\nimport { CommentNode } from '@/comment'\nimport ListHTML from './list.html?raw'\nimport { ListLayout } from './layout'\nimport { createCommentNode } from './comment'\nimport { initListPaginatorFunc } from './page'\n\nexport default class List extends Component {\n  /** 列表评论集区域元素 */\n  $commentsWrap!: HTMLElement\n  public getCommentsWrapEl() { return this.$commentsWrap }\n\n  protected commentNodes: CommentNode[] = []\n  getCommentNodes() { return this.commentNodes }\n\n  constructor (ctx: ContextApi) {\n    super(ctx)\n\n    // Init base element\n    this.$el = Utils.createElement(ListHTML)\n    this.$commentsWrap = this.$el.querySelector('.atk-list-comments-wrap')!\n\n    // Init paginator\n    initListPaginatorFunc(ctx)\n\n    // Bind events\n    this.initCrudEvents()\n  }\n\n  getListLayout({ forceFlatMode }: { forceFlatMode?: boolean } = {}) {\n    return new ListLayout({\n      $commentsWrap: this.$commentsWrap,\n      nestSortBy: this.ctx.conf.nestSort,\n      nestMax: this.ctx.conf.nestMax,\n      flatMode: typeof forceFlatMode === 'boolean' ? forceFlatMode : this.ctx.conf.flatMode as boolean,\n      // flatMode must be boolean because it had been handled when Artalk.init\n      createCommentNode: (d, r) => {\n        const node = createCommentNode(this.ctx, d, r, { forceFlatMode })\n        this.commentNodes.push(node) // store node instance\n        return node\n      },\n      findCommentNode: (id) => this.commentNodes.find(c => c.getID() === id),\n    })\n  }\n\n  private initCrudEvents() {\n    this.ctx.on('list-load', (comments) => {\n      // 导入数据\n      this.getListLayout().import(comments)\n    })\n\n    this.ctx.on('list-loaded', (comments) => {\n      if (comments.length === 0) {\n        this.commentNodes = []\n        this.$commentsWrap.innerHTML = ''\n      }\n    })\n\n    // When comment insert\n    this.ctx.on('comment-inserted', (comment) => {\n      this.getListLayout().insert(comment)\n    })\n\n    // When comment delete\n    this.ctx.on('comment-deleted', (comment) => {\n      const node = this.commentNodes.find(c => c.getID() === comment.id)\n      if (!node) { console.error(`comment node id=${comment.id} not found`);return }\n      node.remove()\n      this.commentNodes = this.commentNodes.filter(c => c.getID() !== comment.id)\n      // TODO: remove child nodes\n    })\n\n    // When comment update\n    this.ctx.on('comment-updated', (comment) => {\n      const node = this.commentNodes.find(c => c.getID() === comment.id)\n      node && node.setData(comment)\n    })\n  }\n}\n","import * as Ui from '@/lib/ui'\n\nlet bodyOrgOverflow: string\nlet bodyOrgPaddingRight: string\n\nexport function getScrollbarHelper() {\n  return {\n    init() {\n      bodyOrgOverflow = document.body.style.overflow\n      bodyOrgPaddingRight = document.body.style.paddingRight\n    },\n\n    unlock() {\n      document.body.style.overflow = bodyOrgOverflow\n      document.body.style.paddingRight = bodyOrgPaddingRight\n    },\n\n    lock() {\n      document.body.style.overflow = 'hidden'\n      const barPaddingRight = parseInt(window.getComputedStyle(document.body, null).getPropertyValue('padding-right'), 10)\n      document.body.style.paddingRight = `${Ui.getScrollBarWidth() + barPaddingRight || 0}px`\n    }\n  }\n}\n","export interface LayerOptions {\n  onShow: () => void\n  onHide: () => void\n}\n\nexport class Layer {\n  private allowMaskClose = true\n  private onAfterHide?: () => void\n\n  constructor(\n    private $el: HTMLElement,\n    private opts: LayerOptions\n  ) {\n  }\n\n  setOnAfterHide(func: () => void) {\n    this.onAfterHide = func\n  }\n\n  setAllowMaskClose(allow: boolean) {\n    this.allowMaskClose = allow\n  }\n\n  getAllowMaskClose() {\n    return this.allowMaskClose\n  }\n\n  getEl() {\n    return this.$el\n  }\n\n  show() {\n    this.opts.onShow()\n    this.$el.style.display = ''\n  }\n\n  async hide() {\n    this.opts.onHide()\n    this.$el.style.display = 'none'\n    this.onAfterHide && this.onAfterHide()\n  }\n\n  async destroy() {\n    this.opts.onHide()\n    this.$el.remove()\n    this.onAfterHide && this.onAfterHide()\n  }\n}\n","import * as Utils from '@/lib/utils'\nimport { getScrollbarHelper } from './scrollbar-helper'\nimport { Layer } from './layer'\n\nexport class LayerWrap {\n  private $wrap: HTMLElement\n  private $mask: HTMLElement\n  private items: Layer[] = []\n\n  constructor() {\n    this.$wrap = Utils.createElement(\n      `<div class=\"atk-layer-wrap\" style=\"display: none;\"><div class=\"atk-layer-mask\"></div></div>`\n    )\n    this.$mask = this.$wrap.querySelector<HTMLElement>('.atk-layer-mask')!\n  }\n\n  createItem(name: string, el?: HTMLElement) {\n    // init element\n    el = el || this.createItemElement(name)\n    el.setAttribute('data-layer-name', name)\n    this.$wrap.appendChild(el)\n\n    // create layer instance\n    const layer = new Layer(el, {\n      onHide: () => this.hideWrap(el!),\n      onShow: () => this.showWrap()\n    })\n\n    // register mask click event\n    this.getMask().addEventListener('click', () => {\n      layer.getAllowMaskClose() && layer.hide()\n    })\n\n    // add to items\n    this.items.push(layer)\n\n    return layer\n  }\n\n  private createItemElement(name: string) {\n    const el = document.createElement('div')\n    el.classList.add('atk-layer-item')\n    el.style.display = 'none'\n    this.$wrap.appendChild(el)\n    return el\n  }\n\n  getWrap() {\n    return this.$wrap\n  }\n\n  getMask() {\n    return this.$mask\n  }\n\n  showWrap() {\n    this.$wrap.style.display = 'block'\n    this.$mask.style.display = 'block'\n    this.$mask.classList.add('atk-fade-in')\n    getScrollbarHelper().lock()\n  }\n\n  hideWrap($el: HTMLElement) {\n    // if wrap contains more than one item, do not hide entire wrap\n    if (this.items.map(l => l.getEl()).filter(e => e !== $el && e.isConnected && e.style.display !== 'none').length > 0) {\n      return\n    }\n\n    const onHide = () => {\n      this.$wrap.style.display = 'none'\n      this.$wrap.classList.remove('atk-fade-out')\n\n      getScrollbarHelper().unlock()\n\n      this.$wrap.onanimationend = null\n    }\n\n    // perform animation\n    this.$wrap.classList.add('atk-fade-out')\n    if (window.getComputedStyle(this.$wrap)['animation-name'] !== 'none') {\n      this.$wrap.onanimationend = () => onHide()\n    } else {\n      onHide()\n    }\n  }\n}\n","import type { ContextApi } from '@/types'\nimport { getScrollbarHelper } from './scrollbar-helper'\nimport { LayerWrap } from './wrap'\n\nexport class LayerManager {\n  private wrap: LayerWrap\n\n  constructor(ctx: ContextApi) {\n    this.wrap = new LayerWrap()\n    document.body.appendChild(this.wrap.getWrap())\n\n    ctx.on('unmounted', () => {\n      this.wrap.getWrap().remove()\n    })\n\n    // 记录页面原始 CSS 属性\n    getScrollbarHelper().init()\n  }\n\n  getEl() {\n    return this.wrap.getWrap()\n  }\n\n  create(name: string, el?: HTMLElement) {\n    return this.wrap.createItem(name, el)\n  }\n}\n","import type { LocalUser } from '@/types'\n\nconst LOCAL_USER_KEY = 'ArtalkUser'\n\ninterface UserOpts {\n  onUserChanged?: (user: LocalUser) => void\n}\n\nclass User {\n  private data: LocalUser\n\n  constructor(\n    private opts: UserOpts\n  ) {\n    // Import from localStorage\n    const localUser = JSON.parse(window.localStorage.getItem(LOCAL_USER_KEY) || '{}')\n\n    // Initialize\n    this.data = {\n      nick: localUser.nick || '',\n      email: localUser.email || '',\n      link: localUser.link || '',\n      token: localUser.token || '',\n      isAdmin: localUser.isAdmin || false\n    }\n  }\n\n  getData() {\n    return this.data\n  }\n\n  /** Update user data and save to localStorage */\n  update(obj: Partial<LocalUser> = {}) {\n    Object.entries(obj).forEach(([key, value]) => {\n      this.data[key] = value\n    })\n\n    window.localStorage.setItem(LOCAL_USER_KEY, JSON.stringify(this.data))\n    this.opts.onUserChanged && this.opts.onUserChanged(this.data)\n  }\n\n  /**\n   * Logout\n   *\n   * @description Logout will clear login status, but not clear user data (nick, email, link)\n   */\n  logout() {\n    this.update({\n      token: '',\n      isAdmin: false\n    })\n  }\n\n  /** Check if user has filled basic data */\n  checkHasBasicUserInfo() {\n    return !!this.data.nick && !!this.data.email\n  }\n}\n\nexport default User\n","import type { ContextApi } from '@/types'\nimport CheckerLauncher from './components/checker'\nimport Editor from './editor/editor'\nimport SidebarLayer from './layer/sidebar-layer'\n\nimport List from './list/list'\n\nimport * as I18n from './i18n'\nimport { PlugManager } from './plugins/editor-kit'\nimport { LayerManager } from './layer/layer-manager'\nimport User from './lib/user'\n\n/**\n * Services\n *\n * @description Call these services by `ctx.get('serviceName')` or `ctx.serviceName`\n */\nconst services = {\n  // I18n\n  i18n(ctx: ContextApi) {\n    I18n.setLocale(ctx.conf.locale)\n\n    ctx.watchConf(['locale'], (conf) => {\n      I18n.setLocale(conf.locale)\n    })\n  },\n\n  // User Store\n  user(ctx: ContextApi) {\n    const user = new User({\n      onUserChanged: (data) => {\n        ctx.trigger('user-changed', data)\n      }\n    })\n    return user\n  },\n\n  // 弹出层\n  layerManager(ctx: ContextApi) {\n    return new LayerManager(ctx)\n  },\n\n  // CheckerLauncher\n  checkerLauncher(ctx: ContextApi) {\n    const checkerLauncher = new CheckerLauncher({\n      getCtx: () => ctx,\n      getApi: () => ctx.getApi(),\n      onReload: () => ctx.reload(),\n\n      // make sure suffix with a slash, because it will be used as a base url when call `fetch`\n      getCaptchaIframeURL: () => `${ctx.conf.server}/api/v2/captcha/?t=${+new Date()}`\n    })\n    return checkerLauncher\n  },\n\n  // 编辑器\n  editor(ctx: ContextApi) {\n    const editor = new Editor(ctx)\n    ctx.$root.appendChild(editor.$el)\n    return editor\n  },\n\n  // 评论列表\n  list(ctx: ContextApi): List {\n    const list = new List(ctx)\n    ctx.$root.appendChild(list.$el)\n    return list\n  },\n\n  // 侧边栏 Layer\n  sidebarLayer(ctx: ContextApi) {\n    const sidebarLayer = new SidebarLayer(ctx)\n    return sidebarLayer\n  },\n\n  // Extra Service\n  // -----------------------------------------\n  // Only for type check\n  // Not inject to ctx immediately,\n  // but can be injected by other occasions\n\n  editorPlugs(): PlugManager|undefined {\n    return undefined\n  }\n}\n\nexport default services\n\n// type tricks for dependency injection\ntype TServiceImps = typeof services\ntype TObjectWithFuncs = {[k: string]: (...args: any) => any}\ntype TKeysOnlyReturn<T extends TObjectWithFuncs, V> = {[K in keyof T]: ReturnType<T[K]> extends V ? K : never}[keyof T]\ntype TOmitConditions = TKeysOnlyReturn<TServiceImps, void>\ntype TServiceInjectors = Omit<TServiceImps, TOmitConditions>\nexport type TInjectedServices = {[K in keyof TServiceInjectors]: ReturnType<TServiceInjectors[K]>}\n","import * as Utils from '@/lib/utils'\nimport * as Ui from '@/lib/ui'\nimport $t from '@/i18n'\n\nexport interface ErrorDialogOptions {\n  $err: HTMLElement\n\n  errMsg: string\n  errData?: any\n  retryFn?: () => void\n\n  onOpenSidebar?: () => void\n}\n\nexport function showErrorDialog(opts: ErrorDialogOptions) {\n  const errEl = Utils.createElement(`<span><span class=\"error-message\"></span><br/><br/></span>`)\n  errEl.querySelector<HTMLElement>('.error-message')!.innerText = `${$t('listLoadFailMsg')}\\n${opts.errMsg}`\n\n  if (opts.retryFn) {\n    const $retryBtn = Utils.createElement(`<span style=\"cursor:pointer;\">${$t('listRetry')}</span>`)\n    $retryBtn.onclick = () => opts.retryFn && opts.retryFn()\n    errEl.appendChild($retryBtn)\n  }\n\n  if (opts.onOpenSidebar) {\n    const $openSidebar = Utils.createElement(`<span atk-only-admin-show> | <span style=\"cursor:pointer;\">${$t('openName', { name: $t('ctrlCenter') })}</span></span>`)\n    errEl.appendChild($openSidebar)\n    $openSidebar.onclick = () => opts.onOpenSidebar && opts.onOpenSidebar()\n  }\n\n  Ui.setError(opts.$err, errEl)\n}\n","import type { ArtalkConfig, ArtalkPlugin, ContextApi } from '@/types'\nimport { handleConfFormServer } from '@/config'\nimport { showErrorDialog } from '../components/error-dialog'\n\nexport const ConfRemoter: ArtalkPlugin = (ctx) => {\n  ctx.on('created', () => {\n    if (ctx.conf.immediateFetch !== false)\n      ctx.trigger('conf-fetch')\n  })\n\n  ctx.on('conf-fetch', () => {\n    loadConf(ctx)\n  })\n}\n\nfunction loadConf(ctx: ContextApi) {\n  ctx.getApi().conf.conf().then((res) => {\n    let conf: Partial<ArtalkConfig> = {\n      apiVersion: res.data.version?.version, // version info\n    }\n\n    // reference conf from backend\n    if (ctx.conf.useBackendConf) {\n      if (!res.data.frontend_conf) throw new Error('The remote backend does not respond to the frontend conf, but `useBackendConf` conf is enabled')\n      conf = { ...conf, ...handleConfFormServer(res.data.frontend_conf) }\n    }\n\n    // apply conf modifier\n    ctx.conf.remoteConfModifier && ctx.conf.remoteConfModifier(conf)\n\n    ctx.updateConf(conf)\n  }).catch((err) => {\n    ctx.updateConf({})\n\n    let sidebarOpenView = ''\n\n    // if response err_no_site, modify the sidebar open view to create site\n    if (err.data?.err_no_site) {\n      const viewLoadParam = { create_name: ctx.conf.site, create_urls: `${window.location.protocol}//${window.location.host}` }\n      sidebarOpenView = `sites|${JSON.stringify(viewLoadParam)}`\n    }\n\n    showErrorDialog({\n      $err: ctx.get('list').$el,\n      errMsg: err.msg || String(err),\n      errData: err.data,\n      retryFn: () => loadConf(ctx),\n      onOpenSidebar: ctx.get('user').getData().isAdmin ? () => ctx.showSidebar({\n        view: sidebarOpenView as any\n      }) : undefined // only show open sidebar button when user is admin\n    })\n\n    console.error(err)\n    throw err\n  }).then(() => {\n    // Trigger mounted event\n    ctx.trigger('mounted')\n  }).then(() => {\n    // 评论获取\n    if (ctx.conf.remoteConfModifier) return // only auto fetch when no remoteConfModifier\n    ctx.fetch({ offset: 0 })\n  }).catch(() => {})\n}\n","import type { ArtalkPlugin } from '@/types'\nimport * as marked from '@/lib/marked'\n\nexport const Markdown: ArtalkPlugin = (ctx) => {\n  marked.initMarked()\n\n  ctx.on('updated', (conf) => {\n    if (conf.markedReplacers) marked.setReplacers(conf.markedReplacers)\n  })\n}\n","import $t from '@/i18n'\nimport type PlugKit from './_kit'\nimport EditorPlug from './_plug'\n\nconst LocalStorageKey = 'ArtalkContent'\n\nexport default class LocalStorage extends EditorPlug {\n  constructor(kit: PlugKit) {\n    super(kit)\n\n    const onContentUpdated = () => {\n      this.save()\n    }\n\n    this.kit.useMounted(() => {\n      // load editor content from localStorage when init\n      const localContent = window.localStorage.getItem(LocalStorageKey) || ''\n      if (localContent.trim() !== '') {\n        this.kit.useEditor().showNotify($t('restoredMsg'), 'i')\n        this.kit.useEditor().setContent(localContent)\n      }\n\n      // bind event\n      this.kit.useEvents().on('content-updated', onContentUpdated)\n    })\n\n    this.kit.useUnmounted(() => {\n      this.kit.useEvents().off('content-updated', onContentUpdated)\n    })\n  }\n\n  // Save editor content to localStorage\n  public save() {\n    window.localStorage.setItem(LocalStorageKey, this.kit.useEditor().getContentRaw().trim())\n  }\n}\n","import $t from '@/i18n'\nimport EditorPlug from './_plug'\nimport type PlugKit from './_kit'\n\nexport default class Textarea extends EditorPlug {\n  constructor(kit: PlugKit) {\n    super(kit)\n\n    const onKeydown = (e: KeyboardEvent) => this.onKeydown(e)\n    const onInput = () => this.onInput()\n\n    this.kit.useMounted(() => {\n      // 占位符\n      this.kit.useUI().$textarea.placeholder = this.kit.useConf().placeholder || $t('placeholder')\n\n      // bind the event\n      this.kit.useUI().$textarea.addEventListener('keydown', onKeydown)\n      this.kit.useUI().$textarea.addEventListener('input', onInput)\n    })\n\n    this.kit.useUnmounted(() => {\n      // unmount the event\n      this.kit.useUI().$textarea.removeEventListener('keydown', onKeydown)\n      this.kit.useUI().$textarea.removeEventListener('input', onInput)\n    })\n\n    this.kit.useEvents().on('content-updated', () => {\n      // delay 80ms to prevent invalid execution\n      window.setTimeout(() => {\n        this.adaptiveHeightByContent()\n      }, 80)\n    })\n  }\n\n  // 按下 Tab 输入内容，而不是失去焦距\n  private onKeydown(e: KeyboardEvent) {\n    const keyCode = e.keyCode || e.which\n\n    if (keyCode === 9) {\n      e.preventDefault()\n      this.kit.useEditor().insertContent('\\t')\n    }\n  }\n\n  private onInput() {\n    this.kit.useEvents().trigger('content-updated', this.kit.useEditor().getContentRaw())\n  }\n\n  // Resize the textarea height by content\n  public adaptiveHeightByContent() {\n    const diff = this.kit.useUI().$textarea.offsetHeight - this.kit.useUI().$textarea.clientHeight\n    this.kit.useUI().$textarea.style.height = '0px' // it's a magic. 若不加此行，内容减少，高度回不去\n    this.kit.useUI().$textarea.style.height = `${this.kit.useUI().$textarea.scrollHeight + diff}px`\n  }\n}\n","import $t from '@/i18n'\nimport EditorPlug from './_plug'\nimport type PlugKit from './_kit'\n\nexport default class SubmitBtn extends EditorPlug {\n  constructor(kit: PlugKit) {\n    super(kit)\n\n    const onClick = () => {\n      this.kit.useEditor().submit()\n    }\n\n    this.kit.useMounted(() => {\n      // apply the submit button text from user custom config\n      this.kit.useUI().$submitBtn.innerText = this.kit.useConf().sendBtn || $t('send')\n\n      // bind the event when click the submit button\n      this.kit.useUI().$submitBtn.addEventListener('click', onClick)\n    })\n\n    this.kit.useUnmounted(() => {\n      this.kit.useUI().$submitBtn.removeEventListener('click', onClick)\n    })\n  }\n}\n","import type { CommentData } from '@/types'\nimport * as Utils from '@/lib/utils'\nimport type PlugKit from './_kit'\n\nexport default class SubmitAddPreset {\n  constructor(private kit: PlugKit) {}\n\n  async reqAdd() {\n    const nComment = (await this.kit.useApi().comments.createComment({\n      ...(await this.getSubmitAddParams())\n    })).data\n    return nComment\n  }\n\n  async getSubmitAddParams() {\n    const { nick, email, link } = this.kit.useUser().getData()\n    const conf = this.kit.useConf()\n\n    return {\n      content: this.kit.useEditor().getContentFinal(),\n      name: nick, email, link,\n      rid: 0,\n      page_key: conf.pageKey,\n      page_title: conf.pageTitle,\n      site_name: conf.site,\n      ua: await Utils.getCorrectUserAgent(), // Get the corrected UA\n    }\n  }\n\n  postSubmitAdd(commentNew: CommentData) {\n    // insert the new comment to list\n    this.kit.useGlobalCtx().getData().insertComment(commentNew)\n  }\n}\n","import type { CommentData } from '@/types'\nimport $t from '@/i18n'\nimport EditorPlug from './_plug'\nimport type PlugKit from './_kit'\nimport SubmitAddPreset from './submit-add'\n\ninterface CustomSubmit {\n  activeCond: () => void\n  pre?: () => void\n  req?: () => Promise<CommentData>\n  /** The `post` method is called after the comment is successfully submitted */\n  post?: (nComment: CommentData) => void\n}\n\nexport default class Submit extends EditorPlug {\n  private customs: CustomSubmit[] = []\n  private defaultPreset: SubmitAddPreset\n\n  constructor(kit: PlugKit) {\n    super(kit)\n\n    this.defaultPreset = new SubmitAddPreset(this.kit)\n\n    const onEditorSubmit = () => this.do()\n\n    this.kit.useMounted(() => {\n      // invoke `do()` when event `editor-submit` is triggered\n      this.kit.useGlobalCtx().on('editor-submit', onEditorSubmit)\n    })\n    this.kit.useUnmounted(() => {\n      this.kit.useGlobalCtx().off('editor-submit', onEditorSubmit)\n    })\n  }\n\n  registerCustom(c: CustomSubmit) {\n    this.customs.push(c)\n  }\n\n  private async do() {\n    if (this.kit.useEditor().getContentFinal().trim() === '') {\n      this.kit.useEditor().focus()\n      return\n    }\n\n    const custom = this.customs.find(o => o.activeCond())\n\n    this.kit.useEditor().showLoading()\n\n    try {\n      // pre submit\n      if (custom?.pre) custom.pre()\n\n      let nComment: CommentData\n\n      // submit request\n      if (custom?.req) nComment = await custom.req()\n      else nComment = await this.defaultPreset.reqAdd()\n\n      // post submit\n      if (custom?.post) custom.post(nComment)\n      else this.defaultPreset.postSubmitAdd(nComment)\n    } catch (err: any) {\n      // submit error\n      console.error(err)\n      this.kit.useEditor().showNotify(`${$t('commentFail')}: ${err.msg || String(err)}`, 'e')\n      return\n    } finally {\n      this.kit.useEditor().hideLoading()\n    }\n\n    this.kit.useEditor().reset() // 复原编辑器\n    this.kit.useGlobalCtx().trigger('editor-submitted')\n  }\n}\n","import type { CommentData } from '@/types'\nimport * as Utils from '@/lib/utils'\nimport * as Ui from '@/lib/ui'\nimport $t from '@/i18n'\nimport EditorPlug from './_plug'\nimport type PlugKit from './_kit'\nimport Submit from './submit'\nimport SubmitAddPreset from './submit-add'\n\nexport default class StateReply extends EditorPlug {\n  private comment?: CommentData\n\n  constructor(kit: PlugKit) {\n    super(kit)\n\n    // add effect when state switch to `reply`\n    this.useEditorStateEffect('reply', (commentData) => {\n      this.setReply(commentData)\n\n      return () => {\n        this.cancelReply()\n      }\n    })\n\n    // register submit preset\n    this.kit.useEvents().on('mounted', () => {\n      const submitPlug = this.kit.useDeps(Submit)\n      if (!submitPlug) throw Error(\"SubmitPlug not initialized\")\n\n      const defaultPreset = new SubmitAddPreset(this.kit)\n\n      submitPlug.registerCustom({\n        activeCond: () => !!this.comment, // active this custom submit when reply mode\n        req: async () => {\n          if (!this.comment) throw new Error('reply comment cannot be empty')\n\n          const nComment = (await this.kit.useApi().comments.createComment({\n            ...(await defaultPreset.getSubmitAddParams()),\n            rid: this.comment.id,\n            page_key: this.comment.page_key,\n            page_title: undefined,\n            site_name: this.comment.site_name\n          })).data\n\n          return nComment\n        },\n        post: (nComment: CommentData) => {\n          // open another page when reply comment is not the same pageKey\n          const conf = this.kit.useConf()\n          if (nComment.page_key !== conf.pageKey) {\n            window.open(`${nComment.page_url}#atk-comment-${nComment.id}`)\n          }\n\n          defaultPreset.postSubmitAdd(nComment)\n        }\n      })\n    })\n  }\n\n  private setReply(commentData: CommentData) {\n    const ui = this.kit.useUI()\n    if (!ui.$sendReplyBtn) {\n      const $btn = Utils.createElement(\n        `<span class=\"atk-state-btn\">` +\n          `<span class=\"atk-text-wrap\">` +\n          `${$t('reply')} <span class=\"atk-text\"></span>` +\n          `</span>` +\n          `<span class=\"atk-cancel\">×</span>` +\n        `</span>`\n      )\n      $btn.querySelector<HTMLElement>('.atk-text')!.innerText = `@${commentData.nick}`\n      $btn.addEventListener('click', () => {\n        this.kit.useEditor().resetState()\n      })\n      ui.$stateWrap.append($btn)\n      ui.$sendReplyBtn = $btn\n    }\n\n    this.comment = commentData\n\n    ui.$textarea.focus()\n  }\n\n  private cancelReply() {\n    if (!this.comment) return\n\n    const ui = this.kit.useUI()\n    if (ui.$sendReplyBtn) {\n      ui.$sendReplyBtn.remove()\n      ui.$sendReplyBtn = undefined\n    }\n    this.comment = undefined\n  }\n}\n","import type { CommentData } from '@/types'\nimport $t from '@/i18n'\nimport * as Utils from '@/lib/utils'\nimport type PlugKit from './_kit'\nimport EditorPlug from './_plug'\nimport Submit from './submit'\n\nexport default class StateEdit extends EditorPlug {\n  private comment?: CommentData\n\n  constructor(kit: PlugKit) {\n    super(kit)\n\n    // add effect when state switch to `edit`\n    this.useEditorStateEffect('edit', (comment) => {\n      this.edit(comment)\n\n      return () => {\n        this.cancelEdit()\n      }\n    })\n\n    // register submit preset\n    this.kit.useMounted(() => {\n      const submitPlug = this.kit.useDeps(Submit)\n      if (!submitPlug) throw Error(\"SubmitPlug not initialized\")\n\n      submitPlug.registerCustom({\n        activeCond: () => !!this.comment, // active this custom submit when edit mode\n        req: async () => {\n          const saveData = {\n            content: this.kit.useEditor().getContentFinal(),\n            nick: this.kit.useUI().$nick.value,\n            email: this.kit.useUI().$email.value,\n            link: this.kit.useUI().$link.value,\n          }\n          const comment = this.comment!\n          const nComment = await this.kit.useApi().comments.updateComment(comment.id, {\n            ...comment, ...saveData\n          })\n          return nComment.data\n        },\n        post: (nComment: CommentData) => {\n          this.kit.useGlobalCtx().getData().updateComment(nComment)\n        }\n      })\n    })\n  }\n\n  private edit(comment: CommentData) {\n    const ui = this.kit.useUI()\n    if (!ui.$editCancelBtn) {\n      const $btn = Utils.createElement(\n        `<span class=\"atk-state-btn\">` +\n          `<span class=\"atk-text-wrap\">` +\n          `${$t('editCancel')}` +\n          `</span>` +\n          `<span class=\"atk-cancel\">×</span>` +\n        `</span>`\n      )\n      $btn.onclick = () => {\n        this.kit.useEditor().resetState()\n      }\n      ui.$stateWrap.append($btn)\n      ui.$editCancelBtn = $btn\n    }\n    this.comment = comment\n\n    ui.$header.style.display = 'none' // TODO: support modify header information\n\n    ui.$nick.value = comment.nick || ''\n    ui.$email.value = comment.email || ''\n    ui.$link.value = comment.link || ''\n\n    this.kit.useEditor().setContent(comment.content)\n    ui.$textarea.focus()\n\n    this.updateSubmitBtnText($t('save'))\n  }\n\n  private cancelEdit() {\n    if (!this.comment) return\n\n    const ui = this.kit.useUI()\n\n    if (ui.$editCancelBtn) {\n      ui.$editCancelBtn.remove()\n      ui.$editCancelBtn = undefined\n    }\n\n    this.comment = undefined\n\n    const { nick, email, link } = this.kit.useUser().getData()\n    ui.$nick.value = nick\n    ui.$email.value = email\n    ui.$link.value = link\n\n    this.kit.useEditor().setContent('')\n    this.restoreSubmitBtnText()\n\n    ui.$header.style.display = '' // TODO: support modify header information\n  }\n\n  // -------------------------------------------------------------------\n  //  Submit Btn Text Modifier\n  // -------------------------------------------------------------------\n\n  private originalSubmitBtnText = 'Send'\n\n  private updateSubmitBtnText(text: string) {\n    this.originalSubmitBtnText = this.kit.useUI().$submitBtn.innerText\n    this.kit.useUI().$submitBtn.innerText = text\n  }\n\n  private restoreSubmitBtnText() {\n    this.kit.useUI().$submitBtn.innerText = this.originalSubmitBtnText\n  }\n}\n","import * as Utils from '@/lib/utils'\nimport $t from '@/i18n'\nimport EditorPlug from './_plug'\nimport type PlugKit from './_kit'\n\nexport default class Closable extends EditorPlug {\n  constructor(kit: PlugKit) {\n    super(kit)\n\n    const onOpen = () => this.open()\n    const onClose = () => this.close()\n\n    this.kit.useMounted(() => {\n      this.kit.useEvents().on('editor-open', onOpen)\n      this.kit.useEvents().on('editor-close', onClose)\n    })\n    this.kit.useUnmounted(() => {\n      this.kit.useEvents().off('editor-open', onOpen)\n      this.kit.useEvents().off('editor-close', onClose)\n    })\n  }\n\n  private open() {\n    this.kit.useUI().$textareaWrap.querySelector('.atk-comment-closed')?.remove()\n    this.kit.useUI().$textarea.style.display = ''\n    this.kit.useUI().$bottom.style.display = ''\n  }\n\n  private close() {\n    if (!this.kit.useUI().$textareaWrap.querySelector('.atk-comment-closed'))\n      this.kit.useUI().$textareaWrap.prepend(Utils.createElement(`<div class=\"atk-comment-closed\">${$t('onlyAdminCanReply')}</div>`))\n\n    if (!this.kit.useUser().getData().isAdmin) {\n      this.kit.useUI().$textarea.style.display = 'none'\n      this.kit.useEvents().trigger('panel-close')\n      this.kit.useUI().$bottom.style.display = 'none'\n    } else {\n      // 管理员一直打开评论\n      this.kit.useUI().$textarea.style.display = ''\n      this.kit.useUI().$bottom.style.display = ''\n    }\n  }\n}\n","import EditorPlug from './_plug'\nimport type PlugKit from './_kit'\n\nexport default class HeaderEvent extends EditorPlug {\n  private get $inputs() {\n    return this.kit.useEditor().getHeaderInputEls()\n  }\n\n  constructor(kit: PlugKit) {\n    super(kit)\n\n    const inputEventFns: {[name: string]: () => void} = {}\n    const changeEventFns: {[name: string]: () => void} = {}\n\n    const trigger = (evt: 'header-input'|'header-change', $input: HTMLInputElement, field: string) => () => {\n      this.kit.useEvents().trigger(evt, { field, $input })\n    }\n\n    this.kit.useMounted(() => {\n      // batch bind the events\n      Object.entries(this.$inputs).forEach(([key, $input]) => {\n        $input.addEventListener('input', inputEventFns[key] = trigger('header-input', $input, key))\n        $input.addEventListener('change', changeEventFns[key] = trigger('header-change', $input, key))\n      })\n    })\n\n    this.kit.useUnmounted(() => {\n      // unmount the event\n      Object.entries(this.$inputs).forEach(([key, $input]) => {\n        $input.removeEventListener('input', inputEventFns[key])\n        $input.removeEventListener('change', changeEventFns[key])\n      })\n    })\n  }\n}\n","import $t from '@/i18n'\nimport type { UserInfoApiResponseData } from '@/types'\nimport EditorPlug from './_plug'\nimport type PlugKit from './_kit'\n\nexport default class HeaderUser extends EditorPlug {\n  constructor(kit: PlugKit) {\n    super(kit)\n\n    const onInput = ({ $input, field }: { $input: HTMLInputElement, field: string }) => {\n      if (this.kit.useEditor().getState() === 'edit')\n        return // TODO: prevent execute when editing, since update comment.user not support\n\n      // update user data\n      this.kit.useUser().update({ [field]: $input.value.trim() })\n\n      // remote fetch user info\n      if (field === 'nick' || field === 'email')\n        this.fetchUserInfo() // must after update user data, since fetchUserInfo() will use User.data\n    }\n\n    this.kit.useMounted(() => {\n      Object.entries(this.kit.useEditor().getHeaderInputEls())\n        .forEach(([key, $input]) => {\n          // set placeholder\n          $input.placeholder = `${$t(key as any)}`\n\n          // sync header values from User.data\n          $input.value = this.kit.useUser().getData()[key] || ''\n        })\n\n      // bind events\n      this.kit.useEvents().on('header-input', onInput)\n    })\n\n    this.kit.useUnmounted(() => {\n      this.kit.useEvents().off('header-input', onInput)\n    })\n  }\n\n  private query = {\n    timer: <number|null>null,\n    abortFn: <(() => void)|null>null\n  }\n\n  /**\n   * Fetch user info from server\n   */\n  private fetchUserInfo() {\n    this.kit.useUser().logout() // clear login status\n\n    if (this.query.timer) window.clearTimeout(this.query.timer) // clear the not executed timeout task\n    if (this.query.abortFn) this.query.abortFn() // abort the last request (if request is pending not finished)\n\n    this.query.timer = window.setTimeout(() => {\n      this.query.timer = null // clear the timer (clarify the timer is executing)\n\n      const api = this.kit.useApi()\n      const CANCEL_TOKEN = 'getUserCancelToken'\n      this.query.abortFn = () => api.abortRequest(CANCEL_TOKEN)\n\n      api.user.getUser({ ...api.getUserFields() }, {\n        cancelToken: CANCEL_TOKEN\n      }).then(res => this.onUserInfoFetched(res.data))\n        .catch((err) => {})\n        .finally(() => {\n          this.query.abortFn = null // clear the abort function (clarify the request is finished)\n        })\n    }, 400) // delay to reduce request\n  }\n\n  /**\n   * Function called when user info fetched\n   *\n   * @param data The response data from server\n   */\n  private onUserInfoFetched(\n    data: UserInfoApiResponseData\n  ) {\n    // If api response is not login, logout\n    if (!data.is_login) this.kit.useUser().logout()\n\n    // Update unread notifies\n    this.kit.useGlobalCtx().getData().updateNotifies(data.notifies)\n\n    // If user is admin and not login,\n    if (this.kit.useUser().checkHasBasicUserInfo() && !data.is_login && data.user?.is_admin) {\n      // then show login window\n      this.kit.useGlobalCtx().checkAdmin({\n        onSuccess: () => {}\n      })\n    }\n\n    // Auto fill user link from server\n    if (data.user && data.user.link) {\n      this.kit.useUI().$link.value = data.user.link\n      this.kit.useUser().update({ link: data.user.link })\n    }\n  }\n}\n","import EditorPlug from './_plug'\nimport type PlugKit from './_kit'\n\nexport default class HeaderLink extends EditorPlug {\n  constructor(kit: PlugKit) {\n    super(kit)\n\n    const onLinkChange = ({ field }: { field: string }) => {\n      if (field === 'link') this.onLinkInputChange()\n    }\n\n    // bind events\n    this.kit.useMounted(() => {\n      this.kit.useEvents().on('header-change', onLinkChange)\n    })\n\n    this.kit.useUnmounted(() => {\n      this.kit.useEvents().off('header-change', onLinkChange)\n    })\n  }\n\n  private onLinkInputChange() {\n    // auto and force add protocol prefix for user input link\n    const link = this.kit.useUI().$link.value.trim()\n    if (!!link && !/^(http|https):\\/\\//.test(link)) {\n      this.kit.useUI().$link.value = `https://${link}`\n      this.kit.useUser().update({ link: this.kit.useUI().$link.value })\n    }\n  }\n}\n","import './emoticons.scss'\n\nimport type { EmoticonListData, EmoticonGrpData } from '@/types'\nimport * as Utils from '@/lib/utils'\nimport * as Ui from '@/lib/ui'\nimport $t from '@/i18n'\nimport EditorPlug from './_plug'\nimport type PlugKit from './_kit'\n\ntype OwOFormatType = {\n  [key: string] : {\n    type: 'emoticon'|'emoji'|'image',\n    container: {icon: string, text: string}[]\n  }\n}\n\nexport default class Emoticons extends EditorPlug {\n  private emoticons: EmoticonListData = []\n  private loadingTask: Promise<void>|null = null\n\n  private $grpWrap!: HTMLElement\n  private $grpSwitcher!: HTMLElement\n\n  constructor(kit: PlugKit) {\n    super(kit)\n\n    this.kit.useMounted(() => {\n      this.usePanel(`<div class=\"atk-editor-plug-emoticons\"></div>`)\n      this.useBtn(`<i aria-label=\"${$t('emoticon')}\"><svg fill=\"currentColor\" aria-hidden=\"true\" height=\"14\" viewBox=\"0 0 14 14\" width=\"14\"><path d=\"m4.26829 5.29294c0-.94317.45893-1.7074 1.02439-1.7074.56547 0 1.02439.76423 1.02439 1.7074s-.45892 1.7074-1.02439 1.7074c-.56546 0-1.02439-.76423-1.02439-1.7074zm4.43903 1.7074c.56546 0 1.02439-.76423 1.02439-1.7074s-.45893-1.7074-1.02439-1.7074c-.56547 0-1.02439.76423-1.02439 1.7074s.45892 1.7074 1.02439 1.7074zm-1.70732 2.73184c-1.51883 0-2.06312-1.52095-2.08361-1.58173l-1.29551.43231c.03414.10244.868 2.51604 3.3798 2.51604 2.51181 0 3.34502-2.41291 3.37982-2.51604l-1.29484-.43573c-.02254.06488-.56683 1.58583-2.08498 1.58583zm7-2.73252c0 3.86004-3.1401 7.00034-7 7.00034s-7-3.1396-7-6.99966c0-3.86009 3.1401-7.00034 7-7.00034s7 3.14025 7 7.00034zm-1.3659 0c0-3.10679-2.5275-5.63442-5.6341-5.63442-3.10663 0-5.63415 2.52832-5.63415 5.6351 0 3.10676 2.52752 5.63446 5.63415 5.63446 3.1066 0 5.6341-2.5277 5.6341-5.63446z\"/></svg></i>`)\n    })\n    this.kit.useUnmounted(() => {})\n\n    this.useContentTransformer((raw) => this.transEmoticonImageText(raw))\n    this.usePanelShow(() => {\n      ;(async () => {\n        await this.loadEmoticonsData()\n\n        // 初始化元素\n        if (!this.isImgLoaded) {\n          this.initEmoticonsList()\n          this.isImgLoaded = true\n        }\n\n        // 延迟执行，防止无法读取高度\n        setTimeout(() => {\n          this.changeListHeight()\n        }, 30)\n      })()\n    })\n    this.usePanelHide(() => {\n      this.$panel!.parentElement!.style.height = ''\n    })\n\n    // 表情包预加载\n    window.setTimeout(() => {\n      this.loadEmoticonsData()\n    }, 1000) // 延迟 1s 加载\n  }\n\n  private isListLoaded = false\n  private isImgLoaded = false\n\n  public async loadEmoticonsData() {\n    if (this.isListLoaded) return\n    if (this.loadingTask !== null) {\n      await this.loadingTask\n      return\n    }\n\n    // 数据处理\n    this.loadingTask = (async () => {\n      Ui.showLoading(this.$panel!)\n      this.emoticons = await this.handleData(this.kit.useConf().emoticons)\n      Ui.hideLoading(this.$panel!)\n      this.loadingTask = null\n      this.isListLoaded = true\n    })()\n    await this.loadingTask\n  }\n\n  private async handleData(data: any): Promise<any[]> {\n    if (!Array.isArray(data) && ['object', 'string'].includes(typeof data)) {\n      data = [data]\n    }\n\n    if (!Array.isArray(data)) {\n      Ui.setError(this.$panel!, `[${$t('emoticon')}] Data must be of Array/Object/String type`)\n      Ui.hideLoading(this.$panel!)\n      return []\n    }\n\n    const pushGrp = (grp: EmoticonGrpData) => {\n      if (typeof grp !== 'object') return\n      if (grp.name && data.find(o => o.name === grp.name)) return\n      data.push(grp)\n    }\n\n    // 加载子内容\n    const remoteLoad = async (d: any[]) => {\n      await Promise.all(d.map(async (grp, index) => {\n        if (typeof grp === 'object' && !Array.isArray(grp)) {\n          pushGrp(grp)\n        } else if (Array.isArray(grp)) {\n          await remoteLoad(grp)\n        } else if (typeof grp === \"string\") {\n          const grpData = await this.remoteLoad(grp)\n\n          if (Array.isArray(grpData)) await remoteLoad(grpData)\n          else if (typeof grpData === 'object') pushGrp(grpData)\n        }\n      }))\n    }\n    await remoteLoad(data)\n\n    // 处理数组数据\n    data.forEach((item: any) => {\n      if (this.isOwOFormat(item)) {\n        const c = this.convertOwO(item)\n        c.forEach((grp) => { pushGrp(grp) })\n      } else if (Array.isArray(item)) {\n        item.forEach((grp) => { pushGrp(grp) })\n      }\n    })\n\n    // 剔除非法数据\n    data = data.filter((item: any) => (typeof item === 'object' && !Array.isArray(item) && !!item && !!item.name))\n\n    // console.log(data)\n\n    this.solveNullKey(data)\n    this.solveSameKey(data)\n\n    return data\n  }\n\n  /** 远程加载 */\n  private async remoteLoad(url: string): Promise<any> {\n    if (!url) return []\n\n    try {\n      const resp = await fetch(url)\n      const json = await resp.json()\n      return json\n    } catch (err) {\n      Ui.hideLoading(this.$panel!)\n      console.error('[Emoticons] Load Failed:', err)\n      Ui.setError(this.$panel!, `[${$t('emoticon')}] ${$t('loadFail')}: ${String(err)}`)\n      return []\n    }\n  }\n\n  /** 避免表情 item.key 为 null 的情况 */\n  private solveNullKey(data: EmoticonGrpData[]) {\n    data.forEach((grp) => {\n      grp.items.forEach((item, index) => {\n        if (!item.key) item.key = `${grp.name} ${index+1}`\n      })\n    })\n  }\n\n  /** 避免相同 item.key */\n  private solveSameKey(data: EmoticonGrpData[]) {\n    const tmp: {[key: string]: number} = {}\n    data.forEach((grp) => {\n      grp.items.forEach(item => {\n        if (!item.key || String(item.key).trim() === \"\") return\n        if (!tmp[item.key]) tmp[item.key] = 1\n        else tmp[item.key]++\n\n        if (tmp[item.key] > 1) item.key = `${item.key} ${tmp[item.key]}`\n      })\n    })\n  }\n\n  /** 判断是否为 OwO 格式 */\n  private isOwOFormat(data: any) {\n    try {\n      return (typeof data === 'object') && !!Object.values(data).length\n        && Array.isArray(Object.keys(Object.values<any>(data)[0].container))\n        && Object.keys(Object.values<any>(data)[0].container[0]).includes('icon')\n    } catch { return false }\n  }\n\n  /** 转换 OwO 格式数据 */\n  private convertOwO(owoData: OwOFormatType): EmoticonListData {\n    const dest: EmoticonListData = []\n    Object.entries(owoData).forEach(([grpName, grp]) => {\n      const nGrp: EmoticonGrpData = { name: grpName, type: grp.type, items: [] }\n      grp.container.forEach((item, index) => {\n        // 图片标签提取 src 属性值\n        const iconStr = item.icon\n        if (/<(img|IMG)/.test(iconStr)) {\n          const find = /src=[\"'](.*?)[\"']/.exec(iconStr)\n          if (find && find.length > 1) item.icon = find[1]\n        }\n        nGrp.items.push({ key: item.text || `${grpName} ${index+1}`, val: item.icon })\n      })\n      dest.push(nGrp)\n    })\n    return dest\n  }\n\n  /** 初始化表情列表界面 */\n  private initEmoticonsList() {\n    // 表情列表\n    this.$grpWrap = Utils.createElement(`<div class=\"atk-grp-wrap\"></div>`)\n    this.$panel!.append(this.$grpWrap)\n\n    this.emoticons.forEach((grp, index) => {\n      const $grp = Utils.createElement(`<div class=\"atk-grp\" style=\"display: none;\"></div>`)\n      this.$grpWrap.append($grp)\n      $grp.setAttribute('data-index', String(index))\n      $grp.setAttribute('data-grp-name', grp.name)\n      $grp.setAttribute('data-type', grp.type)\n      grp.items.forEach((item) => {\n        const $item = Utils.createElement(`<span class=\"atk-item\"></span>`)\n        $grp.append($item)\n\n        if (!!item.key && !(new RegExp(`^(${grp.name})?\\\\s?[0-9]+$`).test(item.key)))\n          $item.setAttribute('title', item.key)\n\n        if (grp.type === 'image') {\n          const imgEl = document.createElement('img')\n          imgEl.src = item.val\n          imgEl.alt = item.key\n          $item.append(imgEl)\n        } else {\n          $item.innerText = item.val\n        }\n\n        $item.onclick = () => {\n          if (grp.type === 'image') {\n            this.kit.useEditor().insertContent(`:[${item.key}]`)\n          } else {\n            this.kit.useEditor().insertContent(item.val || '')\n          }\n        }\n      })\n    })\n\n    // 表情分类切换 bar\n    if (this.emoticons.length > 1) {\n      this.$grpSwitcher = Utils.createElement(`<div class=\"atk-grp-switcher\"></div>`)\n      this.$panel!.append(this.$grpSwitcher)\n      this.emoticons.forEach((grp, index) => {\n        const $item = Utils.createElement('<span />')\n        $item.innerText = grp.name\n        $item.setAttribute('data-index', String(index))\n        $item.onclick = () => (this.openGrp(index))\n        this.$grpSwitcher.append($item)\n      })\n    }\n\n    // 默认打开第一个分类\n    if (this.emoticons.length > 0) this.openGrp(0)\n  }\n\n  /** 打开一个表情组 */\n  public openGrp(index: number) {\n    Array.from(this.$grpWrap.children).forEach((item) => {\n      const el = item as HTMLElement\n      if (el.getAttribute('data-index') !== String(index)) {\n        el.style.display = 'none'\n      } else {\n        el.style.display = ''\n      }\n    })\n\n    this.$grpSwitcher?.querySelectorAll('span.active').forEach(item => item.classList.remove('active'))\n    this.$grpSwitcher?.querySelector(`span[data-index=\"${index}\"]`)?.classList.add('active')\n\n    this.changeListHeight()\n  }\n\n  private changeListHeight() {\n    /* const listWrapHeight = Utils.getHeight(this.$grpWrapem)\n    this.editor.plugWrapEl.style.height = `${listWrapHeight > 150 ? listWrapHeight : 150}px` */\n  }\n\n  /** 处理评论 content 中的表情内容 */\n  public transEmoticonImageText(text: string) {\n    if (!this.emoticons || !Array.isArray(this.emoticons))\n      return text\n\n    this.emoticons.forEach((grp) => {\n      if (grp.type !== 'image') return\n      Object.entries(grp.items).forEach(([index, item]) => {\n        text = text.split(`:[${item.key}]`).join(`<img src=\"${item.val}\" atk-emoticon=\"${item.key}\">`) // replaceAll(...)\n      })\n    })\n\n    return text\n  }\n}\n","import * as Utils from '@/lib/utils'\nimport $t from '@/i18n'\nimport type PlugKit from './_kit'\nimport EditorPlug from './_plug'\n\n/** 允许的图片格式 */\nconst AllowImgExts = ['png', 'jpg', 'jpeg', 'gif', 'bmp', 'svg', 'webp']\n\nexport default class Upload extends EditorPlug {\n  private $imgUploadInput?: HTMLInputElement\n\n  constructor(kit: PlugKit) {\n    super(kit)\n\n    this.kit.useMounted(() => this.init())\n\n    this.initDragImg()\n  }\n\n  private init() {\n    this.$imgUploadInput = document.createElement('input')\n    this.$imgUploadInput.type = 'file'\n    this.$imgUploadInput.style.display = 'none'\n    this.$imgUploadInput.accept = AllowImgExts.map(o => `.${o}`).join(',')\n\n    // TODO: Use btn cannot refresh when mounted event is triggered\n    const $btn = this.useBtn(`<i aria-label=\"${$t('uploadImage')}\"><svg fill=\"currentColor\" aria-hidden=\"true\" height=\"14\" viewBox=\"0 0 14 14\" width=\"14\"><path d=\"m0 1.94444c0-1.074107.870333-1.94444 1.94444-1.94444h10.11116c1.0741 0 1.9444.870333 1.9444 1.94444v10.11116c0 1.0741-.8703 1.9444-1.9444 1.9444h-10.11116c-1.074107 0-1.94444-.8703-1.94444-1.9444zm1.94444-.38888c-.21466 0-.38888.17422-.38888.38888v7.06689l2.33333-2.33333 2.33333 2.33333 3.88888-3.88889 2.3333 2.33334v-5.51134c0-.21466-.1742-.38888-.3888-.38888zm10.49996 8.09977-2.3333-2.33333-3.88888 3.8889-2.33333-2.33334-2.33333 2.33334v.8447c0 .2146.17422.3888.38888.3888h10.11116c.2146 0 .3888-.1742.3888-.3888zm-7.1944-6.54422c-.75133 0-1.36111.60978-1.36111 1.36111 0 .75134.60978 1.36111 1.36111 1.36111s1.36111-.60977 1.36111-1.36111c0-.75133-.60978-1.36111-1.36111-1.36111z\"/></svg></i>`)\n    $btn.after(this.$imgUploadInput)\n    $btn.onclick = () => {\n      // 选择图片\n      const $input = this.$imgUploadInput!\n      $input.onchange = () => {\n        (async () => { // 解决阻塞 UI 问题\n          if (!$input.files || $input.files.length === 0) return\n          const file = $input.files[0]\n          this.uploadImg(file)\n        })()\n      }\n      $input.click() // 显示选择图片对话框\n    }\n\n    if (!this.kit.useConf().imgUpload) {\n      this.$btn!.setAttribute('atk-only-admin-show', '')\n    }\n  }\n\n  private initDragImg() {\n    // 统一从 FileList 获取文件并上传图片方法\n    const uploadFromFileList = (files?: FileList) => {\n      if (!files) return\n\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i]\n        this.uploadImg(file)\n      }\n    }\n\n    // 拖拽图片\n    // @link https://developer.mozilla.org/zh-CN/docs/Web/API/HTML_Drag_and_Drop_API/File_drag_and_drop\n    // 阻止浏览器的默认释放行为\n    const onDragover = (evt: Event) => {\n      evt.stopPropagation()\n      evt.preventDefault()\n    }\n\n    const onDrop = (evt: DragEvent) => {\n      const files = evt.dataTransfer?.files\n      if (files?.length) {\n        evt.preventDefault()\n        uploadFromFileList(files)\n      }\n    }\n\n    // 粘贴图片\n    const onPaste = (evt: ClipboardEvent) => {\n      const files = evt.clipboardData?.files\n      if (files?.length) {\n        evt.preventDefault()\n        uploadFromFileList(files)\n      }\n    }\n\n    this.kit.useMounted(() => {\n      this.kit.useUI().$textarea.addEventListener('dragover', onDragover)\n      this.kit.useUI().$textarea.addEventListener('drop', onDrop)\n      this.kit.useUI().$textarea.addEventListener('paste', onPaste)\n    })\n    this.kit.useUnmounted(() => {\n      this.kit.useUI().$textarea.removeEventListener('dragover', onDragover)\n      this.kit.useUI().$textarea.removeEventListener('drop', onDrop)\n      this.kit.useUI().$textarea.removeEventListener('paste', onPaste)\n    })\n  }\n\n  async uploadImg(file: File) {\n    const fileExt = /[^.]+$/.exec(file.name)\n    if (!fileExt || !AllowImgExts.includes(fileExt[0])) return\n\n    // 未登录提示\n    if (!this.kit.useUser().checkHasBasicUserInfo()) {\n      this.kit.useEditor().showNotify($t('uploadLoginMsg'), 'w')\n      return\n    }\n\n    // 插入图片前换一行\n    let insertPrefix = '\\n'\n    if (this.kit.useUI().$textarea.value.trim() === '') insertPrefix = ''\n\n    // 插入占位加载文字\n    const uploadPlaceholderTxt = `${insertPrefix}![](Uploading ${file.name}...)`\n    this.kit.useEditor().insertContent(uploadPlaceholderTxt)\n\n    // 上传图片\n    let resp: { public_url: string } | undefined\n    try {\n      const customUploaderFn = this.kit.useConf().imgUploader\n      if (!customUploaderFn) {\n        // 使用 Artalk 进行图片上传\n        resp = (await this.kit.useApi().upload.upload({ file })).data\n      } else {\n        // 使用自定义的图片上传器\n        resp = { public_url: await customUploaderFn(file) }\n      }\n    } catch (err: any) {\n      console.error(err)\n      this.kit.useEditor().showNotify(`${$t('uploadFail')}: ${err.msg}`, 'e')\n    }\n    if (!!resp && resp.public_url) {\n      let imgURL = resp.public_url as string\n\n      // 若为相对路径，加上 artalk server\n      if (!Utils.isValidURL(imgURL)) imgURL = Utils.getURLBasedOnApi({\n        base: this.kit.useConf().server,\n        path: imgURL,\n      })\n\n      // 上传成功插入图片\n      this.kit.useEditor().setContent(this.kit.useUI().$textarea.value.replace(uploadPlaceholderTxt, `${insertPrefix}![](${imgURL})`))\n    } else {\n      // 上传失败删除加载文字\n      this.kit.useEditor().setContent(this.kit.useUI().$textarea.value.replace(uploadPlaceholderTxt, ''))\n    }\n  }\n}\n","import './preview.scss'\n\nimport * as marked from '@/lib/marked'\nimport $t from '@/i18n'\nimport EditorPlug from './_plug'\nimport type PlugKit from './_kit'\n\nexport default class Preview extends EditorPlug {\n  private isPlugPanelShow = false\n\n  constructor(kit: PlugKit) {\n    super(kit)\n\n    this.kit.useMounted(() => {\n      this.usePanel(`<div class=\"atk-editor-plug-preview\"></div>`)\n\n      // initialize plug button\n      this.useBtn(`<i aria-label=\"${$t('preview')}\"><svg fill=\"currentColor\" aria-hidden=\"true\" viewBox=\"0 0 16 16\" width=\"16\" height=\"16\"><path fill-rule=\"evenodd\" d=\"M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z\"></path></svg></i>`)\n    })\n    this.kit.useUnmounted(() => {})\n\n    // function to update content\n    this.kit.useEvents().on('content-updated', (content) => {\n      this.isPlugPanelShow && this.updateContent()\n    })\n\n    this.usePanelShow(() => {\n      this.isPlugPanelShow = true\n      this.updateContent()\n    })\n    this.usePanelHide(() => {\n      this.isPlugPanelShow = false\n    })\n  }\n\n  updateContent() {\n    this.$panel!.innerHTML = this.kit.useEditor().getContentMarked()\n  }\n}\n","import type { ArtalkConfig } from '@/types'\nimport type EditorPlug from './_plug'\nimport LocalStorage from './local-storage'\nimport Textarea from './textarea'\nimport SubmitBtn from './submit-btn'\nimport Submit from './submit'\nimport StateReply from './state-reply'\nimport StateEdit from './state-edit'\nimport Closable from './closable'\nimport HeaderEvent from './header-event'\nimport HeaderUser from './header-user'\nimport HeaderLink from './header-link'\nimport Mover from './mover'\nimport Emoticons from './emoticons'\nimport Upload from './upload'\nimport Preview from './preview'\n\n/** The default enabled plugs */\nconst EDITOR_PLUGS: (typeof EditorPlug)[] = [\n  // Core\n  LocalStorage,\n  HeaderEvent, HeaderUser, HeaderLink,\n  Textarea,\n  Submit, SubmitBtn,\n  Mover, StateReply, StateEdit,\n  Closable,\n\n  // Extensions\n  Emoticons, Upload, Preview\n]\n\n/**\n * Get the enabled plugs by config\n */\nexport function getEnabledPlugs(conf: Pick<ArtalkConfig, 'imgUpload'|'emoticons'|'preview'|'editorTravel'>): (typeof EditorPlug)[] {\n  // The reference map of config and plugs\n  // (for check if the plug is enabled)\n  const confRefs = new Map<typeof EditorPlug, any>()\n  confRefs.set(Upload, conf.imgUpload)\n  confRefs.set(Emoticons, conf.emoticons)\n  confRefs.set(Preview, conf.preview)\n  confRefs.set(Mover, conf.editorTravel)\n\n  return EDITOR_PLUGS.filter(p => !confRefs.has(p) || !!confRefs.get(p))\n}\n","import type { PlugManager } from '../editor-kit'\nimport type EditorPlug from \"./_plug\"\n\n/**\n * PlugKit provides a set of methods to help you develop editor plug\n */\nexport default class PlugKit {\n  constructor(\n    private plugs: PlugManager\n  ) {\n  }\n\n  /** Use the editor */\n  useEditor() {\n    return this.plugs.editor\n  }\n\n  /**\n   * Use the context of global\n   *\n   * @deprecated The calls to this function should be reduced as much as possible\n   */\n  useGlobalCtx() {\n    return this.plugs.editor.ctx\n  }\n\n  /** Use the config of Artalk */\n  useConf() {\n    return this.plugs.editor.ctx.conf\n  }\n\n  /** Use the http api client */\n  useApi() {\n    return this.plugs.editor.ctx.getApi()\n  }\n\n  /** Use the user manager */\n  useUser() {\n    return this.plugs.editor.ctx.get('user')\n  }\n\n  /** Use the ui of editor */\n  useUI() {\n    return this.plugs.editor.getUI()\n  }\n\n  /** Use the events in editor scope */\n  useEvents() {\n    return this.plugs.getEvents()\n  }\n\n  /** Listen the event when plug is mounted */\n  useMounted(func: () => void) {\n    this.useEvents().on('mounted', func)\n  }\n\n  /** Listen the event when plug is unmounted */\n  useUnmounted(func: () => void) {\n    this.useEvents().on('unmounted', func)\n  }\n\n  /** Use the deps of other plug */\n  useDeps<T extends typeof EditorPlug>(plug: T) {\n    return this.plugs.get(plug)\n  }\n}\n","import type { EditorApi, ArtalkPlugin } from '@/types'\nimport EventManager from '@/lib/event-manager'\nimport { getEnabledPlugs } from './editor'\nimport EditorPlug from './editor/_plug'\nimport PlugKit from './editor/_kit'\n\nexport interface EditorEventPayloadMap {\n  'mounted': undefined\n  'unmounted': undefined\n  'header-input': { field: string, $input: HTMLInputElement }\n  'header-change': { field: string, $input: HTMLInputElement }\n  'content-updated': string\n  'panel-show': EditorPlug\n  'panel-hide': EditorPlug\n  'panel-close': undefined\n\n  'editor-close': undefined\n  'editor-open': undefined\n}\n\nexport const EditorKit: ArtalkPlugin = (ctx) => {\n  const editor = ctx.get('editor')\n\n  const editorPlugs = new PlugManager(editor)\n  ctx.inject('editorPlugs', editorPlugs)\n}\n\nexport class PlugManager {\n  private plugs: EditorPlug[] = []\n  private openedPlug: EditorPlug|null = null\n  private events = new EventManager<EditorEventPayloadMap>()\n\n  getPlugs() { return this.plugs }\n  getEvents() { return this.events }\n\n  private clear() {\n    this.plugs = []\n    this.events = new EventManager()\n    if (this.openedPlug) this.closePlugPanel()\n  }\n\n  constructor(\n    public editor: EditorApi\n  ) {\n    let confLoaded = false // config not loaded at first time\n    this.editor.ctx.watchConf([\n      'imgUpload', 'emoticons', 'preview', 'editorTravel', 'locale'\n    ], (conf) => {\n      // trigger unmount event will call all plugs' unmount function\n      // (this will only be called while conf reloaded, not be called at first time)\n      confLoaded && this.getEvents().trigger('unmounted')\n\n      // reset the plugs\n      this.clear()\n\n      // init the all enabled plugs\n      getEnabledPlugs(conf)\n        .forEach((Plug) => {\n          // create the plug instance\n          const kit = new PlugKit(this)\n          this.plugs.push(new Plug(kit))\n        })\n\n      // trigger event for plug initialization\n      this.getEvents().trigger('mounted')\n      confLoaded = true\n\n      // refresh the plug UI\n      this.loadPluginUI()\n    })\n\n    this.events.on('panel-close', () => this.closePlugPanel())\n  }\n\n  private loadPluginUI() {\n    // handle ui, clear and reset the plug btns and plug panels\n    this.editor.getUI().$plugPanelWrap.innerHTML = ''\n    this.editor.getUI().$plugPanelWrap.style.display = 'none'\n    this.editor.getUI().$plugBtnWrap.innerHTML = ''\n    // 防止穿透\n    this.editor.getUI().$el.addEventListener('click', (e) => {\n      e.stopPropagation()\n    })\n\n    // load the plug UI\n    this.plugs.forEach((plug) => this.loadPluginItem(plug))\n  }\n\n  /** Load the plug btn and plug panel on editor ui */\n  private loadPluginItem(plug: EditorPlug) {\n    const $btn = plug.$btn\n    if (!$btn) return\n    this.editor.getUI().$plugBtnWrap.appendChild($btn)\n\n    // bind the event when click plug btn\n    !$btn.onclick && ($btn.onclick = () => {\n      // removing the active class from all the buttons\n      this.editor.getUI().$plugBtnWrap\n        .querySelectorAll('.active')\n        .forEach(item => item.classList.remove('active'))\n\n      // if the plug is not the same as the openedPlug,\n      if (plug !== this.openedPlug) {\n        // then open the plug current clicked plug panel\n        this.openPlugPanel(plug)\n\n        // add active class for current plug panel\n        $btn.classList.add('active')\n      } else {\n        // then close the plug\n        this.closePlugPanel()\n      }\n    })\n\n    // initialization of plug panel\n    const $panel = plug.$panel\n    if ($panel) {\n      $panel.style.display = 'none'\n      this.editor.getUI().$plugPanelWrap.appendChild($panel)\n    }\n  }\n\n  get<T extends typeof EditorPlug>(plug: T) {\n    return this.plugs.find(p => p instanceof plug) as InstanceType<T> | undefined;\n  }\n\n  /** Open the editor plug panel */\n  openPlugPanel(plug: EditorPlug) {\n    this.plugs.forEach((aPlug) => {\n      const plugPanel = aPlug.$panel\n      if (!plugPanel) return\n\n      if (aPlug === plug) {\n        plugPanel.style.display = ''\n        this.events.trigger('panel-show', plug)\n      } else {\n        plugPanel.style.display = 'none'\n        this.events.trigger('panel-hide', plug)\n      }\n    })\n\n    this.editor.getUI().$plugPanelWrap.style.display = ''\n    this.openedPlug = plug\n  }\n\n  /** Close the editor plug panel */\n  closePlugPanel() {\n    if (!this.openedPlug) return\n\n    this.editor.getUI().$plugPanelWrap.style.display = 'none'\n    this.events.trigger('panel-hide', this.openedPlug)\n    this.openedPlug = null\n  }\n\n  /** Get the content which is transformed by plugs */\n  getTransformedContent(rawContent: string) {\n    let result = rawContent\n    this.plugs.forEach((aPlug) => {\n      if (!aPlug.contentTransformer) return\n      result = aPlug.contentTransformer(result)\n    })\n    return result\n  }\n}\n","import type { ContextApi, ArtalkPlugin, PageData } from '@/types'\nimport $t from '@/i18n'\n\nexport const WithEditor: ArtalkPlugin = (ctx) => {\n  let $closeCommentBtn: HTMLElement|undefined\n\n  // on Artalk mounted\n  // (after all components had mounted)\n  ctx.on('mounted', () => {\n    const list = ctx.get('list')\n\n    $closeCommentBtn = list.$el.querySelector<HTMLElement>('[data-action=\"admin-close-comment\"]')!\n\n    // bind editor close button click event\n    $closeCommentBtn.addEventListener('click', () => {\n      const page = ctx.getData().getPage()\n      if (!page) throw new Error('Page data not found')\n\n      page.admin_only = !page.admin_only\n      adminPageEditSave(ctx, page)\n    })\n  })\n\n  // on comment list loaded (it will include page data update)\n  ctx.on('page-loaded', (page) => {\n    const editor = ctx.get('editor')\n\n    // if page comment is closed\n    if (page?.admin_only === true) {\n      // then close editor\n      editor.getPlugs()?.getEvents().trigger('editor-close')\n      $closeCommentBtn && ($closeCommentBtn.innerText = $t('openComment'))\n    } else {\n      // the open editor\n      editor.getPlugs()?.getEvents().trigger('editor-open')\n      $closeCommentBtn && ($closeCommentBtn.innerText = $t('closeComment'))\n    }\n  })\n\n  ctx.on('list-loaded', (comments) => {\n    // 防止评论框被吞\n    ctx.editorResetState()\n  })\n}\n\n/** 管理员设置页面信息 */\nfunction adminPageEditSave(ctx: ContextApi, page: PageData) {\n  ctx.editorShowLoading()\n  ctx.getApi().pages.updatePage(page.id, page)\n    .then(({ data }) => {\n      ctx.getData().updatePage(data)\n    })\n    .catch(err => {\n      ctx.editorShowNotify(`${$t('editFail')}: ${err.msg || String(err)}`, 'e')\n    })\n    .finally(() => {\n      ctx.editorHideLoading()\n    })\n}\n","import type { ArtalkPlugin } from '@/types'\nimport * as Utils from '@/lib/utils'\n\nexport const Unread: ArtalkPlugin = (ctx) => {\n  ctx.on('comment-rendered', (comment) => {\n    // comment unread highlight\n    if (ctx.conf.listUnreadHighlight === true) {\n      const notifies = ctx.getData().getNotifies()\n      const notify = notifies.find(o => o.comment_id === comment.getID())\n\n      if (notify) {\n        // if comment contains in unread list\n        comment.getRender().setUnread(true)\n        comment.getRender().setOpenAction(() => {\n          window.open(notify.read_link)\n\n          // remove notify which has been read\n          ctx.getData().updateNotifies(notifies.filter(o => o.comment_id !== comment.getID()))\n        })\n      } else {\n        // comment not in unread list\n        comment.getRender().setUnread(false)\n      }\n    }\n  })\n\n  ctx.on('list-goto', (commentID) => {\n    const notifyKey = Utils.getQueryParam('atk_notify_key')\n    if (notifyKey) {\n      // mark as read\n      ctx.getApi().notifies.markNotifyRead(commentID, notifyKey)\n        .then(() => {\n          // remove from unread list\n          ctx.getData().updateNotifies(ctx.getData().getNotifies().filter(o => o.comment_id !== commentID))\n        })\n    }\n  })\n}\n","import type { ArtalkPlugin } from '@/types'\nimport * as Utils from '@/lib/utils'\nimport $t from '@/i18n'\n\nexport const Count: ArtalkPlugin = (ctx) => {\n  const refreshCountNumEl = () => {\n    const list = ctx.get('list')\n\n    const $count = list.$el.querySelector('.atk-comment-count .atk-text')\n    if (!$count) return\n\n    const text = Utils.htmlEncode($t('counter', { count: `${Number(ctx.getData().getListLastFetch()?.data?.count) || 0}` }))\n    $count.innerHTML = text.replace(/(\\d+)/, '<span class=\"atk-comment-count-num\">$1</span>')\n  }\n\n  ctx.on('list-loaded', () => {\n    refreshCountNumEl()\n  })\n\n  ctx.on('comment-inserted', () => {\n    // 评论数增加 1\n    const last = ctx.getData().getListLastFetch()\n    if (last?.data) last.data.count += 1\n  })\n\n  ctx.on('comment-deleted', () => {\n    // 评论数减 1\n    const last = ctx.getData().getListLastFetch()\n    if (last?.data) last.data.count -= 1\n  })\n}\n","import type { ArtalkPlugin } from '@/types'\nimport $t from '@/i18n'\n\nexport const SidebarBtn: ArtalkPlugin = (ctx) => {\n  let $openSidebarBtn: HTMLElement|null = null\n\n  const syncByUser = () => {\n    if (!$openSidebarBtn) return\n    const user = ctx.get('user').getData()\n\n    // 已输入个人信息\n    if (!!user.nick && !!user.email) {\n      $openSidebarBtn.classList.remove('atk-hide')\n\n      // update button text (normal user or admin)\n      const $btnText = $openSidebarBtn.querySelector<HTMLElement>('.atk-text')\n      if ($btnText) $btnText.innerText = (!user.isAdmin) ? $t('msgCenter') : $t('ctrlCenter')\n    } else {\n      $openSidebarBtn.classList.add('atk-hide')\n    }\n  }\n\n  ctx.watchConf(['locale'], (conf) => {\n    const list = ctx.get('list')\n\n    $openSidebarBtn = list.$el.querySelector<HTMLElement>('[data-action=\"open-sidebar\"]')\n    if (!$openSidebarBtn) return\n\n    $openSidebarBtn.onclick = () => { // use onclick rather than addEventListener to prevent duplicate event\n      ctx.showSidebar()\n    }\n\n    syncByUser()\n  })\n\n  ctx.on('user-changed', (user) => {\n    syncByUser()\n  })\n}\n","import type { ArtalkPlugin } from '@/types'\n\nexport const UnreadBadge: ArtalkPlugin = (ctx) => {\n  let $unreadBadge: HTMLElement|null = null\n\n  const showUnreadBadge = (count: number) => {\n    if (!$unreadBadge) return\n\n    if (count > 0) {\n      $unreadBadge.innerText = `${Number(count || 0)}`\n      $unreadBadge.style.display = 'block'\n    } else {\n      $unreadBadge.style.display = 'none'\n    }\n  }\n\n  ctx.on('mounted', () => {\n    const list = ctx.get('list')\n\n    $unreadBadge = list.$el.querySelector<HTMLElement>('.atk-unread-badge')\n  })\n\n  ctx.on('notifies-updated', (notifies) => {\n    showUnreadBadge(notifies.length || 0)\n  })\n}\n","import type { ArtalkPlugin } from '@/types'\nimport * as Utils from '@/lib/utils'\n\nexport const GotoDispatcher: ArtalkPlugin = (ctx) => {\n  let lastID = 0\n  const check = ({ locker }: { locker: boolean }) => {\n    const commentID = extractCommentID()\n    if (!commentID) return\n\n    if (locker && lastID === commentID) return  // if the commentID is the same as the last one, do nothing\n    lastID = commentID  // record the last commentID\n\n    ctx.trigger('list-goto', commentID) // trigger event\n  }\n\n  const hashChangeHandler = () => check({ locker: false })\n  const listLoadedHandler = () => check({ locker: true })\n  ctx.on('mounted', () => {\n    window.addEventListener('hashchange', hashChangeHandler)\n    ctx.on('list-loaded', listLoadedHandler)\n  })\n  ctx.on('unmounted', () => {\n    window.removeEventListener('hashchange', hashChangeHandler)\n    ctx.off('list-loaded', listLoadedHandler)\n  })\n}\n\nfunction extractCommentID(): number|null {\n  // Try get from hash\n  // Hash retrieval priority is higher than query,\n  // Because click goto will change hash.\n  const match = window.location.hash.match(/#atk-comment-([0-9]+)/)\n  let commentId = match && match[1] && !Number.isNaN(parseFloat(match[1])) ? parseFloat(match[1]) : null\n\n  // Fail over to get from query\n  if (!commentId) {\n    commentId = Number(Utils.getQueryParam('atk_comment')) // same as backend GetReplyLink()\n  }\n\n  return commentId || null\n}\n","import type { ArtalkPlugin } from '@/types'\n\nexport const GotoFocus: ArtalkPlugin = (ctx) => {\n  ctx.on('list-goto', async (commentID) => {\n    // find the comment node\n    let comment = ctx.getCommentNodes().find(c => c.getID() === commentID)\n    if (!comment) {\n      // fetch and insert the comment from the server\n      const data = (await ctx.getApi().comments.getComment(commentID)).data\n      ctx.get('list').getListLayout({ forceFlatMode: true }).insert(data.comment, data.reply_comment)\n      comment = ctx.getCommentNodes().find(c => c.getID() === commentID)\n    }\n    if (!comment) return\n    comment.focus()\n  })\n}\n\n","import type { ArtalkPlugin } from '@/types'\nimport { version as ARTALK_VERSION } from '~/package.json'\n\nexport const Copyright: ArtalkPlugin = (ctx) => {\n  ctx.on('mounted', () => {\n    const list = ctx.get('list')\n\n    const $copyright = list.$el.querySelector<HTMLElement>('.atk-copyright')\n    if (!$copyright) return\n\n    $copyright.innerHTML = (\n      `Powered By <a href=\"https://artalk.js.org\" ` +\n      `target=\"_blank\" title=\"Artalk v${ARTALK_VERSION}\">` +\n      `Artalk</a>`)\n  })\n}\n","import type { ArtalkPlugin } from '@/types'\nimport * as Utils from '@/lib/utils'\nimport { sanitize } from '@/lib/sanitizer'\n\nexport const NoComment: ArtalkPlugin = (ctx) => {\n  ctx.on('list-loaded', (comments) => {\n    const list = ctx.get('list')!\n\n    // 无评论\n    const isNoComment = comments.length <= 0\n    let $noComment = list.getCommentsWrapEl().querySelector<HTMLElement>('.atk-list-no-comment')\n\n    if (isNoComment) {\n      if (!$noComment) {\n        $noComment = Utils.createElement('<div class=\"atk-list-no-comment\"></div>')\n\n        // sanitize before set innerHTML\n        $noComment.innerHTML = sanitize(list.ctx.conf.noComment || list.ctx.$t('noComment'))\n        list.getCommentsWrapEl().appendChild($noComment)\n      }\n    } else {\n      $noComment?.remove()\n    }\n  })\n}\n","import type { ArtalkPlugin } from '@/types'\nimport * as Utils from '@/lib/utils'\nimport $t from '@/i18n'\n\nexport const Dropdown: ArtalkPlugin = (ctx) => {\n  const reloadUseParamsEditor = (func: (p: any) => void) => {\n    ctx.conf.listFetchParamsModifier = func\n    ctx.reload()\n  }\n\n  const initDropdown = ($dropdownOn: HTMLElement) => {\n    renderDropdown({\n      $dropdownWrap: $dropdownOn,\n      dropdownList: [\n        [$t('sortLatest'), () => { reloadUseParamsEditor(p => { p.sort_by = 'date_desc' }) }],\n        [$t('sortBest'), () => { reloadUseParamsEditor(p => { p.sort_by = 'vote' }) }],\n        [$t('sortOldest'), () => { reloadUseParamsEditor(p => { p.sort_by = 'date_asc' }) }],\n        [$t('sortAuthor'), () => { reloadUseParamsEditor(p => { p.view_only_admin = true }) }],\n      ]\n    })\n  }\n\n  ctx.watchConf(['listSort', 'locale'], (conf) => {\n    const list = ctx.get('list')\n\n    const $count = list.$el.querySelector<HTMLElement>('.atk-comment-count')\n    if (!$count) return\n\n    // 评论列表排序 Dropdown 下拉选择层\n    if (conf.listSort) {\n      initDropdown($count)\n    } else {\n      removeDropdown({\n        $dropdownWrap: $count\n      })\n    }\n  })\n}\n\n/** 评论排序方式选择下拉菜单 */\nfunction renderDropdown(conf: {\n  $dropdownWrap: HTMLElement,\n  dropdownList: [string, () => void][]\n}) {\n  const { $dropdownWrap, dropdownList } = conf\n  if ($dropdownWrap.querySelector('.atk-dropdown')) return\n\n  // 修改 class\n  $dropdownWrap.classList.add('atk-dropdown-wrap')\n\n  // 插入图标\n  $dropdownWrap.append(Utils.createElement(`<span class=\"atk-arrow-down-icon\"></span>`))\n\n  // 列表项点击事件\n  let curtActive = 0 // 当前选中\n  const onItemClick = (i: number, $item: HTMLElement, name: string, action: Function) => {\n    action()\n\n    // set active\n    curtActive = i\n    $dropdown.querySelectorAll('.active').forEach((e) => { e.classList.remove('active') })\n    $item.classList.add('active')\n\n    // 关闭层 (临时消失，取消 :hover)\n    $dropdown.style.display = 'none'\n    setTimeout(() => { $dropdown.style.display = '' }, 80)\n  }\n\n  // 生成列表元素\n  const $dropdown = Utils.createElement(`<ul class=\"atk-dropdown atk-fade-in\"></ul>`)\n  dropdownList.forEach((item, i) => {\n    const name = item[0] as string\n    const action = item[1] as Function\n\n    const $item = Utils.createElement(`<li class=\"atk-dropdown-item\"><span></span></li>`)\n    const $link = $item.querySelector<HTMLElement>('span')!\n    $link.innerText = name\n    $link.onclick = () => { onItemClick(i, $item, name, action) }\n    $dropdown.append($item)\n\n    if (i === curtActive) $item.classList.add('active') // 默认选中项\n  })\n\n  $dropdownWrap.append($dropdown)\n}\n\n/** 删除评论排序方式选择下拉菜单 */\nfunction removeDropdown(conf: {\n  $dropdownWrap: HTMLElement\n}) {\n  const { $dropdownWrap } = conf\n  $dropdownWrap.classList.remove('atk-dropdown-wrap')\n  $dropdownWrap.querySelector('.atk-arrow-down-icon')?.remove()\n  $dropdownWrap.querySelector('.atk-dropdown')?.remove()\n}\n","import type { ArtalkPlugin } from '@/types'\nimport * as Utils from '@/lib/utils'\n\n/** 评论时间自动更新 */\nexport const TimeTicking: ArtalkPlugin = (ctx) => {\n  let timer: number|null = null\n\n  ctx.on('mounted', () => {\n    timer = window.setInterval(() => {\n      const list = ctx.get('list')\n\n      list.$el.querySelectorAll<HTMLElement>('[data-atk-comment-date]').forEach(el => {\n        const date = el.getAttribute('data-atk-comment-date')\n        el.innerText = Utils.timeAgo(new Date(Number(date)), ctx.$t)\n      })\n    }, 30 * 1000) // 30s 更新一次\n  })\n\n  ctx.on('unmounted', () => {\n    timer && window.clearInterval(timer)\n  })\n}\n","import type { ArtalkPlugin, ContextApi } from '@/types'\nimport { showErrorDialog } from '@/components/error-dialog'\nimport * as Ui from '../../lib/ui'\n\nexport const ErrorDialog: ArtalkPlugin = (ctx) => {\n  ctx.on('list-fetch', () => {\n    const list = ctx.get('list')\n\n    // clear the original error when a new fetch is triggered\n    Ui.setError(list.$el, null)\n  })\n\n  ctx.on('list-failed', (err) => {\n    showErrorDialog({\n      $err: ctx.get('list').$el,\n      errMsg: err.msg,\n      errData: err.data,\n      retryFn: () => ctx.fetch({ offset: 0 })\n    })\n  })\n}\n\n","import type { ArtalkPlugin } from '@/types'\nimport * as Ui from '@/lib/ui'\n\nexport const Loading: ArtalkPlugin = (ctx) => {\n  ctx.on('list-fetch', (p) => {\n    const list = ctx.get('list')\n\n    if (p.offset === 0) // only show loading when fetch first page\n      Ui.setLoading(true, list.$el)\n    // else if not first page, show loading in paginator (code not there)\n  })\n\n  ctx.on('list-fetched', () => {\n    const list = ctx.get('list')\n    Ui.setLoading(false, list.$el)\n  })\n}\n","import type { ListFetchParams, ArtalkPlugin } from '@/types'\n\nexport const Fetch: ArtalkPlugin = (ctx) => {\n  ctx.on('list-fetch', (_params) => {\n    if (ctx.getData().getLoading()) return\n    ctx.getData().setLoading(true)\n\n    const params: ListFetchParams = {\n      // default params\n      offset: 0,\n      limit: ctx.conf.pagination.pageSize,\n      flatMode: ctx.conf.flatMode as boolean, // always be boolean because had been handled in Artalk.init\n      paramsModifier: ctx.conf.listFetchParamsModifier,\n      ..._params\n    }\n\n    // must before other function call\n    ctx.getData().setListLastFetch({\n      params\n    })\n\n    // prepare params for request\n    const reqParams = {\n      limit: params.limit,\n      offset: params.offset,\n      flat_mode: params.flatMode,\n      page_key: ctx.getConf().pageKey,\n      site_name: ctx.getConf().site,\n    }\n\n    // call the modifier function\n    if (params.paramsModifier) params.paramsModifier(reqParams)\n\n    // start request\n    ctx.getApi().comments\n      .getComments({\n        ...reqParams,\n        ...ctx.getApi().getUserFields()\n      })\n      .then(({ data }) => {\n        // Must before all other function call and event trigger,\n        // because it will depend on the lastData\n        // TODO: this is global variable, easy to use, but not good, consider to refactor.\n        // refactor work is hard, because it is used in many places.\n        ctx.getData().setListLastFetch({ params, data })\n\n        // 装置评论\n        ctx.getData().loadComments(data.comments)\n\n        // 更新页面数据\n        ctx.getData().updatePage(data.page)\n\n        // trigger events when success\n        params.onSuccess && params.onSuccess(data)\n\n        ctx.trigger('list-fetched', { params, data })\n      })\n      .catch((e) => {\n        // 显示错误对话框\n        const error = {\n          msg: e.msg || String(e),\n          data: e.data\n        }\n\n        params.onError && params.onError(error)\n\n        // trigger events when error\n        ctx.trigger('list-failed', error)\n        ctx.trigger('list-fetched', { params, error })\n\n        throw e\n      })\n      .finally(() => {\n        ctx.getData().setLoading(false)\n      })\n  })\n}\n","import type { ArtalkPlugin } from '@/types'\n\nexport const ReachBottom: ArtalkPlugin = (ctx) => {\n  let observer: IntersectionObserver|null = null\n\n  const setupObserver = ($target: HTMLElement) => {\n    const scrollEvtAt = (ctx.conf.scrollRelativeTo && ctx.conf.scrollRelativeTo()) || null\n\n    // eslint-disable-next-line compat/compat\n    observer = new IntersectionObserver(([entries]) => {\n      if (entries.isIntersecting) {\n        clearObserver() // clear before trigger event to avoid trigger twice `list-reach-bottom`\n\n        // note that this event will be triggered only once\n        // until the next list is loaded\n        ctx.trigger('list-reach-bottom')\n      }\n    }, {\n      threshold: 0.9, // when the target is 90% visible\n\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/root\n      // If the root is null, then the bounds of the actual document viewport are used.\n      root: scrollEvtAt\n    })\n    observer.observe($target)\n  }\n\n  const clearObserver = () => {\n    observer?.disconnect()\n    observer = null\n  }\n\n  ctx.on('list-loaded', () => {\n    clearObserver()\n\n    const list = ctx.get('list')\n\n    // get the second last child\n    const children = list.getCommentsWrapEl().childNodes\n    const $target = children.length > 2 ? children[children.length - 2] as HTMLElement : null\n    if (!$target) return\n\n    // check IntersectionObserver support\n    if (!('IntersectionObserver' in window)) {\n      console.warn('IntersectionObserver api not supported')\n      return\n    }\n\n    // use IntersectionObserver to detect reach bottom\n    setupObserver($target)\n  })\n\n  ctx.on('unmounted', () => {\n    clearObserver()\n  })\n}\n","import type { ArtalkPlugin } from '@/types'\nimport * as Utils from '@/lib/utils'\n\n/** List scroll to the first comment */\nexport const GotoFirst: ArtalkPlugin = (ctx) => {\n  const handler = () => {\n    const list = ctx.get('list')\n\n    const $relative = ctx.conf.scrollRelativeTo && ctx.conf.scrollRelativeTo()\n    ;($relative || window).scroll({\n      top: Utils.getOffset(list.$el, $relative).top,\n      left: 0,\n    })\n  }\n\n  ctx.on('mounted', () => {\n    ctx.on('list-goto-first', handler)\n  })\n\n  ctx.on('unmounted', () => {\n    ctx.off('list-goto-first', handler)\n  })\n}\n","import type { ArtalkPlugin } from '@/types'\nimport { WithEditor } from './with-editor'\nimport { Unread } from './unread'\nimport { Count } from './count'\nimport { SidebarBtn } from './sidebar-btn'\nimport { UnreadBadge } from './unread-badge'\nimport { GotoDispatcher } from './goto-dispatcher'\nimport { GotoFocus } from './goto-focus'\nimport { Copyright } from './copyright'\nimport { NoComment } from './no-comment'\nimport { Dropdown } from './dropdown'\nimport { TimeTicking } from './time-ticking'\nimport { ErrorDialog } from './error-dialog'\nimport { Loading } from './loading'\nimport { Fetch } from './fetch'\nimport { ReachBottom } from './reach-bottom'\nimport { GotoFirst } from './goto-first'\n\nconst ListPlugins: ArtalkPlugin[] = [\n  Fetch, Loading, Unread,\n  WithEditor, Count, SidebarBtn, UnreadBadge,\n  Dropdown, GotoDispatcher, GotoFocus, NoComment, Copyright,\n  TimeTicking, ErrorDialog, ReachBottom, GotoFirst\n]\n\nexport { ListPlugins }\n","import type { ArtalkPlugin } from '@/types'\n\nexport const Notifies: ArtalkPlugin = (ctx) => {\n  ctx.on('list-fetch', (params) => {\n    if (params.offset !== 0) return\n\n    const user = ctx.getApi().getUserFields()\n    if (!user) return\n\n    // Fetch all unread notifies\n    ctx.getApi().notifies.getNotifies(user).then(res => {\n      ctx.getData().updateNotifies(res.data.notifies)\n    })\n  })\n}\n","import type { ContextApi, ArtalkPlugin, ArtalkConfig } from '@/types'\nimport { Api } from '@/api'\n\nexport interface CountOptions {\n  getApi(): Api\n\n  siteName: string\n  pageKey?: string\n  pageTitle?: string\n  countEl: string\n  pvEl: string\n\n  /** 是否增加当前页面 PV 数 */\n  pvAdd?: boolean\n}\n\nexport const PvCountWidget: ArtalkPlugin = (ctx: ContextApi) => {\n  ctx.watchConf([\n    'site', 'pageKey', 'pageTitle', 'countEl', 'pvEl',\n  ], (conf) => {\n    initCountWidget({\n      getApi: () => ctx.getApi(),\n      siteName: conf.site,\n      pageKey: conf.pageKey,\n      pageTitle: conf.pageTitle,\n      countEl: conf.countEl,\n      pvEl: conf.pvEl,\n      pvAdd: (typeof ctx.conf.pvAdd === 'boolean' ? ctx.conf.pvAdd : true),\n    })\n  })\n}\n\n/** 初始化评论数和 PV 数量展示元素 */\nexport async function initCountWidget(opt: CountOptions) {\n  // 评论数\n  if (opt.countEl && document.querySelector(opt.countEl)) {\n    refreshStatCount(opt, { query: 'page_comment', numEl: opt.countEl })\n  }\n\n  // PV\n  const initialData = (opt.pvAdd && opt.pageKey) ? {\n    [opt.pageKey]: (await opt.getApi().pages.logPv({\n      page_key: opt.pageKey,\n      page_title: opt.pageTitle,\n      site_name: opt.siteName,\n    })).data.pv // pv+1 and get pv count\n  } : undefined\n\n  if (opt.pvEl && document.querySelector(opt.pvEl)) {\n    refreshStatCount(opt, {\n      query: 'page_pv',\n      numEl: opt.pvEl,\n      data: initialData,\n    })\n  }\n}\n\ntype CountData = { [pageKey: string]: number }\n\nasync function refreshStatCount(\n  opt: CountOptions,\n  args: {\n    query: 'page_pv' | 'page_comment'\n    numEl: string\n    data?: CountData\n  }\n) {\n  let data: CountData = args.data || {}\n\n  // Get page keys which will be queried\n  let queryPageKeys = Array.from(document.querySelectorAll(args.numEl))\n    .map((e) => e.getAttribute('data-page-key') || opt.pageKey)\n    .filter((k) => k && typeof data[k] !== 'number') // filter out keys that already have data\n\n  queryPageKeys = [...new Set(queryPageKeys)] // deduplicate\n\n  // Fetch count data from server\n  if (queryPageKeys.length > 0) {\n    const res = (await opt.getApi().stats.getStats(args.query, {\n      page_keys: queryPageKeys.join(','),\n      site_name: opt.siteName,\n    })).data.data as CountData\n    data = { ...data, ...res }\n  }\n\n  const defaultCount = opt.pageKey ? data[opt.pageKey] : 0\n  applyCountData(args.numEl, data, defaultCount)\n}\n\nfunction applyCountData(selector: string, data: CountData, defaultCount: number) {\n  document.querySelectorAll(selector).forEach((el) => {\n    const pageKey = el.getAttribute('data-page-key')\n    const count = Number(pageKey ? (data[pageKey]) : defaultCount)\n    el.innerHTML = `${count}`\n  })\n}\n","import type { ArtalkPlugin } from '@/types'\nimport { version as ARTALK_VERSION } from '~/package.json'\nimport type List from '~/src/list/list'\nimport * as Ui from '@/lib/ui'\nimport * as Utils from '@/lib/utils'\nimport $t from '@/i18n'\n\nlet IgnoreVersionCheck = false\n\nexport const VersionCheck: ArtalkPlugin = (ctx) => {\n  ctx.watchConf(['apiVersion', 'versionCheck'], (conf) => {\n    const list = ctx.get('list')\n    if (conf.apiVersion && conf.versionCheck && !IgnoreVersionCheck)\n      versionCheck(list, ARTALK_VERSION, conf.apiVersion)\n  })\n}\n\nfunction versionCheck(list: List, feVer: string, beVer: string) {\n  const comp = Utils.versionCompare(feVer, beVer)\n  const sameVer = (comp === 0)\n  if (sameVer) return\n\n  const errEl = Utils.createElement(\n    `<div>${$t('updateMsg', { name: (comp < 0) ? $t('frontend') : $t('backend') })}` +\n    `<br/><br/><span style=\"color: var(--at-color-meta);\">` +\n    `${$t('currentVersion')}: ${$t('frontend')} ${feVer} / ${$t('backend')} ${beVer}` +\n    `</span><br/><br/></div>`)\n  const ignoreBtn = Utils.createElement(`<span style=\"cursor:pointer\">${$t('ignore')}</span>`)\n  ignoreBtn.onclick = () => {\n    Ui.setError(list.$el.parentElement!, null)\n    IgnoreVersionCheck = true\n    list.ctx.fetch({ offset: 0 })\n  }\n  errEl.append(ignoreBtn)\n  Ui.setError(list.$el.parentElement!, errEl, '<span class=\"atk-warn-title\">Artalk Warn</span>')\n}\n","import type { ArtalkPlugin } from '@/types'\n\nexport const AdminOnlyElem: ArtalkPlugin = (ctx) => {\n  const scanApply = () => {\n    applyAdminOnlyEls(ctx.get('user').getData().isAdmin, getAdminOnlyEls({\n      $root: ctx.$root\n    }))\n  }\n\n  ctx.on('list-loaded', () => {\n    scanApply()\n  })\n\n  ctx.on('user-changed', (user) => {\n    scanApply()\n  })\n}\n\nfunction getAdminOnlyEls(opts: { $root: HTMLElement }): HTMLElement[] {\n  const els: HTMLElement[] = []\n\n  // elements in $root\n  opts.$root.querySelectorAll<HTMLElement>(`[atk-only-admin-show]`).forEach(item => els.push(item))\n\n  // TODO: provide a Artalk.conf hook to set whitelist of admin-only elements,\n  // and move following code to that hook (move into @artalk/artalk-sidebar)\n\n  // elements in sidebar\n  const $sidebarEl = document.querySelector<HTMLElement>('.atk-sidebar')\n  if ($sidebarEl) $sidebarEl.querySelectorAll<HTMLElement>(`[atk-only-admin-show]`).forEach(item => els.push(item))\n\n  return els\n}\n\nfunction applyAdminOnlyEls(isAdmin: boolean, els: HTMLElement[]) {\n  els.forEach(($item: HTMLElement) => {\n    if (isAdmin) $item.classList.remove('atk-hide')\n    else $item.classList.add('atk-hide')\n  })\n}\n","import type { ArtalkPlugin } from '@/types'\n\n// Notice: Singleton pattern needs to be loaded as lazy as possible,\n//         because the SSG application does not have a `window` context.\nlet darkModeMedia: MediaQueryList | undefined\n\nfunction updateClassnames($els: HTMLElement[], darkMode: boolean) {\n  const DarkModeClassName = 'atk-dark-mode'\n\n  $els.forEach($el => {\n    if (darkMode) $el.classList.add(DarkModeClassName)\n    else $el.classList.remove(DarkModeClassName)\n  })\n}\n\nexport const DarkMode: ArtalkPlugin = (ctx) => {\n  // the handler bind to Artalk instance, don't forget to remove it when Artalk instance destroyed\n  let darkModeAutoHandler: ((evt: MediaQueryListEvent) => void) | undefined\n\n  const sync = (darkMode: boolean|'auto') => {\n    // the elements that classnames need to be updated when darkMode changed\n    const $els = [ctx.$root, ctx.get('layerManager').getEl()]\n\n    // init darkModeMedia if not exists, and only create once\n    if (!darkModeMedia) {\n      darkModeMedia = window.matchMedia('(prefers-color-scheme: dark)')\n    }\n\n    if (darkMode === 'auto') {\n      // if darkMode is 'auto', add handler\n      if (!darkModeAutoHandler) {\n        // the handler that will be called when darkModeMedia changed\n        darkModeAutoHandler = (evt) => updateClassnames($els, evt.matches)\n        darkModeMedia.addEventListener('change', darkModeAutoHandler)\n      }\n\n      // update classnames immediately\n      updateClassnames($els, darkModeMedia.matches)\n    } else {\n      // if darkMode is boolean, remove handler\n      if (darkModeAutoHandler) {\n        darkModeMedia.removeEventListener('change', darkModeAutoHandler)\n        darkModeAutoHandler = undefined\n      }\n\n      // update classnames immediately\n      updateClassnames($els, darkMode)\n    }\n  }\n\n  ctx.watchConf(['darkMode'], (conf) => sync(conf.darkMode))\n  ctx.on('created', () => sync(ctx.conf.darkMode))\n  ctx.on('unmounted', () => {\n    // if handler exists, don't forget to remove it, or it will cause memory leak\n    darkModeAutoHandler && darkModeMedia?.removeEventListener('change', darkModeAutoHandler)\n    darkModeAutoHandler = undefined\n  })\n}\n","import type { ArtalkPlugin } from '@/types'\nimport { ConfRemoter } from './conf-remoter'\nimport { Markdown } from './markdown'\nimport { EditorKit } from './editor-kit'\nimport { ListPlugins } from './list'\nimport { Notifies } from './notifies'\nimport { PvCountWidget } from './stat'\nimport { VersionCheck } from './version-check'\nimport { AdminOnlyElem } from './admin-only-elem'\nimport { DarkMode } from './dark-mode'\n\nexport const DefaultPlugins: ArtalkPlugin[] = [\n  ConfRemoter,\n  Markdown, EditorKit, AdminOnlyElem,\n  ...ListPlugins,\n  Notifies,\n  PvCountWidget, VersionCheck, DarkMode,\n]\n","import './style/main.scss'\n\nimport type { ArtalkConfig, EventPayloadMap, ArtalkPlugin, ContextApi } from '@/types'\nimport type { EventHandler } from './lib/event-manager'\nimport Context from './context'\nimport { handelCustomConf, convertApiOptions } from './config'\nimport Services from './service'\nimport { DefaultPlugins } from './plugins'\nimport * as Stat from './plugins/stat'\nimport { Api } from './api'\nimport type { TInjectedServices } from './service'\n\n/** Global Plugins for all instances */\nconst GlobalPlugins: ArtalkPlugin[] = [ ...DefaultPlugins ]\n\n/**\n * Artalk\n *\n * @see https://artalk.js.org\n */\nexport default class Artalk {\n  public ctx!: ContextApi\n\n  /** Plugins */\n  protected plugins: ArtalkPlugin[] = [ ...GlobalPlugins ]\n\n  constructor(conf: Partial<ArtalkConfig>) {\n    // Init Config\n    const handledConf = handelCustomConf(conf, true)\n\n    // Init Context\n    this.ctx = new Context(handledConf)\n\n    // Init Services\n    Object.entries(Services).forEach(([name, initService]) => {\n      const obj = initService(this.ctx)\n      if (obj) this.ctx.inject(name as keyof TInjectedServices, obj) // auto inject deps to ctx\n    })\n\n    // Init Plugins\n    this.plugins.forEach(plugin => {\n      if (typeof plugin === 'function') plugin(this.ctx)\n    })\n\n    // Trigger created event\n    this.ctx.trigger('created')\n  }\n\n  /** Get the config of Artalk */\n  public getConf() {\n    return this.ctx.getConf()\n  }\n\n  /** Get the root element of Artalk */\n  public getEl() {\n    return this.ctx.$root\n  }\n\n  /** Update config of Artalk */\n  public update(conf: Partial<ArtalkConfig>) {\n    this.ctx.updateConf(conf)\n    return this\n  }\n\n  /** Reload comment list of Artalk */\n  public reload() {\n    this.ctx.reload()\n  }\n\n  /** Destroy instance of Artalk */\n  public destroy() {\n    this.ctx.trigger('unmounted')\n    this.ctx.$root.remove()\n  }\n\n  /** Add an event listener */\n  public on<K extends keyof EventPayloadMap>(name: K, handler: EventHandler<EventPayloadMap[K]>) {\n    this.ctx.on(name, handler)\n  }\n\n  /** Remove an event listener */\n  public off<K extends keyof EventPayloadMap>(name: K, handler: EventHandler<EventPayloadMap[K]>) {\n    this.ctx.off(name, handler)\n  }\n\n  /** Trigger an event */\n  public trigger<K extends keyof EventPayloadMap>(name: K, payload?: EventPayloadMap[K]) {\n    this.ctx.trigger(name, payload)\n  }\n\n  /** Set dark mode */\n  public setDarkMode(darkMode: boolean) {\n    this.ctx.setDarkMode(darkMode)\n  }\n\n  // ===========================\n  //       Static Members\n  // ===========================\n\n  /** Init Artalk */\n  public static init(conf: Partial<ArtalkConfig>): Artalk {\n    return new Artalk(conf)\n  }\n\n  /** Use plugin, the plugin will be used when Artalk.init */\n  public static use(plugin: ArtalkPlugin) {\n    if (GlobalPlugins.includes(plugin)) return\n    GlobalPlugins.push(plugin)\n  }\n\n  /** Load count widget */\n  public static loadCountWidget(c: Partial<ArtalkConfig>) {\n    const conf = handelCustomConf(c, true)\n\n    Stat.initCountWidget({\n      getApi: () => new Api(convertApiOptions(conf)),\n      siteName: conf.site,\n      countEl: conf.countEl,\n      pvEl: conf.pvEl,\n      pvAdd: false\n    })\n  }\n\n  // ===========================\n  //         Deprecated\n  // ===========================\n\n  /** @deprecated Please use `getEl()` instead */\n  public get $root() { return this.ctx.$root }\n\n  /** @description Please use `getConf()` instead */\n  public get conf() { return this.ctx.getConf() }\n}\n","import Artalk from './artalk'\nimport type * as ArtalkType from './types'\n\nexport type * from './types'\nexport { ArtalkType }\n\nexport default Artalk\n\n// Expose the static methods from the Artalk class\n// because direct export of static methods is not supported\n// for adapting to different environments like CommonJS and browser IIFE\n// for example, we can use `Artalk.init()` rather than `Artalk.default.init()`\n// therefore, we need to manually expose the static methods in the Artalk class.\nexport const init = Artalk.init\nexport const use = Artalk.use\nexport const loadCountWidget = Artalk.loadCountWidget\n"],"names":["abortController","data","instance","_getPrototypeOf","o","_setPrototypeOf","p","self","_get","Emitter","AbortSignal","AbortController","fetch","Request","init","abortableFetch","global","Fetch","Api","ApiV2","html","link","list","t","tag","text","block","parser","tokens","args","ret","src","marked","lowercase","toMap","require$$0","attributes","elements","he","require$$1","require$$3","require$$2","sanitizer","start","defaults","require$$4","insane","this","module","index","libMarked","Utils.htmlEncode","Defaults","I18n.t","marked.getInstance","Utils.createElement","$t","Ui.showLoading","Ui.hideLoading","render.iframeBody","render.imgBody","Ui.scrollIntoView","Ui.showNotify","Utils.getURLBasedOnApi","ListNest.makeNestCommentNodeList","version","Utils.getHeight","Utils.onImagesLoaded","Utils.isValidURL","render","Ui.playFadeInAnim","Avatar","Header","Content","ReplyAt","ReplyTo","Pending","Actions","HeightLimit.check","HeightLimit.disposeHeightLimit","CommentUI","Utils.getGravatarURL","Utils.timeAgo","UADetect","PaginationComponent","Ui.getScrollBarWidth","I18n.setLocale","Ui.setError","marked.initMarked","marked.setReplacers","Utils.getCorrectUserAgent","Utils.getQueryParam","check","ARTALK_VERSION","Ui.setLoading","Utils.getOffset","Utils.versionCompare","Services","Stat.initCountWidget"],"mappings":"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","x_google_ignoreList":[1,4,5,6,7,8,9,10,11,12,13,14,16]}